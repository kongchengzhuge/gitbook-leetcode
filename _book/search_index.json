{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["readme.md","我是如何做leetcod","我第一遍做leetcode的时候，做了一些简单题，觉得就算做不出也能看懂别人的思路，就开始看不起简单题。慢慢的，后面只做hard级别的题目，但是hard级别确实很难，需要很久时间。做了很多题目之后，发现自己前面做的已经忘了。","然后开始第二遍，这次我每个题目都会去做。很多easy的题，做到第一档速度其实也不是很容易。但是很多题当你把你的算法从o(n平方)优化到o(n)时，你会感觉到自己的进步。并且很多easy的题目是很多难题的基础。这一遍，我做了300多题，题数到了600多，每次碰到好题也会做做笔记，这样之后感觉自己做题能力提升很快。","现在已经做了300多道题了，之前一直在本地用word记录心得，现在在这里用gitbook记录。正好也借着这个机会第三次从头开始再做一遍，就当是复习了。","现在是第三遍，做第三遍的原因一是做了300多题了，该回头复习一下了。二是找到了gitbook这个很好的平台可以记录自己的","还有个做题的技巧就是，多做点赞数高的题，要是差评比点赞高，我基本都不会做。这种题不是测试用例恶心，就是题目没有意义。所以有时候我会跳过一两个题目。"],"1.-two-sum.html":["+","//first","//the","1.","11,","15],","1].","2","7","7,","9,","=","[0,","[2,","add","algorithm","analysi","array","assum","class","code","code中有一个循环，循环中进行的操作只有查找和插入hash，时间都是o(1)，所以最后时间复杂度是o(n)","descript","each","element","exactli","exampl","for(int","given","i=0;i","index","indic","input","int","integers,","ma;","map.first","map.second","num","number","nums,","nums[0]","nums[1]","nums[i]","on","problem","public:","repres","return","same","solut","solution,","specif","such","sum","sum和four","sum的基础，但是这里需要返回的是原来数组的下标值，而不是数字本身。所以这里用这种方法得不到答案","target","target)","target.","thought","twice.","two","twosum(vector&","unordered_map","up","us","valu","vector","{","之前的值。处理一个数据的时候首先在hash表中对比以下，如果存在就返回。这种方法在之后很多能一次便利出结果的解答里都会出现，用一个hash表保存前面遍历的状态，之后拿到状态再来对比。","第一种方法有两个循环每个循环运行n次，时间复杂度o(n平方)","第三种方法使用hash表解答。code中用的是unordered_map。一定要注意在c++中unordered_map和map之间的区别，前一个底层是hash表，后一个底层是红黑树。如果需要o(1)的插入，查找。需要使用unordered_map。","第三种方法是利用hash表一遍遍历得到解答，使用hash表保存target","第二种方法就是先排序，然后使用左右指针逼近，求得结果。这种方法也是之后three","第二种方法这里没有给出代码，根据算法思想，首先排序之后再左右指针。排序最快的时间复杂度是o(nlgn)，左右指针便利时间复杂度是o(n)，最后时间复杂度是o(nlgn)","这题可以用3种解法。如果是刚接触算法的，最开始想到的方法肯定是两个循环便利求解。"],"2.-add-two-numbers.html":["(2","(5","+","0","2.","3)","342","4","4)","465","6","7","8","807.","=",">",">next,(l1",">next,l2",">next=addtwonumbers(l1",">val+add)%10);",">val+add)/10);",">val+l2","add","add=0)","addtwonumbers(l1,l2,0);","addtwonumbers(listnode*","algorithm","algorthm","analysi","assum","class","code","contain","descript","digit","digit.","each","empti","exampl","except","explanation:","given","if(add==0)","if(l1==null){","if(l2==null){","input:","integers.","itself.","l1,","l1;","l1=new","l2,int","l2;","l2=new","lead","link","list","list.","listnode((l1","listnode(add);","listnode*","neg","node","non","number","order","output:","problem","public:","re","repres","res;","res=new","return","revers","singl","solut","store","thought","two","zero,","{","}","}//上面是递归基","};","}els","时间应该可以认为是o(n)，遍历一个链表。","用递归的思想去解题的话，首先想好每一个递归节点是如何设计的，然后设计好递归基处理结束清况。其实很类似数学归纳法。对于链表相加问题，将每个函数看成累加器的中的一个寄存器就行。每个节点的输入是两个数，还有前一个节点的进位。相加得到当前节点的值，将进位传给下一个函数。","虽然递归函数会在调用栈上消耗很多时间，相比于迭代解题会慢一点。但是递归函数比迭代更容易写，需要考虑的情况会少很多，并且大多数情况下其实慢不了太多。所以链表题和树题建议先考虑递归解法","观察知道，题目需要返回一个相加之后的链表。碰到链表题以及树类题目，尤其是返回一个链表或者树的时候，大概律用递归做会简单很多。"],"3.-longest-substring-without-repeating-characters.html":["\"abc\",","\"abcabcbb\"","\"b\",","\"bbbbb\"","\"pwke\"","\"pwwkew\"","\"wke\",","//快慢指针","0;","1","1);","1.","1:","2:","3","3.","3:","algorithm","analysi","answer","charact","characters.","class","code","descript","exampl","explanation:","find","for(int","given","head=1,last=0,res=1;","i=0;ileft){","if(s.size()==0)","input:","int","left);","left=pos[s[i]];","length","lengthoflongestsubstring(str","longest","note","output:","pos(256,","pos(256,0);","pos[s[i]]=i;","pos[s[last]]++;","problem","public:","repeat","res;","res=0;","res=max(res,i","return","s)","solut","string,","subsequ","substr","substring,","substring.","thought","vector","while(head","without","{","}","};","然而我看我第二次做的记录，发现第二次的方法更好(大概律是看discuss的)，每次不是记录出现的次数，而是记录字符的位置，每次碰到重复的可以直接跳转到相应的位置，而不是一次次慢慢走。","第三遍做这个题了，首先看到题目就觉得应该用快慢指针做。定义一个快指针，每次让快指针先走，快指针每走一步记录走过的字符。如果出现快指针走过的字符之前出现过一次，就让慢指针走。慢指针每走一步，擦除一个记录，如果擦出的刚好是快指针当前的字符，慢指针停止，又轮到快指针走。快指针每走一步计算一次快慢指针之差，最后返回最大的差值就行。","综合来看还是第二种方法更好","记录位置的方法:只有一个循环，不管什么清况都是运行n次，时间复杂度是o(n)。","首先分析快慢指针，快慢指针最坏情况是所有字符一样，最好情况是所有字符都不同。在输入为n的情况下，最坏情况需要运行2n次，最好情况需要运行n次。最好最坏都是o(n)的时间复杂度。"],"5.-longest-palindromic-substring.html":["\"\";","\"aba\"","\"bab\"","\"babad\"","\"bb\"","\"cbbd\"","//cout","1000.","1:","2:","5.",";","algorithm","analysi","answer.","assum","class","code","descript","exampl","find","for(int","given","i=0;i=0&&rightres){","if(s.size()==0)","input:","int","left;","left=i;right=i+1;","length","lm=0,rb=0,size=s.size();","lm=left;rb=right;","longest","longestpalindrome(str","maximum","note:","output:","palindrom","problem","public:","res=0;","res=right","return","right++;left","s","s)","s,","s.","solut","string","substr","thought","valid","while(left>=0&&rightres){","{","}","最坏情况下，所有字符都是一样的，每次都会进入子循环，时间复杂度是o(n平方)","最好情况下，所有字符都不一样，每次不会进入子循环，时间复杂度是o(n)","直接用遍历找回文串就行。遍历一次字符串，对每个字符串，将它当作一个回文串的中间，向两边扩散。比较得到最大值"],"6.-zigzag-conversion.html":["\"pahnaplsiigyir\"","\"paypalishiring\"","\"paypalishiring\",","\"pinalsigyahrpi\"","(you","1){","1:","2:","2;","2。然后再找到中间夹着的字符是如何分布的。","3","4","6.","=","algorithm","analysi","better","class","code","convers","convert(str","descript","display","exampl","explanation:","fix","font","for(int","g","given","h","i=0;i=s.size())","if(i!=0&&i!=numrow","if(j+step2","if(numrows==1)","input:","int","l","legibility)","line","line:","make","n","number","numrow","numrows)","numrows);","output:","p","pattern","problem","public:","r","read","res.push_back(s[j]);","res;","res=\"\";","return","row","rows:","s","s,","s;","solut","step2=step;","step=numrows*2","string","take","this:","thought","want","while(true){","write","written","y","zigzag","{","于是开始找规律，发现除了第一行和最后一行。中间每行都是两个纵向字符中夹着一个。首先找纵向字符的规律，每一行两个纵向字符位置差是，numrows*2","开始拿到这个题的时候，想法是直接构造一个二维数组，按照zigzag顺序把字符串存入其中。但是这种方法太慢了，也太占用空间了，很多地方都没有存数据。","虽然函数中是双重循环，但是子循环的步数很大。整个算法只需要遍历一遍字符串即可，时间复杂度是o(n)"],"7.-reverse-integer.html":["0","0;","120","123","1:","1].","1，就直接返回0。","21","231","2:","32","321","3:","7.","[−231,","algorithm","analysi","assum","bit","bo=true;","bo?i:","bool","class","code","deal","descript","digit","environ","exampl","function","given","i;","i=atol(s.c_str());","if(s.size()>10||(s.size()==10&&s>\"2147483647\"))","if(x\"2147483647\");","input:","int","integ","integer,","integer.","note:","output:","overflows.","problem","problem,","public:","purpos","range:","return","revers","reverse(int","sign","solut","store","thought","within","x)","{","}","};","−","初次拿到这题想到的方法肯定是，首先判断正负，然后按位处理。每次取模得到个位，将得到的个位加到存储的结果中。这种想法是没有问题，但是我觉得用字符串翻转更加易懂，并且需要考虑的条件比较少。首先判断正负，然后将数字转化为字符串。之后调用翻转函数。最后将翻转过的字符串变回数字，这时候要注意的是，首先处理末尾的0，这时候会被翻转到首位，然后考虑如果现在字符串大于int_max,也就是2^31","在整个算法中，to_string时间复杂度是o(n),reverse函数时间复杂度是o(n)，最后atol函数函数的时间复杂度也是o(n).算法中其他部分时间复杂度是o(1)。所以最后时间复杂度是o(n)。其实感觉直接用数学方法，每位处理可能比这个快一点，但是用字符串操作数字翻转问题还是很舒服的。"],"9.-palindrome-number.html":[".","//convert","01","10","121","121.","1:","1;","2:","3:","9.","algorithm","analysi","backward","becom","bool","class","code","convert","coud","descript","determin","exampl","explanation:","fals","follow","forward.","if(x","input:","int","integ","ispalindrome(int","left","left,","left.","left=0,right=","left=0,right=res.size()","number","output:","palindrom","palindrome.","problem","public:","read","res(10);","res.push_back(x%10);","res;","res[right]=x%10;","right","right++;","right,","same","solut","solv","string","string?","therefor","thought","true","up:","up要求能不能不用string结题。于是又开始想如何不用string，其实在c++中string的结构和vector很像，动态数组vector也很适合存储数字中的所有位。","whether","while(left","while(x){","without","x)","x/=10;","{","}","时间复杂度前两个算法其实都是一样的，都是o(n)。但是字符串的算法更快。我认为是由于每次vector调用push_back后扩容导致。于是想了一下能否提前知道vector的size。防止在运行时分配内存，想到input都是int类型，int_max只有10位，所以定义一个大小为10的数组足够了。改进了一下，发现效果不是很明显，因为大小为10的话，其实内存分配所消耗的资源也不是很多。但是之后很多题目，如果能减少vector或者unordered_map的内存加倍操作，也就是提前resize好大小，很多题目会快很多。","最开始拿到这题，发现，这不是跟第7题很类似吗。直接int2string，使用string来判断就是个很简单的题了。不到一分钟写完之后，发现description里的follow"],"10.-regular-expression-matchinghard.html":["\".*\"","\"a\"","\"a*\"","\"aa\"","\"aa\".","\"aab\"","\"aab\".","\"ab\"","\"c*a*b\"","\"mis*is*p*.\"","\"mississippi\"","\"zero","''","'*'","'*'.","'.'","'a'","'a'.","(*)","(.)\".","(not","(p),","(s)","*","*.",".","0","1","10.","1:","2:","3:","4:","5:","=","algorithm","analysi","b","becom","bool","c","charact","character.","class","code","contain","cover","descript","dp(s.size()+1,vector(p.size()+1,false));","dp[0][0]=true;","element,","element.","empti","entir","exampl","explanation:","express","fals","for(int","given","i=1;i","i]和p[0","implement","input","input:","ismatch(str","j]的匹配结果。每一个状态转移的时候，一定要分析全要考虑的前一个状态。这一题中就*号很特殊，他可以是一个也可以是零个也可以是多个。分析到*号的时候，需要考虑的前一个状态有点多。","letter","lowercas","match","mean","more","note:","once,","output:","p","p)","partial).","pattern","preced","problem","public:","regular","repeat","s","s,","singl","solut","string","support","therefore,","thought","time.","times,","true","vector>","z,","z.","zero","{","分析一次example4的二维数组是如何构造的","可能讲述的还是不清晰，建议先做简单的动态规划解法字符串匹配问题。比如最长公共子序列等问题，再来做这题会清晰很多。","定义了一个二维数组，如果s的长度为m，p的长度为n。二维数组就是一个m*n的矩形。算法需要遍历这个二维数组，循环中时间复杂度为o(1)，最后时间复杂度是o(mn)","正则表达式问题，两个字符串匹配。碰到字符串问题，一般都是动态规划问题，或者是字符串匹配的一些专门的算法，比如kmp这种。还有就是很多字符串，如果想要找到前缀重合之类的问题，就是trie字典树。正则表达式问题就是典型的动态规划解决的题目。使用一个二维数组保存每一个状态，横纵坐标ij表示s[0","首先考虑一般情况，如果两个字符相等了，只需要查看左上角的bool值即可，如果匹配当前也是匹配的。如果是一个点，那也好说，直接按照相等来匹配。关键就是如何匹配*。我们来回顾一下*的定义，首先可以是0个，0个的话，直接查看靠左两个方格的bool值即可，比如c*和空字符比较，也就是第一排前三个。两个空字符肯定是匹配的，值为1，c和空字符肯定不匹配，格子值为0，c*是和空字符匹配的，因为可以是0个c，所以，直接观察左边两个格子的值即可。然后考虑1个的情况，现在可以换一种思想，如果当前行列匹配需要1个字符，那么上一行和当前列匹配肯定是只需要0个字符，如果上一行成功匹配，那么这一行肯定也成功。同理可得1个或者多个匹配的话，只需要看上一个格子是否满足条件即可。"],"11.-container-with-most-water.html":["(i,",",","...,","0).","11.","1;","2.","49","[1,8,6,2,5,4,8,3,7]","a1,","a2,","ai)","ai).","algorithm","analysi","axi","class","code","contain","container,","coordin","descript","drawn","each","endpoint","example:","find","form","given","height)","i=0,j=height.size()","input:","int","integ","line","lines,","maxarea(vector&","n","neg","non","note:","output:","point","problem","public:","repres","res=0;","slant","solut","such","sum中第二个方法，左右指针法。现在回顾一下two","sum双指针法，首先sort数组，然后左右向中间逼近。这里面也用到了一中额外条件，就是数组已经有序，如果和小于target，就将小的变大一点，也就是left++，反之大的减小。","thought","togeth","two","vertic","water","water.","while(i","x","{","这个代码很简单，时间复杂度是o(n)","这题我们也定义左右指针，每次都计算容量，最后取最大值。关键是左右指针如何移动。哪边的柱子更小我就移动哪个，因为移动必定导致宽度减小，只有靠高度增高，才有可能提高总容量，所以这样移动不会漏掉最大值","首先分析如果想装更多的水，我们需要两个柱子隔得越远越好，并且两个柱子中较矮的那根柱子也会决定装水的量。直接暴力法应该是很多人第一次就想到的方法，两个循环，遍历每一种组合。但是这题还有个条件，就是两个隔得越远，更大容量的概率会大很多。其实这里也用到了之前two"],"14.-longest-common-prefix.html":["\"\"","\"\".","\"\";","\"fl\"","14.","1:","2:","[\"dog\",\"racecar\",\"car\"]","[\"flower\",\"flow\",\"flight\"]","algorithm","amongst","analysi","array","class","code","common","empti","exampl","explanation:","find","for(int","function","given","i=0;i","if(strs.size()==0)","if(strs.size()==1)","input","input:","letter","longest","longestcommonprefix(vector&","lowercas","note:","output:","prefix","prefix,","public:","res=\"\";","return","solut","string","strings.","strs)","strs[0];","thought","write","z","{","以第一个字符串为基准，从第一个字符开始，对比所有字符串。出现不一样的就返回，都是一样的就加入到返回值后面。","其实整个算法的逻辑是不需要判断size==1的，也就是第一行。但是如果不判断的话，就会在循环中一直判断并且调用push_back到res中，会及其耗时间。加上第一个判断之后，整个代码运行时会快很多的。"],"15.-3sum.html":["+","0,","0?","1,","15.","1],","2,","2]","3sum","4],",";","=","[","]","a,","algorithm","analysi","array","b","b,","c","class","code","contain","descript","duplic","element","example:","find","for(int","give","given","i){i为0","i=0;i","integers,","is:","n","note:","num","nums)","n}次。循环需要时间复杂度是o(n平方)，最后算法的时间复杂度是o(n平方)。","problem","public:","res.push_back(tmp);","res;","return","right","set","solut","sort(nums.begin(),nums.end());","such","sum","sum为基础来解决这题。这里要求3个数加起来为0，也就是两个数加起来为零减去另一个数，这样就成了two","sum了，首先sort一下数组，这样，之后two","sum的时候能直接用左右指针逼近需求值。记得考虑如何识别一样的结果，这里题目要求不能有重复结果。","thought","threesum(vector&","tmp.push_back(nums[i]);","tmp.push_back(nums[left]);","tmp.push_back(nums[right]);","tmp;","triplet","triplets.","uniqu","vector>","while(leftsum)","zero.","{","}","};","以之前的two","排序需要o(nlgn)时间复杂度，算法中有两个循环，外层循环执行n次，内层循环执行(n","第三次做的时候，发现第二次的解答有可以优化的地方。在外层循环遍历到大于0的数的时候，就可以直接返回结果了。时间从96ms提升到了88ms。"],"16.3sum-closest.html":["16.3sum",";","class","closest","code","for(int","i=0;i0?left++:right","int","nums,","public:","return","solut","sort(nums.begin(),nums.end());","sum;","sum=nums[0]+nums[1]+nums[2];","target)","threesumclosest(vector&","{","}","};","这题和15题算法基本一模一样，就是判断相等改成的找到最相近的，"],"17.-letter-combinations-of-a-phone-number.html":["\"23\"","\"ae\",","\"af\",","\"bd\",","\"be\",","\"bf\",","\"cd\",","\"ce\",","\"cf\"].","'0')","(just","1","17.","2","2;","4个字符，如果都是代表3个字符。那么每次遍历的通量就是3个，如果输入digit","9","[\"ad\",","abov","algorithm","although","analysi","answer","below.","buttons)","class","code","combin","conbin(res,digits,0,\"\");","conbin(vector&","contain","descript","digit","digits)","digits,int","example:","for(int","given","i=0;i","if(digits.size()==0)","if(pos==digits.size()){","inclusive,","input:","int","letter","lettercombinations(str","letters.","lexicograph","ma[8]={\"abc\",\"def\",\"ghi\",\"jkl\",\"mno\",\"pqrs\",\"tuv\",\"wxyz\"};","map","note","note:","num=int(digits[pos]","number","order","order,","output:","phone","pos,str","possibl","problem","public:","represent.","res,str","res.push_back(tmp);","res;","return","return;","size是n","solut","string","telephon","thought","tmp){","vector","void","want.","{","}","典型的回溯法，没有任何需要剪枝的地方，直接深度优先遍历所有的结果，并保存。","时间复杂度就是o(3^n)","每个数字代表3"],"18.-4sum.html":["//cout","18.","4sum",";","class","code","foursum(vector&","if(nums.size()sum)","int","left++;","nums,","public:","res;","right","solut","sort(nums.begin(),nums.end());","target)","vector>","{","这题和15题算法基本一模一样"],"19.-remove-nth-node-from-end-of-list.html":["*","*/","*next;","/**","1","1);","19.","2.",":","=",">2",">3",">4",">5,",">5.",">next",">next){",">next;",">next=head;",">next=second","algorithm","alway","analysi","becom","class","code","definit","descript","end","end,","example:","follow","given","head,","head.","head=head","int","link","list","list,","list.","list:","listnod","listnode(","listnode(int","listnode*","n","n)","n){","next(null)","node","note:","nth","on","pass?","problem","public:","remov","removenthfromend(listnode*","return","second","second=second","second=tmp;","singli","solut","struct","th","thought","tmp","tmp=new","up:","val(x),","val;","valid.","while(","while(head","x)","{","{}","}","};","一次遍历，时间复杂度o(n)","但是链表找第倒数第几个节点有个小技巧，就是前后指针。比如这里的倒数第n个节点，我们首先让前指针先走n步，然后后指针和前指针一起行动。当前指针到终点的时候，后指针这时候正好在倒数第n个节点。这样就能实现一边遍历就能删除节点。","删除倒数第n个链表中的节点。链表不像数组，不能直接按index访问。所有人第一次做这种题肯定是想先遍历一遍得出长度，然后在删除倒数第n个。","同样还有一种快慢指针，多用于求链表中点的。快慢指针都是从head点出发，一个每次走两步一个每次走一步，当快指针到tail节点的时候，慢指针正好在中点。"],"20.-valid-parentheses.html":["\"()\"","\"()[]{}\"","\"([)]\"","\"(]\"","\"{[]}\"","'(',","')',","'['","']',","'{',","'}',","1:","20.","2:","3:","4:","5:","algorithm","analysi","bool","bracket","brackets.","ch:s){","charact","class","close","code","consid","contain","correct","descript","determin","empti","exampl","fals","false;","for(auto","given","if(ch==')'){","if(ch==']'){","if(ch=='}'){","if(st.empty()||st.top()!='(')","if(st.empty()||st.top()!='[')","if(st.empty()||st.top()!='{')","if:","input","input:","isvalid(str","note","open","order.","output:","parenthes","problem","public:","return","s)","same","solut","st.empty();","st.pop();","st.push(ch);","st;","stack","string","thought","true","type","valid","valid.","{","}","};","}els","一个循环线性处理一个字符串，时间复杂度o(n)。","括号匹配问题在上数据结构课上也是会讲的。没学过数据结构之前可能很难相出用栈来做这题，学完之后就很显然了。其实栈的用处很大，在之后很多地方也会用到。线性处理一组数据的时候，如果需要满足某些条件，可以考虑一下能否用栈解决。这题就是线性处理一个字符串，并且需要满足一些条件。最近的一个括会肯定要和最近出现的一个括首匹配。用一个栈保存最近出现的括首即可"],"21.-merge-two-sorted-lists.html":["*","*/","*next;","/**","1","21.",":",">1",">2",">3",">4",">4,",">next);",">next,l2);",">next=mergetwolists(l1",">next=mergetwolists(l1,l2",">valval){","algorithm","analysi","class","code","definit","descript","example:","first","if(l1","if(l1==null)","if(l2==null)","input:","int","l1","l1,","l1;","l2","l2)","l2;","link","list","list.","listnod","listnode(int","listnode*","lists.","made","merg","mergetwolists(listnode*","new","next(null)","node","null;","output:","problem","public:","return","singli","solut","sort","splice","struct","thought","togeth","two","val(x),","val;","x)","{","{}","}","};","}else{","之前也提到了，碰到链表题并且返回值是链表的情况下，可以首先考虑能否用递归解题。这题正好可以。和之前链表加法很相似，可能还简单一点","时间复杂度o(n)的，递归肯定是比迭代方法慢一点的，但是两种方法时间复杂度是一样的。之后有时间来实现以下迭代版本的把。"],"22.-generate-parentheses.html":["\"((()))\",","\"(()())\",","\"(())()\",","\"()(())\",","\"()()()\"","1);","1,right+1);","22.","3,","=","[","]","algorithm","analysi","class","code","combin","descript","example,","form","function","gener","generateparenthesis(int","given","help(res,\"\",n,0);","help(res,tmp+'(',left","help(res,tmp+')',left,right","help(vector&res,str","if(left){","if(left==0&&right==0){","if(n==0)","if(right){","is:","left,int","n","n)","pair","parenthes","parentheses,","parentheses.","problem","public:","res.push_back(tmp);","res;","return","return;","right){","set","solut","thought","tmp,int","vector","void","well","write","{","{};","}","};","函数中进行的都是o(1)的操作，主要需要分析函数运行了多少次。分析了很久，得出时间变化满足很复杂，这里就不分析了","括号生成，首先需要知道合法的括号序列是哪样的。一个右括号前必须有一个左括号。由于题目中都是小括号号，所以这里还不用考虑其他问题。这种题显然是回溯法解决，也可以说是递归。但是不是单纯的生成所有组合，而是有条件的生成。在生成了一个左括号的情况下，才能生成一个右括号。"],"23.-merge-k-sorted-lists.html":["*","*/","*next;","/**","1","1);","2","23.",":",">1",">2",">3",">4",">4,",">5",">5,",">6",">next)",">next);",">next;",">next=pro.top();",">val;",">val>l2","[","]","algorithm","analysi","analyz","bool","class","cmp{","code","complexity.","definit","describ","descript","example:","for(auto","if(list)","if(lists.size()==0)","if(tmp","input:","int","k","l1","l1,listnode*","l2){","link","list","list.","list:lists){","listnod","listnode(","listnode(int","listnode*","lists)","merg","mergeklists(vector&","next(null)","null;","on","operator()(const","output:","priority_queue,cmp>","pro.pop();","pro.push(list);","pro.push(tmp","pro;","problem","public:","re","res=new","return","singli","solut","sort","struct","thought","tmp","tmp=res;","tmp=tmp","val(x),","val;","while(!pro.empty()){","x)","{","{}","}","};","之前又题目做过合并两个有序链表的，这里是k个。可以借助归并排序的思路，每个两两合并，合并到最后就可以了。也可以用堆的来做。用最小堆，每次从堆中取出最小的链表，然后将这个链表的下一个值重新加入到堆中。在c++中，可以用stl自带的heap类算法做这题，也可以用直接用优先队列来做这题。","我这里是用优先队列来做的","这个算法不好分析，现在假设有k个链表，每个链表大小都是n，并且都是一样的链表。首先建堆需要o(k)时间复杂度(我这题不是交换建堆，是一个个插入的)，每次拿出是o(lgk)，再插入是o(lgk)，进行n*k次最后时间是o(n)+o(lgk)*n*k,所以时间复杂度是o(nklgk).当然这只是大致分析。"],"24.-swap-nodes-in-pairs.html":["*","*/","*next;","/**","1","2","24.",":",">1",">2",">3",">3.",">4",">4,",">next);",">next;",">next==null)",">next=head;",">next=swappairs(tmp","adjac","algorithm","analysi","changed.","class","code","definit","descript","example:","given","head","head)","head.","head;","if(head==null||head","int","itself","link","list","list'","list,","list.","listnod","listnode(int","listnode*","listnode*tmp=head","modifi","next(null)","node","nodes,","pair","problem","public:","return","singli","solut","struct","swap","swappairs(listnode*","thought","tmp","tmp;","two","val(x),","val;","valu","x)","{","{}","}","};","很简单的题，时间复杂度o(n)","第三次做题真的就很有经验了，看到链表题并且返回的是一个链表直接递归解决。这题不递归肯定也能做，也不是很难，但是递归能省好多事"],"27.-remove-element.html":["(i.e.,","(int","//","//之前的代码","0,","0;","1,","1:","2,","2.","27.","2:","3,","4.","5,","=","[0,1,2,2,3,0,4,2],","[3,2,2,3],","algorihtm","algorithm","alloc","analysi","anoth","answer","arbitrary.","array","array,","array?","be","beyond","caller","caller.","changed.","clarification:","class","code","confus","contain","copy)","descript","doesn't","element","elements.","exampl","extra","first","five","for(auto","for(int","function","function,","given","i=0;i&","if(num!=val)","input","instanc","int","integ","intern","known","leav","len","length","length.","make","matter","mean","memory.","modif","modifi","new","note","num","num:nums){","nums,","nums[res++]=num;","o(1)","order","pass","place","pos=0;","print","problem","public:","reference,","reference.","remov","removeelement(nums,","removeelement(vector&","res;","res=0;","res=nums.size();","return","set","solut","space","think","this:","those","thought","two","us","val","val)","val);","val,","valu","well.","without","{","}","};","上面代码是9个月前写的。但是还不知道auto情有可原，毕竟是做到后面几题才慢慢用起来的。但是循环里的处理感觉太不简洁了，看着很难受。所以改成了现在的代码，虽然时间复杂度是一样的，但是代码更加易读，看着舒服","题目很简单，判断相等赋值即可，只是看着自己之前写的代码实在太难受，想优化一下。"],"28.-implement-strstrkmp-suan-fa.html":["\"aaaaa\",","\"bba\"","\"hello\",","\"ll\"","//next[0]=","//最原始的暴力法","0","0;","1","1);","1:","1;","2","28.","2:","=","algorithm","algorithm.html","analysi","ask","c'","clarification:","class","code","consist","descript","dure","empti","exampl","first","for(int","getnext(next,needle);","great","haystack","haystack,","haystack.","i=0;","i=0;inext(needle.size(),","if(haystack.size()==0){","if(needle.size()==0)","implement","index","indexof().","input:","int","interview.","j=","j=0;","java'","kmp最关键的是构建next数组，然后就很好匹配了。","kmp算法，求出next数组时间复杂度是o(n),匹配时间复杂度是o(m)，m>n。最后时间复杂度是o(m)","needl","needle)","occurr","output:","part","problem","problem,","public:","purpos","question","return","size=needle.size()","solut","string","string.","string?","strstr()","strstr().","strstr(string","thought","while(i","while(i&next,string&needle){","{","}","我描述肯定不是很好懂，可以看看这个网站的例子:https://subetter.com/algorithm/kmp","暴力法两个循环，heystack字符串长m，needle字符串长n，时间复杂度是o(nm)","这题其实暴力发就能解决，就是单纯的字符串匹配。但是太慢了，历史上也有几位大佬觉得这种方法很慢。并且确实有可以优化的地方，如果是一个人来匹配字符串，当一个成功了很多次之后最后一个字符匹配失败了，他不会前进一位重新来。而是跳过已知的不匹配的情况。"],"29.-divide-two-integers.html":["1)","10,","1:","1的时候，这种情况要单独考虑下","2","29.","2:","3","7,","=","algorithm","analysi","class","code","dd=labs(dividend);","descript","di=labs(divisor);","divid","divide(int","dividend","dividend,","divis","divisor","divisor)","divisor,","divisor.","exampl","given","if(dividend==int_min&&divisor==","input:","int","int_max;","integ","long","m=1;","mod","multiplication,","operator.","output:","problem","public:","quotient","res:res;","res=0;","return","solut","thought","tmp=di,","toward","truncat","two","us","while(dd>=di){","while(tmp0^divisor>0?","without","zero.","{","}","};","注意会有一种情况超过int_max,那就是int_min/","虽然有个循环，但是每次tmp都是乘2扩展，所以时间复杂度是o(1).","记得csapp专门有一门实验就跟这个题目很类似。比如不用哪些符号实现其他的符号啥的。这里就是不用乘除取余数，实现除法。能用的还有加法和减法，除法其实就是看被除数中能减去几个除数。想到这一步就很清晰了，直接诶一直减去除数就行。但是这样有的慢，可以减去除数的倍数，这样会快一点。直接移位最好，就能很快生成2的倍数"],"31.-next-permutation.html":["(ie,","(k","(nums[k]","(nums[l]",")","+",".","0;","1,","1,2,3","1,2,31,1,5","1,3,23,2,1","1,5,1","1:].","2;","31.","=",">",">=","algorithm","analysi","arrang","array","ascend","break;","class","code","column","column.","constant","correspond","descript","done.","examples.","exists,","extra","find","greater","hand","here","implement","index","input","int","k","k,","k;","l","l;","largest","left","lexicograph","lowest","memory.","n","next","nextpermutation(vector&","num","number","numbers.","nums)","nums.end());","nums.size(),","nums[k","nums[k]","nums[k])","nums[l]);","nums[l].","order","order).","output","permut","permutation,","place","possibl","possible,","problem","public:","rearrang","replac","revers","reverse(nums.begin()","right","solut","sort","sub","such","swap","swap(nums[k],","thought","us","void","{","}","};","→","我们通过枚举法是可以直接枚举出所有排列的，但是这样太慢，并且排列直接明显有自己的规律。查询维基百科可以知道下一个排列的定义","最坏情况下，时间复杂度是o(n).最佳情况下，时间复杂度是o(1)","直接代码实现"],"32.-longest-valid-parentheses.html":["\"(()\"","\"()\"","\"()()\"","\")()())\"","'('","')',","(well","//use","1:","1;","2","2:","32.","4","algorithm","analysi","ch:s){","charact","class","code","contain","descript","exampl","explanation:","find","for(auto","for(int","formed)","given","i=0;i","if(ch=='('){","if(st2.empty()){","input:","int","length","longest","longestvalidparentheses(str","on","output:","parenthes","po","problem","public:","res;","res=0;","res=max(res,tmp);","return","s)","solut","st1.pop();","st1.push(0);","st1.push(tmp);","st1;","st2.pop();","st2.push(ch);","st2;","st;","stack","startpos=","string","substr","substring.","thought","tmp+=2;","tmp+=st1.top();","tmp=st1.top();","two","valid","{","}","};","}else{","不管是使用两个栈还是一个栈，时间复杂度都是o(n),但是一个栈的方法明显好很多。","我首先自己写了一个双栈的代码，一个记录之前匹配好的括号的值，一个是记录左右括号括号的。但是后面看了discuss发现其实用一个栈就行，每次直接一次匹配完当前合法的，也就是右括号没多的情况。如果右括号多了，就改变一下start","括号匹配问题就是用栈解决，这里其实也存在括号匹配，所以首先考虑用栈解决。这题比括号匹配需要多考虑的一个点就是如果右括号多了的话，需要重新开始记录，因为后面的肯定和前面的括号不能连在一起了。所以这里需要特殊考虑。"],"33.-search-in-rotated-sorted-array.html":["(i.e.,","0","1","1.","1:","1;","2:","3","33.","4","=","[0,1,2,4,5,6,7]","[4,5,6,7,0,1,2]).","[4,5,6,7,0,1,2],","algorithm","algorithm'","array","array.","ascend","assum","becom","beforehand.","class","code","complex","descript","duplic","exampl","exist","found","given","index,","input:","int","left=0;int","mid;","n).","num","nums,","o(log","order","otherwis","output:","pivot","problem","public:","return","right=nums.size()","rotat","runtim","search","search(vector&","search.","solut","sort","suppos","target","target)","thought","unknown","valu","while(leftnums[mid]&&target=nums[left]&&target","{","其实是二分查考的变种，一个有序数组，rotate之后数组一半还是顺序的。二分查找只要确定一半是否满足","就可以排除另一半。我们找到有序的一半之后，判断target是否期中，如果是就进入这一半查找否则进入另一半。这样每次排除一半，时间复杂度就是o(nlgn)","虽然循环中间处理比二分查找多很多步骤，但是时间复杂度还是o(1)的。每次排除一半，最后时间复杂度是o(nlgn)"],"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":["//low_bound","//upper_bound","//此题代码","1);","1,","1:","1]","1].","2:","34.","6","8",";","=","[","[3,4]","[5,7,7,8,8,10],","algorithm","algorithm'","analysi","array","array,","ascend","class","code","complex","descript","element","end","exampl","find","first","found","given","if(left>=0&&left","if(nums.size()==0)","input:","int","integ","l,int","l=mid+1;","last","left","left=0,right=nums.size();","left=mid+1;","lower_bound(int","n).","num","nums,","o(log","order","order,","output:","posit","problem","public:","r,int","r=mid;","res(2,","res;","return","right=mid;","runtim","searchrange(vector&","solut","sort","start","target","target)","thought","uppper_bound(int","value.","vector","void","while(l=x)","while(lefttarget)","while(lx)","x){","{","}","之前我一直搞不清这几个二分查找的本质区别和如何去写。这个我总结出了规律，对于lower_bound，要找到第一个target，在mid>=target的时候，将right=mid，最后一次查找的时候，right就会是第一个target。左开右闭表示法，最后当left和right差1的时候，mid肯定等于left，所以最后left会赋值给right+1。left和right会在第一个target处重合。","对于up_bound同理，只要将mid>=target改为mid>target即可。这样就会在刚好大于target的地方重合。我理解这两个二分查找也是用了很久时间，看文字肯定会有很多疑惑，可以反复看看代码，自习推敲。","找到第一个target和最后一个target，需要时间复杂度是o(lgn)。其实就是二分查找，但是不是单纯的二分查找。需要找到第一个和最后一个。这其实很像stl函数中的lower_bound和up_bound。但是upper_bound是找到一个不是target的值。我们只需要将upper_bound最后的索引减一就行了。","都是二分查找时间复杂度是o(lgn)，stl中的二分查找也是直接用low_bound实现的，low_bound在二分查找中只有两个判断分支，会比传统的3个判断分支更加平衡以及快速"],"35.-search-insert-position.html":["35.","class","code","insert","int","left;","left=0,right=nums.size(),mid;","left=mid+1;","nums,","posit","public:","return","right=mid;","search","searchinsert(vector&","solut","target)","while(left=target)","{","}","};","看懂意思之后发现直接使用low_bound即可"],"36.-valid-sudoku.html":["'.'.","(partial","1","1,","1:","2:","36.","3x3","5","8'","8.","9","9x9","9x9.","[","[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]","[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],","[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],","[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],","[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],","[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],","[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],","[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],","[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],","[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],","]","accord","algorithm","alway","analysi","be","board","board)","bool","box","box,","cell","charact","class","code","column","contain","corner","descript","determin","digit","each","empti","exampl","except","explanation:","fals","fill","filled)","filled,","follow","for(int","given","grid","i=0;i","input:","invalid.","isvalidsudoku(vector>&","left","mention","modifi","necessarili","need","note:","output:","partial","problem","public:","repetition.","row","rules.","rules:","same","size","solut","solvable.","st;","sub","sudoku","thought","top","true","two","unordered_set","valid","valid.","without","{","使用hash表存放之前访问过的信息，可以保证每个位置只访问一次。这也类似一些一维数组题目，需要我们在o(n)时间复杂度内解决问题。这里需要保存数独规则下，当前位置对后面位置的影响。在数独中，行和列以及block中不能出现一样的数字。每次将访问的数字3个规则保存到hash表中，这种思路其实不难得出，难得出的是该如果在hash表中保存信息。如何保存可以看代码。","算法中有两个for循环，循环中进行的操作是o(1)的，最后时间复杂度是o(n²)"],"39.-combination-sum.html":["!=","&&","&candidates,","&combination,","&res,","(!target)","(candidates)","(i","(includ","(int","(target),","(without","++i)","0);","1:","1])","2:","39.","7,","8,","=","==",">",">=","[","[2,2,2,2],","[2,2,3]","[2,3,3],","[2,3,5],","[2,3,6,7],","[3,5]","[7],","]","algorithm","analysi","begin","begin)","begin;","candid","candidates.end());","candidates.size()","candidates[i","candidates[i]","candidates[i],","candidates[i];","chosen","class","code","combin","combination,","combination.pop_back();","combination.push_back(candidates[i]);","combination;","combinations.","combinationsum(candidates,","combinationsum(std::vector","contain","descript","duplic","duplicates)","exampl","find","given","i);","input:","int","integers.","is:","note:","number","posit","private:","problem","public:","repeat","res,","res.push_back(combination);","res;","return","return;","same","set","solut","std::sort(candidates.begin(),","std::vector","sum","target","target)","target,","target.","thought","times.","uniqu","unlimit","void","{","||","}","};","回溯法世家复杂度是o(2^n),很慢，但是这里加入了剪枝策略，还是一定程度上加快了运行速度的。","组合数相加最后和为target，基本需要遍历所有集合。使用回溯法得到所有的集合，判断和是否为target。由于数字相加如果已经大于target，就没必要继续遍历了。所以加入了剪枝策略，首先sort数组，为了先遍历小数字后遍历大数字。然后在进入下一个函数之前判断是否满足剪枝策略，如果满足，就不进入函数。"],"40.-combination-sum-ii.html":["!=","&&","&candidates,","&combination,","&res,","(!target)","(i","(int","++i)","0);","1])","40.","=","==",">",">=","begin","begin)","begin;","candidates.end());","candidates.size()","candidates[i","candidates[i]","candidates[i],","candidates[i];","class","code","combin","combination,","combination.pop_back();","combination.push_back(candidates[i]);","combination;","combinationsum2(candidates,","combinationsum2(std::vector","i+1);","ii","int","private:","public:","res,","res.push_back(combination);","res;","return","return;","solut","std::sort(candidates.begin(),","std::vector","sum","target","target)","target,","void","{","||","}","};","就改了上一题一个条件，不能重复使用。在回溯进入下一个的函数的时候，将pos加一。而不是上一题那样不变"],"41.-first-missing-positive.html":["1","1,1]","1:","2","2:","3","3:","41.","[1,2,0]","[3,4,","[7,8,9,11,12]","algorithm","analysi","array,","class","code","constant","descript","exampl","extra","find","first","firstmissingpositive(vector&","for(int","given","i=0;i0&&nums[i]","input:","int","integ","integer.","miss","note:","nums)","o(n)","output:","posit","problem","public:","run","size=nums.size();","smallest","solut","space.","thought","time","unsort","us","{","一次遍历数组，时间复杂度o(n)。没有用额外空间存储数据，空间复杂度是o(1)。符合要求","得到第一个缺失的正数，由于不需要考虑负数，这里可以很好地用数组下标对应相应的数。一次遍历将相应的数填入对应的下标当中。最后再次遍历数组，找到第一个缺失的数。"],"42.-trapping-rain-water.html":["(blue","0;","1,","1;","42.","6","[0,1,0,2,1,0,1,3,2,1,2,1]","[0,1,0,2,1,0,1,3,2,1,2,1].","abov","algorithm","array","bar","be","case,","class","code","comput","contribut","descript","each","elev","example:","given","height)","if(height.size()==0)","image!","input:","int","integ","left=0;","leftmax=height[left];","map","marco","much","n","neg","non","output:","problem","public:","rain","raining.","repres","res=0;","return","right=height.size()","rightmax=height[right];","section)","solut","thank","thought","trap","trap(vector&","trapped.","unit","water","while(left","width","{","一个循环左右指针逼近，时间复杂度o(n)。","和之前一个接水的题目异曲同工，使用左右指针结题。哪边短，动哪边，最后两指针重合退出循环。中间维护左右相应的最大值，存水量等于最大值减去当前值。"],"44.-wildcard-matching.html":["\"*\"","\"*a*b\"","\"?a\"","\"a\"","\"a*c?b\"","\"aa\"","\"aa\".","\"acdcb\"","\"adceb\"","\"cb\"","\"dce\".","'*'","'*'.","'?'","'a',","'b'.","'c',","(includ","(not","(p),","(s)","*.","1:","2:","3:","44.","4:","5:","=","?","algorithm","analysi","bool","charact","character.","class","code","contain","cover","descript","empti","entir","exampl","explanation:","fals","first","for(int","given","i=1;i","implement","input","input:","ismatch(str","letter","lowercas","match","note:","output:","p","p)","partial).","pattern","problem","public:","s","s,","second","sequenc","sequence).","sequence,","sequence.","singl","solut","string","substr","support","thought","true","vector(p.size()+1,false);","wildcard","z,","z.","{","时间复杂度o(n²)","这题很之前的正则表达式很像，其实还简单一点。使用二维数组保存中间结果，动态规划解决问题。可以借鉴前面动态规划题目的解答。这里的?其实和之前的.一样。这里的*比之前的*更加加单"],"45.-jump-game-ii.html":["0","1","1,","2","2.","3","45.","[2,3,1,1,4]","algorithm","alway","analysi","array","array.","assum","class","code","descript","each","element","example:","explanation:","first","game","given","goal","if(nums.size()","ii","index","index.","initi","input:","int","integers,","jump","jump(vector&","jumps.","last","length","maximum","minimum","neg","non","note:","number","nums)","output:","posit","position.","problem","public:","reach","repres","solut","step","thought","{","一次遍历数组，时间复杂度o(n)","一次遍历解决问题，第一步能走到的地方就是nums[0]，每到一个地方，确定当前位置能走到的最大值。在一步走完之后，确定下一个最大能走到的范围。"],"46.-permutations.html":["//first","0位置，那么之后的所有位置又可以递归调用函数，得到后面位置的所有排列。第一位置补上，就是所有排列了","1){","46.",";","[","[1,2,3]","[1,2,3],","[1,3,2],","[2,1,3],","[2,3,1],","[3,1,2],","[3,2,1]","]","algorithm","class","code","collect","descript","distinct","example:","for(int","given","i,int","i=0;i>","if(i==j","if(tmp.size()==nums.size()){","input:","integers,","j){","k=i;k","mark(nums.size(),false);","mark){","nums)","nums,vector>&","output:","per(nums,res,0,nums.size());","per(nums,res,tmp,mark);","per(vector&","permut","permutations.","permute(vector&","possibl","problem","public:","res,int","res,vector","res.push_back(nums);","res.push_back(tmp);","res;","return","return;","solut","thought","time","tmp,vector&","tmp;","vector","vector>","void","{","}","对于第一个算法：回溯法时间复杂度是o(2^n)，但是这里应该不用那么久，遍历到后期，很多数中的数组都已经被加入，只需要直接continue；所以，这个算法还是不慢的","对于第二个算法：得出所有的排列，类似枚举法，一共需要执行n!次。每次时间复杂度是o(1)。最后时间复杂度就是o(n!).","得到所有排列问题，也是我们算法课将回溯法的一个例题。直接每次交换两个数字，将所有情况都交换一遍，就是所有排列。其实也可以用递归的思想解释问题。首先将一个数字交换到index","得到所有排列，和之前组合数相加得到target很像。这里直接使用回溯法，加上一个位置数组，区分是否已经加入新组合。","我第一遍做的算法：","第二遍做的算法："],"47.-permutations-ii.html":["&res)","(i","(int","0,","1)","47.","=","==",">","[","[1,1,2]","[1,1,2],","[1,2,1],","[2,1,1]","]","algorithm","analysi","class","code","collect","contain","desctipt","duplicates,","example:","given","i,","i;","ii","input:","int","j","j,","k","num,","number","nums)","nums.size(),","output:","permut","permutations.","permuteunique(vector&","possibl","problem","public:","recursion(nums,","recursion(vector","res);","res.push_back(num);","res;","return","return;","solut","sort(nums.begin(),nums.end());","thought","uniqu","vector","vector>","void","{","}","和上一题时间复杂度应该是一样的——o(n!)。但是最后时间会比上一个算法慢很多，原因就在于这里函数参数num没用引用传递。每次参数传递的时候，会复制所有的数字，时间开销会很大。","这里我们还是用递归解决。首先解决第一个index上数字的摆放，然后对于后面所有的数字，递归调用函数处理，直到最后一个数字。这里我们如何找到重复的情况呢？我们给第一个index摆放之后，进行第一个index替换的时候，判断，如果这时候，替换的数字和当前数字一样，就不替换，查看下一个数字。这样就能解决一个位置，两次为一个数字的问题了。注意这里不需要回溯，这是和上一题区别最大的地方。","这题和上一题唯一的区别就是有重复数字。但是这个区别对算法会产生很大的影响。两个一样的数，如果还是用上题的做法，会导致最后的结果多一倍。这里的问题就在于，如果找到重复的情况，然后规避这种情况。"],"48.-rotate-image.html":["(clockwise).","1,","1:","1],","2,","2:","2d","3,","4,","48.","5,","5],","6,","7,10,11]","7],","8,","8,10],","9,11],","90","9],","=","[","[1,2,3],","[12,","[13,","[14,","[15,13,","[15,14,12,16]","[16,","[4,5,6],","[7,4,1],","[7,8,9]","[8,5,2],","[9,6,3]","]","],","algorithm","alloc","analysi","anoth","becomes:","class","code","degre","descript","directly.","exampl","for(int","given","i=0;i","imag","image.","input","int","matrix","matrix)","mean","modifi","n","n=matrix.size();","note:","place","place,","problem","public:","repres","rotat","rotate(vector>&","rotation.","solut","such","thought","void","x","{","对二维矩阵操作，双重循环。最后时间复杂度是o(n²)","最简单的方法肯定是定义一个矩阵，然后将这个矩阵转置之后赋值给这个矩阵。但是这样需要o(n²)空间题目也明显要求了我们空间复杂度维持在o(1)内。我们必须在本来的数组上操作。如果只能这么操作的话，肯定就是使用swap函数，交换值。我们可以对称的改变矩阵，对于旋转90度，我们只需要首先按照竖直中线对称，再按照对角线对称就能得到结果。"],"49.-group-anagrams.html":["\"ate\",","\"bat\"],","\"nat\",","\"tan\",","\"tea\",","49.","[","[\"ate\",\"eat\",\"tea\"],","[\"bat\"]","[\"eat\",","[\"nat\",\"tan\"],","]","algorithm","anagram","analysi","array","class","code","descript","example:","for(auto&","for(int","given","group","groupanagrams(vector&","i=0;i({strs[i]});","input","input:","lowercase.","m:ma){","ma;","matter.","note:","order","output","output:","problem","public:","res.push_back(m.second);","res;","return","solut","sort。将所有的字符串sort一下，排序之后相等的字符串，就可以认定为一个group。","strings,","strs)","thought","together.","unordered_map>","vector>","{","}","};","假定有n个字符串，每个字符串平均长度是m，对每个字符排序时间复杂度是o(nlgn),两个字符串比较时间复杂度是o(n)，然后需要定义一个hashmap保存之前遍历的字符串的结果。最后时间复杂度是o(m*nlgn)","找出有相同字符，顺序不一样的所有字符串，然后返回他们的集合。这里有一种最简单的办法确定"],"50.-pow-x-n.html":["(xn).","0.25","0.25000","1/22","1/4","10","100.0","1024.00000","1:","1;","1]","1即可。这样int_min就会变int_max","2","2.00000,","2.10000,","231","2:","3","32","3:","50.","9.26100","=","[−231,","algorithm","analysi","bit","calcul","class","code","descript","doubl","exampl","explanation:","if(n","if(n==0)","implement","input:","int","integer,","mypow(doubl","n","n)","n),","note:","output:","pow(x,","power","problem","public:","rais","rang","return","sign","solut","thought","within","x","x,","{","−","每次将次数降低一半，时间复杂度o(lgn)","求2的100次方，如果直接乘100次，其实没有必要。完全可以求4的50次方，然后16的25次方。这样每次能减少一半的计算量。这里的问题就是还有负数。如果是负数的话，首先将x化为1/x。然后将n转化为正数。最后，一种最特殊的情况就是如果数字是int_min,最后直接将n"],"51.-n-queens.html":["\"...q\",","\"..q.\"],","\".q..\"]","\"q...\",","'.'","'q'","//","1","1;j=y+1;","2","4","51.","[","[\"..q.\",","[\".q..\",","]","]=='q')","][j","above.","algorithm","analysi","attack","board","both","chessboard","class","code","configur","contain","descript","distinct","each","empti","example:","exist","explanation:","false;","for(int","given","i=0;i","i=0;i=0&&j>=0){","i=0;i>&","i=x","if(pos==tmp.size()){","if(res[i","indic","input:","integ","n","n)","n,","n×n","other.","output:","place","placement,","pos){","problem","public:","puzzl","puzzle.","queen","queens'","res){","res,vector","res.push_back(tmp);","res;","respectively.","return","return;","shown","solut","solvenqueens(int","space","string","such","t(n,'.');","thought","tmp,int","tmp;","two","vector","vector>","while(i>=0&&j","{","}","经典的n皇后问题。使用回溯法解决问题，每次放之前首先判断这个位置是否合法，如果合法，放入这位置。如果不合法判断下个能放的位置。最后如果没有能放的位置的时候，就回溯。","这里的时间复杂度我也不是太清楚，查了资料，网上有两种说法，我觉得o(n^n)和o(n!)都有道理。"],"52.-n-queens-ii.html":["52.","ii","n","queen","这题是上题的简化版本，最后返回数量即可"],"53.-maximum-subarray.html":["(contain","1,2,1,","1,2,1]","1]:0);","2,1,","3,4,","5,4],","53.","6","6.","=","[","[4,","algorithm","analysi","anlysi","anoth","approach,","array","class","code","conquer","contigu","descript","divid","dp(nums.size(),0);","dp[0]=nums[0];","example:","explanation:","figur","find","follow","for(int","given","i=1;i0?dp[i","input:","int","integ","largest","ma;","ma=max(ma,dp[i]);","ma=nums[0];","maximum","maxsubarray(vector&","more","number)","nums)","nums,","o(n)","on","out","output:","problem","public:","return","solut","solution,","subarray","subtl","sum","sum.","tri","up:","us","vector","{","}","};","一次循环使用以为数组保存最后结果，复杂度时间o(n)","最大连续子数组和，典型的动态规划问题。如果现在给出大小为3的数字，分别为1，2，3。他们的结果是6这时候，如果数组最后加入一个数字4，结果会变为10。这个例子说明，可以用之前的结果来简化求解现在结果的过程。这也是动态规划的思想。这里还有一种情况，就是如果当前和为负值的情况，这时候不能用前面的负值，应该使用当前值直接表示。"],"54.-spiral-matrix.html":["(m","1,","1,0}};","1:","1;","1},{","1};","2,","2:","3","3,","4,","4],","5,","54.","6","6,","7,","8,","8],","9","[","[1,","[1,2,3,4,8,12,11,10,9,5,6,7]","[1,2,3,6,9,8,7,4,5]","[5,","[9,10,11,12]","]","],","algorithm","class","code","columns),","descript","element","exampl","for(int","given","i=0;i","if(nc==0)","if(nr==0)","input:","int","m","matrix","matrix)","move{{0,1},{1,0},{0,","n","nc=matrix[0].size();","nr=0;nc=","nr=matrix.size();","nstep{nc,nr","order.","output:","pos=0;","problem","public:","res(nr*nc);","return","rows,","solut","spiral","spiralorder(vector>&","step=0;","thought","vector","vector>","while(nstep[step%2]){","x","{","{};","我对这个题其实一点都不陌生。大一第一个学习，算法设计课，就有这个题目。说实话，就用死方法肯定能做出来，只是很多冗余代码，很多条件判断。我记得我当时用4个bool变量确定行动方向。最后4个int定义行动的长度。我第一次做这个题好像也是这么做的。但是我第三次做题我觉得我不可能还用这中办法。于是我看了discuss，发现确实有很好地办法。用一个step定义当前行动的次数，step模4就能得出行动的当前方向。step模2就能得到是左右移动还是上下移动。左右移动一次，下一次左右移动就要减一。再定义一个移动的次数，保存能够左右移动和上下移动的次数。这种算法就省去了很多的条件判断","虽然差算法和好算法，时间复杂度都需要o(n²)。但是这次的算法省去了很多多余中间变量，和条件判断，能够提升程序运行的时间。"],"55.-jump-game.html":["0","0,","1","1,","1:","2:","3","55.","[2,3,1,1,4]","[3,2,1,0,4]","algorithm","alway","analysi","array","array.","arriv","bool","canjump(vector&","class","code","descript","determin","each","element","exampl","explanation:","fals","false。如果所有的跳完，return","first","for(int","game","game2类似。这里不限制你跳跃的次数，我们只需要每次记录能达到的最远距离即可。每次循环开始的时候更新最大值。如果更新之后的最大值和当前值是一样的话，说明只能跳到这里了，return","given","i=0;i","imposs","index","index.","initi","input:","int","integers,","jump","last","length","make","matter","maximum","maxrive=0;","neg","non","nums)","output:","posit","position.","problem","public:","reach","repres","solut","step","thought","true","what.","{","和之前jump","算法遍历一次数组，时间复杂度o(n)。"],"56.-merge-intervals.html":["(ins.empty())","*","*/","/**","15,","1:","2019.","2:","56.",":","[1,3]","[1,4]","[1,6].","[2,6]","[4,5]","[[1,3],[2,6],[8,10],[15,18]]","[[1,4],[4,5]]","[[1,5]]","[[1,6],[8,10],[15,18]]","[](interv","a,","a.start","algorithm","analysi","april","b){return","chang","class","code","collect","consid","default","definit","descript","e)","end(0)","end(e)","end;","exampl","explanation:","given","input","input:","ins)","ins.end(),","int","interv","interval()","interval(int","interval.","intervals,","intervals.","merg","merge(vector&","method","new","note:","output:","overlap","overlapping.","overlaps,","pleas","problem","public:","push进vector，访问到下一个时，当前interval就是下一个interv","res;","reset","return","s,","signature.","solut","sort(ins.begin(),","start(0),","start(s),","start;","struct","thought","type","vector","vector{};","{","{}","};","两个间隔能合并，就是两个范围有重合。重合的话存在两种情况，第一种是左边重合，一种是右边重合。但是如果程序中同时考虑两个的话，情况会复杂很多。所以首先按照做范围排序，消除左边影响。然后一直看右边，如果当前interval与前一个interval重合，合并两个interval。然后继续看下一个，如果两个不重合，将当前interv","首先排序，时间复杂度o(nlgn)。然后一个遍历数组，时间复杂度o(n)。最后时间复杂度o(nlgn)。这样看来，排序成了我们的瓶颈，但是也不能这么说，如果没有排序，时间复杂度至少是o(n²)"],"57.-insert-interval.html":["(merg","*","*/","/**","15,","1:","2019.","2:","57.",":","=","[2,5]","[3,5],[6,7],[8,10].","[4,8]","[[1,2],[3,10],[12,16]]","[[1,2],[3,5],[6,7],[8,10],[12,16]],","[[1,3],[6,9]],","[[1,5],[6,9]]","accord","algorithm","analysi","april","assum","chang","class","code","default","definit","descript","e)","end(0)","end(e)","end;","exampl","explanation:","given","index=0;","initi","input","input:","insert","insert(vector&","int","interv","interval()","interval(int","interval.","intervals,","method","necessary).","new","newinterv","newinterval)","non","note:","output:","overlap","pleas","problem","public:","res;","reset","s,","set","signature.","solut","sort","start","start(0),","start(s),","start;","struct","thought","times.","type","vector","while(index","{","{}","};","和上一题一样，这里更简单的是，已经直接排好序了。所以，我们只需要找出中间可能有交叉的interval。然后合并。前后没有交叉的interval，就不变，直接插入。","这里不需要排序，时间复杂度o(n)"],"59.-spiral-matrix-ii.html":["1","1,","1,0}};","1;","1},{","1};","2,","3","4","5","59.","6,","7,","8,","9,","[","]","],","_n_2","algorithm","analysi","class","code","descript","element","example:","fill","for(int","gener","generatematrix(int","given","i=0,j=","ii","input:","int","integ","k=0;k","matrix","matrix看algorithm","move{{0,1},{1,0},{0,","n)","n,","nstep{n,n","order.","output:","pos=0;","posit","problem","public:","res(n,vector(n,0));","solut","spiral","squar","thought","tmp=1;","vector","vector>","while(nstep[pos%2]){","{","和之前旋转矩阵题类似解答，可以移步到spiral","需要填满n*n个格子，每次填格子移动时间o(1)，最后时间复杂度o(n²)"],"60.-permutation-sequence.html":["\"123\"","\"132\"","\"213\"","\"231\"","\"2314\"","\"312\"","\"321\"","1","1)!个。同理可以退出，如果需要找第k个排列，第一个字符我们是可以确定的。然后利用递归的思路，一直将数字推出。","1:","2:","3","3,","3:","4,","60.","9","=","[1,2,3,...,n]","_k_th","algorithm","between","code","contain","descript","exampl","follow","given","inclusive.","input:","k","k,","label","list","n","n!","note:","n个数排列有n!种情况，如果数字是1","n，那么1开头的排列会有(n","order,","output:","permut","permutations.","problem","return","sequenc","sequence.","set","thought","total","uniqu"],"61.-rotate-list.html":["){","*","*/","*next;","/**","0","1","1:","1;","2","2:","3","4","5","61.",":","=",">0",">1",">2",">3",">4",">5",">next){",">next;",">next=head;",">next=null;",">null",">null,","algorithm","analysi","class","code","cur;","cur=cur","cur=head","definit","descript","exampl","explanation:","given","head,","head;","if(head==null)","if(k==0)","if(size==1)","input:","int","k","k)","k=k%size;","k=size","link","list","list,","list.","listnod","listnode(int","listnode*","negative.","next(null)","non","output:","places,","pre","pre=head;","pre=pr","problem","public:","return","right","right:","rotat","rotateright(listnode*","singli","size++;","size=1;","solut","step","struct","tail","tail=head;","tail=tail","thought","val(x),","val;","while(k","while(tail","x)","{","{}","}","};","可以看到其实就是将链表倒数第k个位置截断，然后拼接到前面。知道这个意思之后，就只需要考虑如果k大于size的问题了。如果k等于size，链表长度不变，这就很明显，我们可以令k=k%size。最后截断链表即可","开始算法得到链表的size，时间复杂度o(n)。然后找到倒数第k个节点，最后"],"62.-unique-paths.html":["'finish'","'start'","(mark","1.","100.","1:","2","2.","3","3,","3.","62.","7","=",">","abov","algorithm","analysi","below).","bottom","class","code","corner","corner,","corner:","descript","diagram","down","dp(m,1);","exampl","explanation:","for(int","grid","grid.","i=1;i","input:","int","left","locat","m","m,","mani","move","n","n)","note:","output:","path","point","possibl","problem","public:","reach","right","robot","solut","there?","thought","time.","top","total","tri","uniqu","uniquepaths(int","vector","way","x","{","二维动态规划，遍历一个二维数组。最后时间复杂度o(n²)","典型的动态规划问题，达到一个点的所有方案，是其上一个点和左边点的方案之和。因为我到这个点可以有两种情况走过来，一种是从上面往下走，一种是从左边往右走。"],"63.-unique-paths-ii.html":["'finish'","'start'","(mark","0","1","1.","100.","1:","2","2.","3x3","63.",">","[","[0,0,0]","[0,0,0],","[0,1,0],","]","above.","ad","algorithm","analysi","be?","below).","bottom","class","code","consid","corner","corner:","descript","diagram","down","empti","exampl","explanation:","for(int","grid","grid.","grids.","i=0;i","ii","input:","int","left","locat","m","mani","mark","middl","move","n","note:","now","obstacl","obstaclegrid)","on","output:","path","point","problem","public:","reach","respect","right","robot","solut","space","thought","time.","top","tri","two","uniqu","uniquepathswithobstacles(vector>&","way","x","{","相比于上题加入了一些处理，但是时间复杂度还是o(n²)","这题和上一题唯一的区别就是，这里在机器人的行动路上放了一些障碍。其实和上题做法没什么区别，当当前走到障碍的时候，直接把这个位置的结果赋值0。这样的好处是，既可以代表这里没有一种方案可以走到，也可以在他右边和下面得到总线路时，加上的是0。"],"64.-minimum-path-sum.html":["1→3→1→1→1","64.","7","[","[1,3,1],","[1,5,1],","[4,2,1]","]","algorithm","along","analysi","bottom","class","code","descript","down","example:","explanation:","fill","find","for(int","given","grid","grid)","i=1;i","input:","int","left","m","minim","minimum","minpathsum(vector>&","move","n","neg","non","note:","number","numbers,","output:","path","path.","point","problem","public:","right","solut","sum","sum.","thought","time.","top","x","{","和上一题没什么不同，动态规划换汤不换药。上一题是路线的数量，这里是找到最小值。","时间复杂度和上两题一样,o(n²)"],"67.-add-binary.html":["\"1\"","\"100\"","\"1010\",","\"10101\"","\"1011\"","\"11\",","'0')+c;","'0')+int(b[i]","(also","){","//cout","0.","1","1:","2:","67.","=","a,","add","addbinary(str","al=a.size(),bl=b.size();","algorithm","analysi","b","b)","binari","both","c=0;","c=1;","charact","class","code","contain","count=int(a[i]","descript","empti","exampl","given","if(al=0;i","if(count==1||count==3){","if(count>=2){","input","input:","int","non","output:","problem","public:","res=string(max(al,bl)+1,'0');","res[i+1]='1';","return","solut","string","string).","strings,","sum","thought","two","{","}","和十进制加法没什么不同，都是定义一个进位标志位，两数相加再加上标志位。得到的结果就是这一位，改变标志位。最后注意开头的0需要删除","线性处理两个字符串，最后时间复杂度o(n)"],"69.-sqrt-x.html":["1:","1;","2","2.82842...,","2:","4","69.","8","algorithm","analysi","class","code","comput","decim","descript","digit","exampl","explanation:","guarante","if(x=x/mid)","implement","input:","int","integ","integer,","integer.","left==x/left?left:left","left=mid+1;","mysqrt(int","neg","non","output:","part","problem","public:","result","return","returned.","right=mid;","root","solut","sqrt(int","sqrt(x)","squar","thought","truncat","truncated,","type","x","x)","x).","x,","x中查找是否有满足mid*mid=x的情况","{","}","};","二分查找，每次可以排除一半的数字。时间复杂度o(lgx)","回归题目本身，这里我们在0","第一次做这个题的时候，我也不是很清楚如何去计算一个数开根号。之后看了discuss了解到可以用二分查找。（感觉很多题都可以用二分查找，在一个大范围中找一个数，然后可以找到排除一半数的条件，条件很难找，需要仔细体会）。我记得我前几周做了一个contest也是用二分查找，当时做出来之后很惊讶。"],"70.-climbing-stairs.html":["+","//用一个数组保存","1","1.","1:","1;","2","2.","2:","3","3.","70.","algorithm","analysi","case.","class","climb","climbstairs(int","code","descript","distinct","each","exampl","explanation:","for(int","given","i=3;i","if(n==1)","input:","int","integer.","mani","n","n)","note:","output:","posit","problem","public:","reach","res(n+1);","res[1]=1;res[2]=2;","return","solut","stair","step","steps.","take","thought","three","time","top.","top?","two","vector","way","{","利用动态规划来解决斐波拉契数列问题，时间复杂度o(n)，第二种方法相对于第一种方法减少了线性数组的开销，空间复杂度从o(n)减到了o(1)。","说是爬楼梯，其实就是斐波拉契数列。当前值等于前两个的值相加。可以用动态规划解决，用一个一维数组保存所有结果。也可以直接用两个变量保存之前的两个数的值，而不保存所有的结果。"],"72.-edit-distance.html":["\"execution\"","\"horse\",","\"intention\",","\"ros\"","'c')","'e')","'h'","'i'","'n'","'r')","'t')","'u')","'x')","(insert","(remov","(replac","1:","2:","3","5","72.","=",">","algorithm","analysi","charact","class","code","convert","delet","descript","distanc","dp(word2.size()+2);","edit","enent","exampl","exect","execut","exent","explanation:","find","follow","for(int","given","hors","i=0;i","inent","input:","insert","int","intent","m,word2","mindistance(str","minimum","number","n，最后时间复杂度o(m*n)","oper","output:","permit","problem","public:","replac","requir","ro","rors","rose","size","solut","string","thought","two","vector","word","word1","word1,","word2","word2)","word2,","word2.","word:","{","其中：(horse,ro)代表增加一个，(hors,ros)代表减少一个，(hors,ro)代表替换操作，我们使用二维数组解决此题。但是这题可以优化到只用一维数组，这里只给出一维数组的解答。","如果两个字符不相等，则(horse,ros)=min((horse,ro),min((hors,ros),(hors,ro)))+1;","字符串处理操作。之前也总结了字符串题目的几种方法。动态规划，字符串匹配的一些算法，字典树等等。如果看到题目找不到思路，没有做过类似的，就使用这几种方法试试。","我们只需要判断，如果两个字符串当前index上两个字符相等，则(horse,ros)=(hors,ro)","要得到匹配horse，ros的最小次数。如果我们知道(horse,ro),(hors,ros),(hors,ro)三个字符串的匹配结果。","设word1","这里两个字符串，使用动态规划处理。一个二维数组实现。首先说一下动态规划的状态转移方程如何理解。"],"73.-set-matrix-zeroes.html":["//判断第一列是否有0","0,","0.","1:","2:","73.",";","[","[0,0,0,0],","[0,0,0],","[0,1,2,0],","[0,3,1,0]","[0,4,5,0],","[1,0,1]","[1,0,1],","[1,1,1]","[1,1,1],","[1,3,1,5]","[3,4,5,2],","]","algorithm","analysi","bool","class","code","column","descript","element","entir","exampl","for(int","given","i=0;i","if(matrix.size()==0||matrix[0].size()==0)","input:","m","matrix","matrix)","matrix,","n","output:","place.","place。于是我将第一行和第一列定义为标志位，从2行2列开始遍历，如果为0，将为0的那行和列的第一位设置为0标志位。之后再次遍历一遍第一行和第一列，将有标志位的那一行或者一列置为零","problem","public:","return","row","row=false,col=false;","set","setzeroes(vector>&","solut","thought","void","x","zero","{","这个题目不是很难，但是leetcode限制了我们，希望我们使用o(1)的空间复杂度，然后do","这类题目，无论你算法多么巧妙，时间复杂度都会是o(n²)，但是这里空间复杂度被限制到了o(1)，有很大提升。"],"74.-search-a-2d-matrix.html":["11,","13","16,","1:","1;","20],","2:","2d","3","3,","30,","34,","5,","50]","74.","7],",";","=","[","[1,","[10,","[23,","]","algorithm","analysi","bool","class","code","descript","each","effici","exampl","fals","false;","first","follow","greater","i=matrix.size()","if(matrix.size()==0||matrix[0].size()==0)","if(matrix[i][j]","input:","int","integ","j=0;","last","left","m","matrix","matrix,","matrix.","n","output:","previou","problem","properties:","public:","return","right.","row","row.","search","searchmatrix(vector>&","solut","sort","target","target)","thought","true","valu","while(i>=0&&jtarget)","write","x","{","第一次做这个题目的时候，我首先在行上做二分查找，然后再找到的列上在来一次二分查找。这样时间复杂度是o(lgn)，也不是很慢。但是其实这个题目就是需要一种二维的二分查找。二分查找的核心是，通过一次比较，能排除一部分数字。","这里时间复杂度不一定比两个二分查找更快，二分查找时间复杂度是o(lgn+lgm),这里时间复杂度最坏情况应该是o(m+n)；","这题思路是，从左上角或者右下角开始。可以思考一下，为什么从这里出发。然后一步步和target比较，并且逼近target"],"75.-sort-colors.html":["**so","0's,","0,","1'","1's,","1,","2","2's,","2's.","75.","[0,0,1,1,2,2]","[2,0,2,1,1,0]","adjacent,","algorithm","analysi","array","blue","blue,","blue.","class","code","color","come","constant","count","descript","example:","first,","follow","for(int","forward","function","given","here,","i=0;i","input:","int","integ","iter","library'","n","note:","number","nums)","o(n)，但是适用于数字比较少的情况。这里一共就3个数字，是比较适合的。","object","on","order","output:","overwrit","pass","place","pos_1=0,pos_2=0;","problem","problem.","public:","red,","repres","respectively.","same","solut","sort","sort.","sortcolors(vector&","space?","straight","suppos","thought","total","two","up","up:","us","void","white","white,","{","一次遍历数组，时间复杂度o(n)","典型的计数排序，计数排序时间复杂度是","最简单的一种方法是，两次遍历出结果，第一次遍历得到所有数的count，第二次遍历对数组赋值。","能否一次遍历出结果呢？是可以的，使用两个标志位标志0，1的结尾。遍历数组，如果为0，swap交换到0的末尾，如果为1，swap交换到1的末尾"],"76.-minimum-window-substring.html":["\"\".","\"abc\"","\"adobecodebanc\",","\"banc\"","(head=begin);","76.",";","=","algorithm","alway","analysi","begin)","begin=0,end=0,head=0,length=int_max;","c:t)","charact","class","code","complex","contain","count","count++;","count=t.size();","cover","descript","empti","example:","find","for(auto","given","guarante","if(length>end","if(map[s[begin++]]++>=0)","input:","int","length==int_max?\"\":s.substr(head,length);","length=end","map(128,0);","map[c]++;","minimum","minwindow(str","note:","o(n).","on","output:","problem","public:","return","s","s,","s.","solut","string","substr","such","t","t)","t,","thought","uniqu","vector","while(count==0){","while(end0)","window","window,","{","}","};","初始化是t.size())。如果size为0，就可以将当前状态加入到结果。并且移动头指针，逼近尾指针。","滑动窗口时间复杂度o(n),只需要一次遍历数组，最后产生结果。","滑动窗口问题，做了很多题目之后，碰到最后需要求连续序列满足一种情况的时候，一般都能用滑动窗口，也就是一前一后指针代表窗口。","这里首先定义一个vector，存储所有字符出现的次数。然后定义一前一后两个指针，后指针走过一个字符的时候，将vector中字符保存的次数减一，如果减一是有效的（能在t字符串中体现），那就将之前保存的size减一(s"],"77.-combinations.html":["...","1","2","4,","77.","=","[","[1,2],","[1,3],","[1,4],","[2,3],","[2,4],","[3,4],","]","algorithm","analysi","class","code","combin","combine(int","descript","example:","for(int","given","helper(res,tmp,n,k,1);","helper(vector>&","i=pos;i","if(tmp.size()==k){","input:","int","integ","k","k)","k,","k,int","n","n,","n,int","n.","number","out","output:","pos){","possibl","problem","public:","res,vector&tmp,int","res.push_back(tmp);","res;","return","return;","solut","thought","tmp;","two","vector","vector>","void","{","}","组合问题需要放置k个值，每个值只能比后面的小，不能重复。时间复杂度不是太好分析，有很多种情况。但是回溯法时间复杂度一般都是o(2^n)","组合问题，典型的回溯法例题，使用回溯法解决"],"78.-subsets.html":["(the","1)","78.","=","[","[1,2,3]","[1,2,3],","[1,2],","[1,3],","[1],","[2,3],","[2],","[3],","[]","]","algorithm","analysi","class","code","contain","descript","distinct","duplic","example:","for(int","given","help(res,tmp,nums,0);","help(vector>&","i=pos;i","if(tmp.size()==nums.size()","input:","integers,","note:","num","nums)","nums,","nums,int","output:","pos){","possibl","power","problem","public:","res,vector&tmp,vector&","res.push_back(nums);","res.push_back(tmp);","res;","return","return;","set","set).","solut","subset","subsets(vector&","subsets.","thought","tmp;","vector","vector>","void","{","}","时间复杂度是o(2^n),对于每一个数，都能选择是放入或者不放入最后数组","类似上一题得到组合，只不过这里需要得到所有大小的组合。只需要改变回溯法中，将中间结果push到res的位置，在进入下一个函数的时候就push，而不是在递归基的时候，这样就能到达遍历的效果。"],"79.-word-search.html":["\"abcb\",","\"abcced\",","\"adjacent\"","\"see\",","){","//board[i][j]='\\0';","1,j,pos+1)||","1,pos+1)","2019/10/16","2d","79.",":","=","[","['a','b','c','e'],","['a','d','e','e']","['s','f','c','s'],","]","adjac","algorithm","analysi","board","board,","board[i][j]='\\0';","board[i][j]=t;","board[i][j]^=255;","bool","cell","cell,","char","class","code","construct","descript","dfs，每层有4个分量，时间复杂度还是挺高的，但是不好分析。我这里就不分析了","example:","exist","exist(vector>&","false.","false;","find","for(int","given","grid.","help(board,word,i","help(board,word,i+1,j,pos+1)||","help(board,word,i,j","help(board,word,i,j+1,pos+1)||","horizont","i,int","i=0;i>&board,","if(","if(i=board.size()||j>=board[0].size()||board[i][j]=='\\0'||word[pos]!=board[i][j])","if(i=board.size()||j>=board[0].size()||word[pos]!=board[i][j])","if(pos==word.size())","j,int","letter","more","neighboring.","once.","pos){","problem","public:","return","same","search","sequenti","solut","string","string&word,int","t=board[i][j];","those","thought","true.","true;","updat","us","vertic","word","word)","word,","{","}","};","下午上课忽然想通了中午异或的问题，我中午出问题的代码是board[i][j]^=1.大家应该都知道，char是1个字节的，有8位，但是数字1是0000001，所以异或之后只有最后一位会改变。只改变最后一位的话，很容易导致异或之后和其他字符相同。","思路很简单，都类似一种暴力搜索法，直接从每个节点都开始搜索，如果是当前节点是对的，就从这个节点的4个方向继续搜索。使用dfs搜索，每一层都有4个分量。唯一需要注意的就是不能搜索到重复的值，也就是我这里搜索完，我去我右边的节点，我右边的节点不能再搜索这个原来的节点了。","所以想通之后，直接将代码改为board[i][j]^=255就稳稳的过了。（255=11111111）","有一种方法就是用标志，显示这里已经被搜索了，每次搜索完之后将当前字符设置为0。那么之后肯的和他匹配不了了。","还有一种思路利用异或的特性。异或两次回到原值，那么我们经历一个节点之后只需要将这个节点异或一下，之后回来的时候再异或一下，就能恢复。这种好处是可以不用中间变量来保存中间值，但是坏处就是异或之后的值可能会对之后的程序产生影响，我当时就是用这种思路，结果到倒数第二个样例的时候，失败了。最后换了第一种方法"],"80.-remove-duplicates-from-sorted-array-ii.html":["(i.e.,","(int","//","0,","0;","1,","1:","2","2,","2:","2]){","2]相比，如果大于的话，那么当前肯定要加，但是如果等于的话，那肯定就是前面已经放置了两个相同的数，就可以不用再写了。","3","5,","7,","80.","=","[0,0,1,1,1,1,2,3,3],","[1,1,1,2,2,3],","algorithm","alloc","analysi","anoth","answer","appear","array","array,","array?","be","beyond","caller","caller.","clarification:","class","code","confus","copy)","descript","doesn't","duplic","element","elements.","exampl","extra","first","five","for(auto","function","function,","given","if(posnums[po","ii","input","int","integ","intern","known","leav","len","length","length.","make","matter","mean","memory.","modif","modifi","new","note","num","num:nums){","nums)","nums,","nums[pos++]=num;","o(1)","pass","place","pos;","pos=0;","print","problem","public:","range语句，得到nums所有的数字。然后和nums[po","reference,","reference.","remov","removeduplicates(nums);","removeduplicates(vector&","respectively.","return","set","seven","solut","sort","space","such","think","this:","thought","twice","us","valu","well.","without","{","}","};","一次遍历出结果，时间复杂度是o(n)","这题目其实很简单，怎么样都能做得出。只是有些人做的简单有些人做的复杂。首先用for"],"81.-search-in-rotated-sorted-array-ii.html":["(i.e.,","0","1:","1;","2:","3","81.","=","[0,0,1,2,2,5,6]","[2,5,6,0,0,1,2]).","[2,5,6,0,0,1,2],","affect","algorithm","analysi","array","array,","array，这题在数组中加入了重复的数字，导致会出现一些问题。比如left和right是一样的数，甚至是，left和mid和right都是一样的数，这就不好区分两个区间。首先使用一个循环处理，如果left和right一样，将left++。这样就能去除所有边界一样的情况。除去之后，就和前面没有重复数组是一样的处理情况了","ascend","becom","beforehand.","bool","class","code","complexity?","contain","descript","duplicates.","exampl","fals","false.","follow","found","given","ii","input:","int","left=0,right=nums.size()","num","nums,","order","otherwis","output:","pivot","problem","public:","return","rotat","run","search","search(vector&","search.","solut","sort","suppos","target","target)","thought","time","true","true,","unknown","up","up:","valu","while(leftnums[mid]&&target=nums[left]&&target","why?","{","本来是二分查找的变体，时间复杂度应该是o(lgn)，但是这里有个对left和right的预处理，最坏情况下，时间复杂度会到o(n)。","相比于search"],"82.-remove-duplicates-from-sorted-list-ii.html":["*","*/","*next;","/**","1","1:","2","2:","82.",":",">1",">2",">3",">4",">5",">next;",">next=deleteduplicates(head);",">val)",">val){",">val==now","algorithm","analysi","class","code","definit","delet","deleteduplicates(head);","deleteduplicates(listnode*","descript","distinct","duplic","exampl","given","head)","head=head","if(head&&head","if(head==null)","ii","input:","int","leav","link","list","list,","list.","listnod","listnode(int","listnode*","next(null)","node","now","now;","now=head;","null;","number","numbers,","origin","output:","problem","public:","remov","return","singli","solut","sort","struct","thought","val(x),","val;","while(head&&head","x)","{","{}","}","};","}else{","一次遍历解决，时间复杂度o(n)","又是链表问题，并且直接返回一个链表。和之前做链表题一样直接用递归的形式解决"],"83.-remove-duplicates-from-sorted-list.html":["*","*/","*next;","/**","1","1:","2:","83.",":",">1",">2",">3",">next;",">next==null)",">next=deleteduplicates(next);",">val){",">val==head","algorithm","analysi","appear","class","code","definit","delet","deleteduplicates(listnode*","descript","duplic","each","element","exampl","given","head","head)","head;","if(head==null||head","input:","int","link","list","list,","list.","listnod","listnode(int","listnode*","next(null)","next=head","next=next","once.","output:","problem","public:","remov","return","singli","solut","sort","struct","such","thought","val(x),","val;","while(next&&next","x)","{","{}","}","};","一次遍历解决问题，时间复杂度o(n)","和上一题一样，甚至比上一题简单，使用递归解决"],"84.-largest-rectangle-in-histogram.html":["++i;","//cout","1,","10","84.","=","[2,1,5,6,2,3]","[2,1,5,6,2,3].","abov","algorithm","analysi","area","area,","bar","class","code","descript","each","example:","find","for(int","given","height","heights)","heights.push_back(0);","histogram","histogram'","histogram.","i=0;i=heights[st.top()]){","if(st.empty()){","input:","int","integ","largest","largestrectanglearea(vector&","n","neg","non","output:","problem","public:","rectangl","repres","res=0;","shade","shown","solut","st.push(i);","st;","stack","t=st.top();st.pop();","thought","unit.","width","{","}else{","一次遍历解决问题，使用栈来辅助解决。对于数组，如果碰到顺序递增，就将当前数字压入栈中，如果当前height小于栈顶值，就将栈顶值弹出，并计算以弹出值为高度的矩形面积大小。这里关键是如何去计算矩形的宽，根据我们之前的算法，可以知道，当前栈顶的值肯定代表的是当前访问过的，剩下的最大值，因为比他更大的值在之前肯定被弹出计算了，那么，可以用当前index减去当前栈顶代表的index，就能表示矩形的宽了。","使用栈，一次遍历得到结果，时间复杂度o(n)"],"85.-maximal-rectangle.html":["0'","0;","1'","1's,","1;","1。然后定义一个curleft和curright，每当当前节点为0的时候，就要改变curleft和currgiht，当节点为1的时候，改变right和left数组。具体行为可以看代码理解。","2d","6","85.","[","[\"1\",\"0\",\"0\",\"1\",\"0\"]","[\"1\",\"0\",\"1\",\"0\",\"0\"],","[\"1\",\"0\",\"1\",\"1\",\"1\"],","[\"1\",\"1\",\"1\",\"1\",\"1\"],","]","algorithm","analysi","area.","binari","class","code","contain","curright=j","descript","example:","fill","find","for(int","fromleft(matrix[0].size(),0);","fromright(matrix[0].size(),matrix[0].size());","fromright[j]=matrix[0].size()","fromright[j]=min(fromright[j],curright);","given","height(matrix[0].size(),0);","i=0;i=0;","if(matrix.size()==0||matrix[0].size()==0)","if(matrix[i][j]=='0'){","input:","int","j){","j=0;j","largest","matrix","matrix)","maxim","maximalrectangle(vector>&","output:","problem","public:","rectangl","res=0;","return","solut","thought","vector","{","}","}else{","有一个大循环，循环中进行3次遍历。相当于对二维数组进行遍历，时间复杂度o(n²)","求出矩阵中的最大矩形，可以利用动态规划的思路求解。首先定义一个left数组，保存节点高度可以最左到哪个节点，再定义一个right数组，保存节点高度最右可以到哪个节点。然后还有height数组，保存当前节点的高度。最后我们从以为矩阵开始，慢慢加高维度。起始时，left数组初始化为0，right数组初始化为s"],"86.-partition-list.html":["*","*/","*next;","/**","1","1);","3","86.",":","=",">2",">2,",">3",">4",">5",">next",">next){",">next;",">next=head;",">next=null;",">next=tou",">next=tou1",">val>=x){","algorithm","analysi","befor","class","code","come","definit","descripiton","each","equal","example:","given","greater","head","head,","head=tou1;","if(tou1","input:","int","less","link","list","list.","listnod","listnode(","listnode(int","listnode*","next(null)","node","order","origin","output:","partit","partition(listnode*","partitions.","preserv","problem","public:","rel","return","singli","solut","struct","such","thought","tou1","tou1=new","tou1=tou1","tou2","tou2=new","tou2=tou2","tou=tou2;","two","val(x),","val;","valu","while(tou1","x","x)","x,","x.","{","{}","}","};","算法一次遍历链表，时间复杂度o(n)","首先初始化两个头，然后将两个partition，分别加到两个头上，最后将两个partition合并"],"87.-scramble-string.html":["\"abcde\",","\"at\",","\"caebd\"","\"eat\"","\"gr\"","\"great\",","\"great\".","\"great\":","\"rgeat\"","\"rgeat\".","\"rgtae\"","\"rgtae\".","/","//","1:","2:","87.","=","\\","algorithm","analysi","below","binari","bool","children","children,","children.","choos","class","code","continu","cout","descript","determin","e","eat","empti","exampl","example,","fals","g","given","gr","great","input:","isscramble(str","leaf","length,","node","non","on","output:","partit","possibl","problem","produc","public:","r","recursively.","repres","represent","rg","rgeat","rgtae","s1","s1,","s1.","s2","s2)","same","scrambl","similarly,","solut","string","string,","substr","swap","t","ta","tae","thought","tree","true","two","{","判断是否scramble，可以用递归的方式进行。如果一个字符串的左边和另一个字符串的左边是scramble，右边和右边是scramble。或者是，左右，右左是scramble字符串的话。那么这两个字符串就是scramble字符串。可以通过剪枝加快判断，首先判断两个字符串是否包含同样的字符，两个字符串中包含的字符不一样，就可以直接返回。虽然这里用了o(n)的时间，但是能剪去很多分支，是值得的。","每个函数正常情况下都能分出4个分支，每个分支中时间复杂度是线性的。最后时间复杂度不好定义。但是整个运行时间复杂度还是挺高的"],"88.-merge-sorted-array.html":["(size","+","1,j=n","1,res=m+n","1;","3","88.","=","[1,2,2,3,5,6]","[1,2,3,0,0,0],","[2,5,6],","]:nums2[j","];","]=","addit","algorithm","analysi","array","array.","assum","class","code","descript","element","enough","equal","example:","given","greater","hold","i=m","i>=0&&nums1[i]>nums2[j]?nums1[i","initi","input:","int","integ","m","m,","merg","merge(vector&","n","n)","note:","number","nums1","nums1,","nums1[r","nums2","nums2,","nums2.","on","output:","problem","public:","respectively.","solut","sort","space","thought","two","vector&","void","while(j>=0){","{","}","};","合并两个有序数组，这也是归并排序中必不可少的一步，如何做好这一步，速度快并且不溢出，还是有点难度的。我们归并排序的时候，一般是将前半部分数组复制，后半部分数组保存。但是这里是将后半部分数组赋值，前半部分保存下来。我们需要尽可能的利用前面保存的数据，能不改变就不改变。所以我们从后往前合并。如果nums2已经用完了，这时候，nums1前面的数据就能直接使用了，而不需要改变。","对每个数操作一次，时间复杂度o(m+n)"],"90.-subsets-ii.html":["(the","//类似上一题，直接用回溯法解决问题","90.","[","[1,2,2]","[1,2,2],","[1,2],","[1],","[2,2],","[2],","[]","]","algorithm","analysi","class","code","collect","contain","descript","duplic","duplicates,","example:","for(int","given","help(res,tmp,nums,0);","help(vector>&res,vector&tmp,vector&nums,int","i=1;itmp=res[start];","i=pos;i>","if(pos==nums.size())","ii","input:","int","integ","note:","nums)","nums,","output:","pos){","possibl","power","problem","public:","res.push_back(tmp);","res.push_back({nums[0]});","res;","res={{}};","return","return;","set","set).","solut","sort(nums.begin(),nums.end());","start=1;","subset","subsets.","subsetswithdup(vector&","thought","tmp.push_back(nums[i]);","tmp{};","vector","vector>","void","{","}","};","得到子集问题，和之前的第一题相比，多了重复数字，在计算子集的时候，需要处理重复情况。这里可以用和第一题类似的回溯法。也可以一次次将新数字push_back到之前得到的结果中，得到新的子集。","得到所有的子集问题，回溯法时间复杂度o(2^n)。每个数字可以出现一个也可以不出现，每个数字都会进行两次计算，两个分支。最后得到2^n"],"91.-decode-ways.html":["\"12\"","\"226\"","\"ab\"","\"bbf\"","\"bz\"","\"l\"","\"vf\"","'a'","'b'","'z'","(1","(12).","(2","(22","...","0;","1","1:","2","2)","26","26),","2:","3","6),","6).","91.",">","algorithm","analysi","be","class","code","contain","decod","desctipt","determin","digits,","empti","encod","exampl","explanation:","follow","for(int","given","i=1;i","if(s[0]=='0')","input:","int","it.","letter","mapping:","messag","non","number","numdecodings(str","output:","problem","public:","res[0]=1;res[1]=1;","return","s)","solut","string","thought","total","us","vectorres(s.size()+1);","way","way。","way就可以加上前两次的decod","way，如果当前的数字不等于0，就能加上前一个次的decod","z","{","一次遍历处理数组，时间复杂度o(n),使用一维数组保存结果，空间复杂度o(n)","典型的动态规划问题，当前数字如果可以和前面数字组合成为一个合法的字符，当前decod"],"92.-reverse-linked-list-ii.html":["){","*","*/","*next;",",","/**","1","1);","2,","4","92.",":","=",">2",">3",">4",">5",">next;",">next=head;",">next=mov",">next=move;",">next=pr",">null",">null,","algorithm","analysi","class","code","definit","descript","example:","head,","ii","input:","int","length","link","list","list.","listnod","listnode(","listnode(int","listnode*","m","m)","m,","move","move=tmp","n","n)","n.","newhead","newhead=new","next(null)","note:","on","output:","pass.","posit","pre","pre=newhead;","pre=pr","problem","public:","return","revers","reversebetween(listnode*","singli","solut","struct","thought","tmp","tmp=pre","val(x),","val;","while(n","x)","{","{}","}","};","≤","对链表进行一次遍历，转置，循环中操作都是o(1)，最后时间复杂度o(n)","首先找到待旋转的节点，然后就是一个旋转链表问题了"],"93.-restore-ip-addresses.html":["\"255.255.111.35\"]","\"25525511135\"","3个字符的情况。","93.","[\"255.255.11.135\",","a=1;a","address","algorithm","analysi","class","code","combinations.","contain","descript","digits,","example:","for(int","given","input:","ip","output:","possibl","problem","public:","res;","restor","restoreipaddresses(str","return","s)","solut","string","thought","valid","vector","{","上面介绍的是回溯的情况，其实可以不需要回溯。因为肯定有4个地方需要我们放置数字，我们只需要3个循环，每个循环处理1","其实是一道典型的回溯法问题。首先第一个位置放一个字符，然后进如下一个函数，运行完回溯之后，放两个字符。然后是3个。中间判断非法情况，如果长度大于1并且第一个字符是'0',显然不行。如果转化为数字之后，数值大于255，显然也是不行的。如果所有情况都满足，最后将结果push到res中。","虽然有4个循环，但是时间复杂度不会很大，因为每个循环就进行3次，循环中的操作时间复杂度可以近似看做o(1)。"],"94.-binary-tree-inorder-traversal.html":["*","*/","*left;","*right;","/","/**","//morri","//迭代写法","//递归写法","1","2","3","94.",":",">left);",">left;",">left==null){",">right!=root){",">right&&prev",">right);",">right;",">right==null){",">right=null;",">right=root;",">val);","[1,3,2]","[1,null,2,3]","\\","a)","algorigthm","algorithm","b)","binari","class","code","definit","descript","example:","follow","given","if(prev","if(root","if(root==null)","inord","inorder(root","inorder(root);","inorder(treenode*","inordertraversal(treenode*","input:","int","iteratively?","lass","left(null),","node.","nodes'","output:","porblem","prev","prev=null;","prev=prev","prev=root","public:","recurs","res.push_back(root","res;","return","return;","right(null)","root)","root=prev","root=root","root=st.top();","solut","st.pop();","st.push(root);","st;","stack","struct","thought","travers","traversal，只需要o(1)的空间，时间复杂度还是控制在o(n)。极大的减少了空间。这里主要是利用了叶子节点大量的空指针。前面问题使用栈来辅助解决，是因为访问到后续节点的时候，不能够再回到根节点，这里用叶子节点的指针，指向后继节点，方便回到前面。","tree","tree,","treenod","treenode(int","treenode*","trivial,","up:","val(x),","val;","values.","vector","void","while(prev","while(root){","while(root||!st.empty()){","x)","{","{}","}","};","}else{","二叉树的中序遍历问题。这种问题用递归的方法是很简单的。但是还是要知道迭代的写法。毕竟如果节点很多的话，那么多递归函数，栈开销会很大。","如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空（恢复树的形状）。输出当前节点。当前节点更新为当前节点的右孩子。","如果前驱节点的右孩子为空，将它的右孩子设置为当前节点。当前节点更新为当前节点的左孩子。","如果当前节点的左孩子不为空，在当前节点的左子树中找到当前节点在中序遍历下的前驱节点。","如果当前节点的左孩子为空，则输出当前节点并将其右孩子作为当前节点。","步骤是：","然后去看了一下discuss，真的是发现每次看都会发现很意想不到的算法。比如中序遍历，这里就可以用morri","递归写法很简单，按顺序访问就行，对于迭代写法，我们首先要明白我们访问的顺序，先左，后中再右。我们使用一个栈保存中间节点，没碰到一个root节点，顺序将左子树一直push进栈，到叶子节点的时候，弹出顶上的节点，这时候就能访问了，然后对于这个节点的右子树，把它当做一个root，继续运行一遍","通过分析和leetcode最后的结果来说，上面3中方法从上到下应该是越来越好的。迭代对于递归来说，减少了函数栈开销，最后空间用的少一点。morris对于上面两中来说，只用了o(1)的空间复杂度，最后空间是用的最少的。","重复以上1、2直到当前节点为空。"],"95.-unique-binary-search-trees-ii.html":["(binari","*","*/","*left;","*right;","...","/","/**","//res.push_back(null);","1","1,size);","10生成bst。首先利用5当中间节点的时候，1","2","3","4当左子树的情况。我们可以用动态规划的方法来避免重复计算。","4要当左子树，然后用6当中间节点的时候，还是会碰到1","5","95.",":",">left=le;",">right=ri;","[","[1,null,2,null,3]","[1,null,3,2],","[2,1,3],","[3,1,null,null,2],","[3,2,null,1],","\\","]","abov","algorithm","analysi","below:","binari","bst'","class","code","correspond","definit","descript","end,int","example:","explanation:","for(int","for(treenode*","gener","genera(1,n,n);","genera(int","generatetrees(int","given","i=start;i","if(ma.find(start*size+end)!=ma.end()){","if(n==0)","if(start>end){","ii","input:","int","integ","le:left){","left(null),","left=genera(start,i","ma;","ma[start*size+end];","ma[start*size+end]=res;","map>","n)","n,","n.","node.","output","output:","problem","public:","res.push_back(root);","res;","return","ri:right){","right(null)","right=genera(i+1,end,size);","root","root=new","search","shown","size){","solut","start,int","store","struct","structur","thought","tree","treenod","treenode(i);","treenode(int","treenode*","trees)","uniqu","val(x),","val;","valu","vector","x)","{","{null};","{}","{};","}","};","对于一个二叉树来说，最好使用递归解决问题。这里返回值是一系列的二叉树。对于一个range，我们可以首先定好一个中间节点当做二叉树的根节点，然后比这个值小的当做左子树，大的当右子树。这里我们就可以将代码简化很多了。但是单就这样做还是不行，会有大量的重复计算，比如1","这里是一种递归方法，时间复杂度还不会分析。使用动态规划解决之后时间还是不会太慢的"],"96.-unique-binary-search-trees.html":["(binari","...","/","1","2","3","3,","5","96.","=","\\","algorithm","analysi","binari","bst'","bst's:","class","code","descript","dp(n+1,0);","dp[0]=1;","dp[1]=1;","example:","explanation:","for(int","given","i=2;i","input:","int","left,right;","mani","n","n)","n,","n?","numtrees(int","output:","problem","public:","search","solut","store","structur","thought","total","tree","trees)","uniqu","valu","vector","{","和上题一个类型，简化了一点。上一题需要输出所有的结果，这里不需要结果，只需要数字。对于上一题，我们保存一棵树开始和结束的位置。来映射他的结果，但是这里不需要，因为只要树的size固定好，能生成的所有的tree的数量也就出来了。这里使用一个数组保存结果","算法中有两个循环，执行n²次，每次执行时间复杂度o(n)，最后时间复杂度o(n²)"],"97.-interleaving-string.html":["\"aabcc\",","\"aadbbbaccc\"","\"aadbbcbcac\"","\"dbbca\",","(s2.size()+1,false));","1:","2:","97.","=","algorithm","analysi","bool","c==c?以及aabc和dbbca是否匹配aadbbcbca，或者是a==c?以及aabcc和dbbc是否匹配aadbbcbca。上面两中情况任何一种成立，这里的匹配都可以算成功。所以这里动态规划保存之前的结果，这次匹配使用前面的结果解决问题。","class","code","descript","exampl","fals","false;","find","for(int","form","given","i=1;i","if(s1.size()+s2.size()!=s3.size())","input:","interleav","isinterleave(str","output:","pos(s1.size()+1,vector","pos[0][0]=1;","problem","public:","return","s1","s1,","s2","s2,","s2.","s3","s3)","s3,","solut","string","thought","true","vector>","whether","{","字符串问题，这题其实和最长公共子串问题很像，使用二维数组保存结果，动态规划解决问题。","状态转移方程得出：对于aabcc和dbbca匹配aadbbcbcac问题。我们只需要找到","设是s1长m，s2长n，会遍历一个m*n的二维数组,最后时间复杂度o(m*n)"],"98.-validate-binary-search-tree.html":["(bst).","*","*/","*left;","*right;","/","/**","1","1:","2","2147483649;","2:","3","4","4.","5","6","98.",":",">left;",">right;",">valval;","[2,1,3]","[5,1,4,null,null,3,6]","\\","algorithm","analysi","assum","binari","bool","both","bst","child'","class","code","contain","defin","definit","descript","determin","exampl","explanation:","fals","follows:","given","greater","if(root","input:","int","isvalidbst(treenode*","key","key.","left","left(null),","less","long","node","node'","node.","output:","pre=","problem","public:","return","right","right(null)","root","root)","root=root","root=todo.top();todo.pop();","search","solut","stack","struct","subtre","tarversal但是leetcode可能是有bug，代码是正确的但是最后得不到合理的结果。","thought","todo.push(root);","todo;","tree","tree,","treenod","treenode(int","trees.","true","true;","val(x),","val;","valid","valu","while(root){","while(root||!todo.empty()){","x)","{","{}","}","};","得到合法的bst，bst有个性质就是中序遍历结果是一个有序数组。所以我们直接中序遍历，每次保存前一个值，如果前一个值大于等于当前遍历的值，那么就不是一个合法的bst，否则就是合法的bst","时间复杂度o(n),遍历的时间，空间复杂度o(n)，使用一个栈保存数据。其实可以用之前的morri"],"99.-recover-binary-search-tree.html":["(bst)","*","*/","*left;","*right;","/","/**","//利用bst的中序遍历性质来解决问题","1","1:","2","2:","3","4","99.",":",">left);",">right);",">val){",">val;",">val=second",">val=tmp;",">val>root","[1,3,null,null,2]","[2,1,4,null,null,3]","[3,1,4,null,null,2]","[3,1,null,null,2]","\\","algorithm","analysi","binari","bo=false;","bool","chang","class","code","constant","count++;","count=0;","definit","descript","devis","element","exampl","first","first=null;","first=pre;","follow","forward.","if(count==2||root==null)","if(first!=null&&pr","if(first==null&&pr","input:","int","left(null),","mistake.","node.","o(n)","output:","pre=new","pre=root;","pretti","problem","public:","recov","recovertree(treenode*","return;","right(null)","root)","root){","search","second","second=null;","second=root;","solut","solution?","space","straight","struct","structure.","swap","thought","tmp=first","travers(root","travers(root);","travers(treenode*","tree","treenod","treenode(int","treenode(int_min);","treenode*","two","up:","us","val(x),","val;","void","without","x)","{","{}","}","};","一次遍历，时间复杂度o(n)","已知bst中有两个数字是错的，那么我们就找到两个错的位置就行。还是中序遍历，找到不是顺序增长的两个位置。记录下来，最后交换两个的值"],"100.-same-tree.html":["*","*/","*left;","*right;","/","/**","1","100.","1:","2","2:","3","3:",":",">left)&&issametree(p",">left,q",">right);",">right,q",">val)){",">val==q","[1,1,2]","[1,2,1],","[1,2,3]","[1,2,3],","[1,2],","[1,null,2]","\\","algorithm","analysi","binari","bool","check","class","code","consid","definit","descript","exampl","fals","false;","function","given","ident","if(p&&q&&(p","if(p==null&&q==null)","input:","int","issametree(p","issametree(treenode*","left(null),","node","node.","not.","output:","p,","problem","public:","q)","return","right(null)","same","solut","struct","structur","thought","tree","treenod","treenode(int","treenode*","trees,","true","true;","two","val(x),","val;","value.","write","x)","{","{}","}","};","树问题，递归解决，首先判断当前节点问题，然后对左右子树分别进行同样的计算。","相当于对树进行了一次遍历，时间复杂度o(n)"],"101.-symmetric-tree.html":["(ie,","*","*/","*left,*right;","*left;","*right;","/","/**","1","101.","2","3","4",":",">left);",">right);",">val!=right",">val)","[1,2,2,3,4,4,3]","[1,2,2,null,3,null,3]","\\","algorithm","analysi","around","binari","bool","both","center).","check","class","continue;","definit","descript","example,","false;","follow","given","if(left","if(left==null&&right==null)","if(left==null||right==null)","if(root==null)","int","issymmetric(treenode*","iteratively.","itself","left(null),","left=qu.front();","mirror","node.","not:","note:bonu","point","problem","public:","qu.pop();","qu.push(left","qu.push(right","qu.push(root","qu;","queue","recurs","return","right(null)","right=qu.front();","root)","solut","solv","struct","symmetr","symmetric:","thought","tree","tree,","treenod","treenode(int","true;","val(x),","val;","whether","while(!qu.empty()){","x)","{","{}","}","};","时间复杂度就是o(n),遍历一遍树。","本质是树的层次遍历，判断每一层是否是对称的。层次遍历需要用到队列来辅助解决。得到每一层所有的值。最后遍历判断是否对称。但是对于这题，还有个技巧。对于左右子树，采取不同的策略。对于左子树，每次访问完之后，先push左及节点再push右节点。右子树，先push右再左。这样，每次从队列中拿两个节点出来，这两个节点就刚好都是对称节点。我们判断它们是否一样就行，然后继续运行。"],"102.-binary-tree-level-order-traversal.html":["(ie,","*","*/","*left;","*right;","/","/**","100);","102.","15","20","3","7","9",":",">left);",">right);",">val);","[","[15,7]","[3,9,20,null,null,15,7],","[3],","[9,20],","\\","]","algorithm","analysi","as:","binari","break;","class","code","continue;","definit","descript","else{","example:given","given","if(q.empty())","if(tq==null){","if(tq==pos){","int","left","left(null),","level","level).","levelorder(treenode*","node.","nodes'","order","pos=new","problem","public:","q.pop();","q.push(pos);","q.push(root);","q.push(tq","q;","queue","res.push_back(tmp);","res;","return","right(null)","right,","root)","solut","struct","thought","tmp.clear();","tmp.push_back(tq","tmp;","tq=q.front();","travers","tree","tree,","treenod","treenode(","treenode(int","treenode*","val(x),","val;","values.","vector","vector>","while(!q.empty()){","x)","{","{}","}","};","二叉树层次遍历，使用queue辅助解决，必须掌握的题目","遍历一棵树，时间复杂度o(n)"],"103.-binary-tree-zigzag-level-order-traversal.html":["(ie,","*","*/","*left;","*right;","/","/**","//use","1);","103.","15","1]=t","20","3","7","9",":","=",">left)",">left);",">right)",">right);",">val);",">val;","[","[15,7]","[20,9],","[3,9,20,null,null,15,7],","[3],","\\","]","algorithm","altern","analysi","as:","between).","binari","bo=false;","bo=true;","bool","break;","class","code","continue;","definit","descript","else{","example:given","given","i++;","i=0;","if(bo){","if(lefttoright){","if(q.empty())","if(q1.empty())","if(q2.empty())","if(root==null)","if(t","if(t==tmp){","if(tmp","if(tmp==null)","int","left","left(null),","lefttoright=!lefttoright;","lefttoright=true;","level","new","next","node.","nodes'","on","order","problem","public:","q.pop();","q.push(root);q.push(tmp);","q.push(t","q.push(tmp);","q1,q2;","q1.pop();","q1.push(root);","q1.push(tmp","q2.pop();","q2.push(tmp","q;","queue","res.push_back(ve);","res;","return","right","right(null)","right,","root)","solut","stack","struct","t=q.front();","thought","tmp","tmp=q1.top();","tmp=q2.top();","travers","tree","tree,","treenod","treenode(","treenode(int","treenode*","two","val(x),","val;","values.","ve(1);","ve.clear();","ve.push_back(tmp","ve.resize(q.size());","ve;","ve[i]=t","ve[ve.size()","vector","vector>","while(!q1.empty()){","while(!q2.empty()){","while(true){","x)","zigzag","zigzaglevelorder(treenode*","zigzag层次遍历，分析之后得知，可以用两个栈来辅助遍历。参差遍历本来是用一个队列就行。但是这个用两个栈，然后定义一个bool变量指定现在是左到右还是右到左，分别用一个栈辅助遍历。最后处理方式和层次遍历一样","{","{}","}","};","}else{","使用两个栈的方法肯定还有优化的地方，去看了discuss之后，发现可以直接使用一个队列来做。最后遍历的结果需保存在一个vector中，我们默认只能push_back但是其实可以先定义好vector，最后看情况从左右分别将结果放置进去。","遍历问题时间复杂度还是一样的，都是o(n)"],"104.-maximum-depth-of-binary-tree.html":["*","*/","*left;","*right;","/","/**","0;","104.","15","20","3","3.","7","9",":","=",">left),maxdepth(root",">right))+1;","[3,9,20,null,null,15,7],","\\","algorithm","along","analysi","binari","children.","class","code","definit","depth","depth.","descript","down","example:","farthest","find","given","if(root==null)","int","leaf","left(null),","longest","max(maxdepth(root","maxdepth(treenode*","maximum","node","node.","note:","number","path","problem","public:","return","right(null)","root","root)","solut","struct","thought","tree","tree,","treenod","treenode(int","val(x),","val;","x)","{","{}","}","};","典型的递归解决二叉树问题","类似遍历问题，时间复杂度o(n)"],"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":["*","*/","*left;","*right;","/","/**","105.","15","20","3","7","9",":","=",">right=build(preorder,inorder,prelow+1+leftsize,prehigh,inroot+1,inhigh);","[3,9,20,15,7]","[9,3,15,20,7]","\\","algorithm","analysi","assum","binari","build(preorder,inorder,0,preorder.size(),0,inorder.size());","build(vector&","buildtree(vector&","class","code","construct","definit","descript","duplic","example,","exist","follow","for(int","given","i=inlow;ileft=build(preorder,inorder,prelow+1,prelow+1+leftsize,inlow,inroot);","if(prelow==prehigh)","inhigh){","inlow,int","inord","inorder)","inorder,int","inroot;","int","left(null),","node.","note:y","null;","prehigh,int","prelow,int","preorder","preorder,","problem","public:","return","right(null)","root","root;","root=new","solut","struct","thought","travers","tree","tree,","tree.","tree:","treenod","treenode(int","treenode(preorder[prelow]);","treenode*","val(x),","val;","vector&","x)","{","{}","}","};","前序遍历和中序遍历转二叉树，首先利用前序遍历第一个值就是当前根节点的性质。找到根节点，只有去中序遍历中找到根节点对应的位置，位置左边就是左子树右边是右子树。然后对于左右子树，得到他们的大小，去前序遍历中找到他们对应的位置。然后对于左右子树，递归解决。","每次在中序遍历中找到根节点的位置，一般情况下需要o(n)时间。那总时间可以表达为t(n)=2t(n/2)+o(n)，这个表达式用主定理分析可知为t(n)=o(nlgn)"],"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html":["106.","binari","construct","inord","postord","travers","tree","后序遍历和中序遍历得到二叉树本质和上一题没区别。只是后序遍历的根节点出现在最后面。将前一题的算法修改下即可"],"107.-binary-tree-level-order-traversal-ii.html":["107.","binari","ii","level","order","travers","tree","和之前层次遍历一样，最后得到结果的时候reverse一下"],"108.-convert-sorted-array-to-binary-search-tree.html":["*","*/","*left;","*right;","/","/**","//coutleft=build(nums,low,mid);","0","1.","10","10,","10,null,5],","108.","3","3,0,5,9],","3,9,","5","9",":",">right=build(nums,mid+1,high);","[","[0,","\\","algorithm","analysi","answer","array","array:","ascend","balanc","binari","bst.","bst:","build(nums,0,nums.size());","build(vector&","class","code","convert","defin","definit","depth","descript","differ","element","example:","follow","given","height","high){","if(high==low)","int","is:","left(null),","low)>>1);","low,int","mid=low+((high","more","never","node","node.","null;","nums)","nums,int","on","order,","possibl","problem","problem,","public:","repres","return","right(null)","root","root;","search","solut","sort","sortedarraytobst(vector&","struct","subtre","thought","tree","treenod","treenode(int","treenode*","two","val(x),","val;","x)","{","{}","}","};","时间复杂度应该是o(n)遍历到所有节点，最后生成一个树","这里需要生成一个平衡bst。平衡bst有很多种表示方法，但是我们只需要生成一种就行，那当然是生成最简单的bst。每次到一个节点时，找到中点，将一个有序数组对分。直到叶节点。这样就能保证最后得到的是平衡二叉树"],"110.-balanced-binary-tree.html":["*","*/","*left;","*right;","/","/**","0;","1","1.","110.","15","1:","2","20","2:","3","4","7","9",":",">left);",">right);","[1,2,2,3,3,null,null,4,4]:","[3,9,20,null,null,15,7]:","\\","algorithm","analysi","as:","balanc","balanced.","binari","bool","class","code","defin","definit","descript","determin","differ","exampl","false.","false;","follow","given","height","if(isbalan(root)==int_max)","if(lefth==int_max||righth==int_max||abs(lefth","if(root==null)","int","int_max;","isbalan(treenode*","isbalanced(treenode*","left","left(null),","lefth=isbalan(root","max(lefth,righth)+1;","more","node","node.","problem","problem,","public:","return","right","right(null)","righth)>1)","righth=isbalan(root","root)","root){","solut","struct","subtre","thought","tree","tree,","treenod","treenode(int","true.","true;","val(x),","val;","x)","{","{}","}","};","二叉树问题，判断是否不是平衡二叉树。平衡二叉树定义是左右子树高度差要小于等于1.于是这题变成了类似求二叉树高度的问题。之前也做过二叉树高度问题，直接递归解决。这里只需要在求出高度之后加入一个判断。如果不是平衡的如何处理。求高度的函数，返回值必须是int而不是bool，这就是我们面临的问题。一种解决方案是把求高度的照搬过来，加一个全局变量，如果不平衡，全局变量为false。我们这里用另一种方法，如果不平衡，返回int_max.由于题目中不存在这么大的二叉树，所以int_max和任何子树组合都是不平衡的，最后int_max会传递到调用函数，最后判断是否为int_max来觉得返回true还是fals","时间复杂度o(n),就是遍历问题，遍历所有节点之后会得到结果"],"111.-minimum-depth-of-binary-tree.html":["(root","*","*/","*left;","*right;","/","/**","0;","1);","111.","15","2.","20","3","7","9",":","=",">left);",">left==null);",">right);",">right==null)&&(root","[3,9,20,null,null,15,7],","\\","algorithm","along","analysi","binari","bool","children.","class","code","continue;","definit","depth","depth.","descript","down","example:","find","fr=qu.front();","given","if(fr==null)","if(fr==pos){","if(isleaf(fr))","if(root==null)","int","isleaf(treenode*","leaf","left(null),","mindepth(treenode*","minimum","nearest","node","node.","note:","number","path","pos=new","problem","public:","qu.pop();","qu.push(fr","qu.push(pos);","qu.push(root);","qu;","queue","res++;","res;","res=1;","return","right(null)","root","root)","root){","shortest","solut","struct","thought","tree","tree,","treenod","treenode(","treenode(int","treenode*","val(x),","val;","while(!qu.empty()){","x)","{","{}","}","};","如果用深度优先搜索做这个题目，最后时间复杂度会是o(n)，因为会遍历所有节点，最后得到最浅的叶子节点。但是用广度优先搜索，只要找到第一个叶子节点就会返回，所以时间复杂度是降低很多的，不过应该也是o(n)","得到最浅的叶子节点的深度，直接用广度优先搜索即可，广度优先搜索有找的极值的性质"],"112.-path-sum.html":["*","*/","*left;","*right;","/","/**","1","11","112.","13","2","22,","22.","4","5","7","8",":","=","=root",">11",">2",">4",">left,sum)||haspathsum(root",">left==null&&root",">right,sum);",">right==null){",">val;","\\","ad","algorithm","along","analysi","below","binari","bool","children.","class","code","definit","descript","determin","equal","example:","exist","false;","given","haspathsum(root","haspathsum(treenode*","if(root","if(root==null)","if(sum)","int","leaf","left(null),","node","node.","note:","path","problem","public:","return","right(null)","root","root,","solut","struct","such","sum","sum)","sum,","sum.","thought","tree","treenod","treenode(int","true,","true;","up","val(x),","val;","valu","x)","{","{}","}","};","直接递归解决，每次进入子节点的时候，将sum值减去当前节点的值，最后判断如果是叶子节点并且当前值为0，就返回true，否则返回fals","遍历问题，时间复杂度o(n)"],"113.-path-sum-ii.html":["*","*/","*left;","*right;","/","/**","1","11","113.","13","2","22,","4","5","7","8",":","=",">left);",">left==null&&root",">right);",">right==null){",">val);",">val){",">val,root","[","[5,4,11,2],","[5,8,4,5]","\\","]","algorithm","analysi","below","binari","children.","class","code","definit","descripit","each","equal","example:","find","given","helper(res,tmp,sum","helper(res,tmp,sum,root);","helper(vector>&","if(root","if(root==null){","if(sum==root","ii","int","leaf","left(null),","node","node.","note:","path","path'","pathsum(treenode*","problem","public:","res,vector&tmp,int","res.push_back(tmp);","res;","return","return:","return;","right(null)","root","root){","root,","solut","struct","sum","sum)","sum,","sum,treenode*","sum.","sum一个意思，只是这里需要得到路径上的所有值。这就只能使用回溯法解决问题了。","thought","tmp.pop_back();","tmp.push_back(root","tmp;","tree","treenod","treenode(int","val(x),","val;","vector","vector>","void","x)","{","{}","}","};","和之前的path","时间复杂度o(n),对于每个节点都只访问一次。"],"114.-flatten-binary-tree-to-linked-list.html":["*","*/","*left;","*right;","/","/**","1","114.","2","3","4","5","6",":",">left);",">left){",">left;",">left=null;",">right){",">right;",">right=root","\\","algorithm","analysi","binari","class","code","definit","descript","example,","findmax(treenode*","flatten","flatten(treenode*","follow","given","if(root","if(root)","int","left(null),","like:","link","list","look","ma","ma=findmax(root","node.","place.","problem","public:","return","right(null)","root","root)","root){","root;","root=root","solut","struct","thought","tree","tree,","tree:","treenod","treenode(int","treenode*","val(x),","val;","void","while(root","while(root){","x)","{","{}","}","};","时间复杂度o(n),对于所有节点，最多访问节点两次，访问总次数是2n，所以最后时间复杂度o(n)","观察知道，最后所有节点全部在右边展平，我们可以每次将左子树插入到右子树，原来的右子树接在左子树最后面，重复这个操作，直到所有的右子树都展平即可"],"115.-distinct-subsequences.html":["\"abcde\"","\"ace\"","\"aec\"","\"babgbag\",","\"bag\"","\"rabbbit\",","\"rabbit\"","'b'","(can","(ie,","(rabb,rab)","(rabb,rabb).","(rabbb,rabb)","(t.size()+1,0);","(the","+",",","//thi","1","115.","1:","1])","1];","1]==t[j","2:","3","5","=","^","^^","^^^","^^^^","add","algorithm","analysi","babgbag","below,","caret","charact","characters.","chosen","class","code","count","delet","descript","distinct","disturb","dp","dp(s.size()+1,vector(t.size()+1));","dp[0]=1;","dp[j]+=dp[j","dp[t.size()];","equal","exampl","explanation:","for(int","form","gener","given","i=0;i","i=1;i0;","if(s[i","input:","int","j)","letters)","mean","new","none)","not).","now","number","numdistinct(str","origin","output:","posit","problem","public:","rabb","rabbbit","re","rel","remain","result","return","s","s,","s.","shown","solut","string","subsequ","subsequences.md","symbol","t","t)","t,","t.","t.back(),so","thought","three","time","vector>","version","way","without","{","}","};","做多了题目之后会有感觉，这题用动态规划解决没问题。首先就用动态规划问题想。如果两个字符串已经匹配完毕，s串加入一个新字符，如果这个字符和t串最后一个字符不匹配。没有事情发生，总匹配数依然是没加入之前的结果。如果匹配，就是之前的s串和去掉最后一个字符的t串匹配的结果加上之前匹配结果。","原始版本是二维数组版本，遍历二维数组即可，时间复杂度o(n²)。优化后的版本使用一维数组，空间复杂度降到了o(n),不仅如此，其时间也会降低"],"118.-pascals-triangle.html":["118.","1];","2;i>=1;","5","[","[1,1],","[1,2,1],","[1,3,3,1],","[1,4,6,4,1]","[1],","]","abov","algorithm","analysi","class","code","descript","directli","each","example:","first","for(int","gener","generate(int","given","i){","i=tmp.size()","if(numrows==0)","input:","integ","it.","neg","non","number","numrow","numrows)","numrows){","numrows,","output:","pascal'","problem","public:","res.push_back(tmp);","res;","return","solut","sum","thought","tmp(1,1);","tmp.push_back(1);","tmp[i]+=tmp[i","triangl","triangle,","triangle.","two","vector","vector>","while(","{","}","};","其实和之前动态规划问题得到数组中的值有的像，此位置的值等于上两个位置的值相加。可以用二维数组解决，但是这里是可以优化到只用一维数组。每次重复使用即可。","帕斯卡三角形，三角形面积是o(n²)的，每个点都要计算，最后时间复杂度o(n²)"],"120.-triangle.html":["(i.e.,","+","1","11","11).","120.","2","2;i>=0;","3","5","=","[","[2],","[3,4],","[4,1,8,3]","[6,5,7],","]","adjac","algorithm","analysi","below.","bonu","bottom","bottom.","class","code","descript","each","example,","extra","find","follow","for(int","given","i){","i=triangle.size()","int","j=0;j","minimum","minimumtotal(vector>&","move","n","note:","number","o(n)","path","point","problem","public:","row","solut","space,","step","sum","thought","top","total","triangl","triangle)","triangle,","triangle.","us","{","典型的动态规划问题，从底部出发向上遍历。每次选择两个子节点中最小的那一个，并且将它加到自己当前值上。重复操作，知道到根节点。","复杂度时间和之前求三角形问题一样，都是o(n²)"],"121.-Best-Time-to-Buy-and-Sell-Stock.html":["(i.e.,","(price","0","0.","1","1)","121.","1:","2","2:","5","5.","6","6),","6,","7","=","[7,1,5,3,6,4]","[7,6,4,3,1]","algorithm","analysi","array","befor","best","buy","case,","class","code","complet","day","descript","design","done,","element","exampl","explanation:","find","for(auto","given","i.","i.e.","input:","int","ith","larger","max","maximum","maxprofit(vector&","miprice);","miprice=int_max;","miprice=min(miprice,price);","need","note","on","one.","output:","permit","price","price.","price:prices){","prices)","problem","profit","profit.","public:","res;","res=0;","res=max(res,pric","return","sell","share","solut","stock","stock),","thought","time","transact","{","}","};","一次遍历就可以得到答案，时间复杂度o(n)","只能买一次商品，一次交易。那么我们从第一天开始买商品，第一天必须买，因为只有一次机会。到了第二天的时候，如果第二天比第一天贵，我们就得到利润。如果第二天比第一天便宜，那我们就第二天再买。这里转化成代码的意思就是，我们遍历数组的过程，每次都记录最小值，当做我们购买的价格，每次都用当前值减去最小值，就是我们的利润。"],"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":["(i.e.,","(price","0","0.","1","1)","1,","122.","1:","2","2:","3","3)","3.","3:","4","4.","5","5),","6","6),","7","=","[1,2,3,4,5]","[7,1,5,3,6,4]","[7,6,4,3,1]","again).","again.","algorithm","analysi","array","base_index;","befor","best","buy","case,","class","code","complet","day","descript","design","done,","element","engag","exampl","explanation:","find","for(int","given","i.","i.e.","i=0;i","ii","input:","int","ith","later,","mani","max","maximum","maxprofit(vector&","multipl","note","note:","on","output:","price","prices)","prices.push_back(int_min);","problem","profit","profit.","public:","res=0;","same","sell","share","solut","stock","thought","time","time.","times).","transact","{","也是一次遍历数组，时间复杂度o(n)","分析可以知道，价格走向只有上面两种，要不是一直递增，要不就是下降。这样就可以归纳成一般情况，写出代码.注意写成一般情况下时，要注意最后的状态，这里最后push一个int_min，就能处理所有情况","可以借助之前只能买一次的思想，只是这里是能买很多次。只要有利润，我们都加上。","如果下一天的价格比今天高，我们直接把利润加上。但是如果之后价格持续走高，我们先不加利润，一直往后看，直到最高的价格，我们用最高的价格减去最低的价格，这是利润增益。","首先对于下一天价格比今天低的情况，这时候我们肯定要下一天买而不是这一天高价买。也就是把买进的价格改成下一天的。"],"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":["(i.e.,","(price","0","0)","0.","1","1)","1,","123.","1:","2","2:","2展示的那样，一次交易即可。那么我们还是以第一题（一次交易得到最大值），为基础解此题。","3","3),","3.","3:","4","4),","4.","5","5),","6","7","8","=","[1,2,3,4,5]","[3,3,5,0,0,3,1,4]","[7,6,4,3,1]","again).","again.","algorithm","analysi","array","b1=int_min,b2=int_min,s1=0,s2=0;","b1=max(b1,","b2=max(b2,s1","befor","best","buy","case,","class","code","complet","day","descript","design","done,","element","engag","exampl","explanation:","find","for(auto","given","i.","i.e.","iii","input:","int","ith","later,","max","maximum","maxprofit(vector&","multipl","note","note:","output:","p);","p:prices){","price","prices)","problem","profit","profit.","public:","return","s1=max(s1,b1+p);","s2;","s2=max(s2,b2+p);","same","sell","solut","stock","thought","time","time.","transact","transactions.","two","{","}","};","一次遍历解决问题，时间复杂度o(n)","在一次交易的基础上，在第一次交易的结果上，我们减去当前价格，也就是减去第二次购买的成本。每次遍历都计算此值，得到最大值，也就是第二次购买的最便宜的时候。","最后这里需要仔细想清楚这里的思想以及代码里是如何进行的。不然很难理解，我个人也是第三次做这个题了，也都需要仔细回味","然后在上面得到第二次最低成本的情况下，得到第二次的最高利润，每遍历到一个数都记录。","首先知道这里是最多允许买两次，意思是如果一次可以，那就买一个。就像exampl"],"124.-Binary-Tree-Maximum-Path-Sum.html":["*","*/","*left;","*right;","/","/**","0;","1","10","10,9,20,null,null,15,7]","124.","15","1:","2","20","2:","3","42","6","7","9",":",">left);",">right);",">val+=max(l,r);",">val+l+r;","[","[1,2,3]","\\","algorithm","along","analysi","binari","child","class","code","connections.","contain","defin","definit","descript","empti","exampl","find","given","go","if(lval+l+r>res)","if(root==null)","input:","int","l=maxtosum(root","left(null),","maximum","maxpathsum(treenode*","maxtosum(root);","maxtosum(treenode*","need","node","node.","non","on","output:","parent","path","problem","problem,","public:","r=maxtosum(root","res;","res=int_min;","res=root","return","right(null)","root","root)","root){","root.","sequenc","solut","start","struct","sum","sum.","thought","through","tree","tree,","treenod","treenode(int","val(x),","val;","x)","{","{}","}","};","对所有的节点遍历一遍得出结果，时间复杂度o(n)","还是典型的树问题，使用递归解决。","这里题目有点描述不清楚，这里只有根节点可以连接两个子树，也就是加上子树上计算的结果。但是如果是中间节点，那就只能连接一个子树，选择左子树或者右子树。这里当然是选择最大的一个子树。"],"654.-maximum-binary-tree.html":["1);","654.",">left=help(nums,left,ma",">right=help(nums,ma+1,right);","algorithm","analysi","array","array.","binari","build","class","code","construct","constructmaximumbinarytree(vector&","defin","descript","divid","duplicates.","follow:","for(int","given","help(nums,0,nums.size()","help(vector&nums,int","i=left+1;inums[i]?ma:i;","if(left==right){","if(left>right)","int","integ","left","left,int","ma=left;","maximum","node","null;","number","number.","nums)","output","part","problem","public:","re","res;","res=new","return","right","right){","root","solut","subarray","subtre","thought","tree","tree.","treenode(nums[left]);","treenode(nums[ma]);","treenode*","{","}","};","碰到树以及链表的题，首先观察返回值，如果返回值是一个treenode*,也就是一个根节点。那基本上可以用递归解决。这里首先用递归的思想去想是否可行，首先便利数组找到最大值作为根节点。根节点左边的数组变成左子树，右边为右子树。对于左右子树，使用一样的解法就能得到答案。递归思想一相同，之后就问题不大了","这个时间复杂度不是很好分析，但是在leetcode中运行时间也很快了，贴个图。"],"657.-robot-reaturn-to-origin.html":["\"facing\"","\"l\"","\"r\"","(0,","(down).","(left),","(right),","(up),","0)","0),","2d","657.","algorithm","also,","alway","analysi","assum","bool","ch:moves){","charact","class","code","complet","d","descript","each","end","etc.","false.","finish","for(auto","given","if(ch=='d'){","if(ch=='l'){","if(ch=='r'){","if(ch=='u'){","if(lr.empty()||lr.top()=='l'){","if(lr.empty()||lr.top()=='r'){","if(ud.empty()||ud.top()=='d'){","if(ud.empty()||ud.top()=='u'){","irrelevant.","ith","judg","judgecircle(str","l","left,","lr.empty()&&ud.empty();","lr.pop();","lr.push(ch);","lr;","magnitud","make","move","move.","movement","moves)","moves,","moves.","moves[i]","note:","once,","origin","origin,","otherwise,","plane.","posit","problem","public:","r","repres","return","right","robot","robot'","same","sequenc","solut","stack","start","string,","thought","true.","u","ud.pop();","ud.push(ch);","ud;","up","valid","way","{","}","};","}els","一个循环遍历数组，时间是o(n)，最开始拿到题目的时候直接类比成了括号匹配，就动手做了。其实括号匹配比这个多了一点位置上的限制，而这里只要统计数字即可。直接定义4个变量会更快，直接用4个寄存器存count，最后比较。","机器人从原点出发，最后判断能否到达原点，一共4个操作，将所有的操作统计起来，最后比较上下是否一样，左右是否一样即可"],"659.-split-array-into-consecutive-subsequences.html":["1","1,","1:","2,","2:","3","3,","3.","3:","4,","5","659.",":","[1,2,3,3,4,4,5,5]","[1,2,3,3,4,5]","[1,2,3,4,4,5]","algorithm","analysi","array","ascend","bool","class","code","consecut","consist","constraints:","cut,tail;","cut[num]++;","descript","desctipt","each","exampl","explanation:","fals","for(auto","given","if(cut[n]","input:","integ","ispossible(vector&","length","more","n:nums){","num","num:nums)","nums)","order,","output:","pass解决问题，时间复杂度o(n).hashmap插入操作时间也是o(1)。","problem","public:","return","solut","sort","split","subsequ","such","true","two","unordered_map","{","第一次想这题，没看清是连续的数字。导致分析了很久也没结果。知道是连续的数字之后，就很好办了。可以直接用hashmap保存数字出现的次数，以及保存3个以上链表的末尾节点，每次访问到数字，首先查看链表后面末尾节点是否有值，有的话直接加一。如果没有，就将这个数字后面两个数字和这个组合起来，然后加入到将这个链表末尾节点加入hashmap，如果不能进行上面两个操作，说明这里有问题"],"1223.-dice-roll-simulation.html":["(1,1)","(2,2)","*","+","1","1)","1,sizeof(cache));","10^9","1223.","181","1:","1;","2","2,","2:","3,","30","34","34.","36","3:","6","7.","=","==",">rollmax=rollmax;","[1,1,1,1,1,1]","[1,1,1,2,2,3]","[1,1,2,2,2,3]","algorithm","analysi","answer","appear","array","array,","cache[5002][7][16];","cache[pos][number][per];","case,","class","code","combinations.","consecut","consecutively,","consid","constraint","constraints:","descript","dice","die","die,","diesimulator(int","differ","distinct","dp(0,0,0,n);","dp(int","each","element","error。所以这里用数组保存之前的结果。整个动态规划的状态有3个维度，一是前面出现的次数，二是前一个数字，三是当前防止的轮数。","exact","exampl","explanation:","f(1,1,1),f(1,2,1),f(1,3,1),f(1,4,1),f(1,5,1),f(1,6,1).","final","for(int","gener","given","i=1;i","if(cache[pos][number][per]!=","if(pos==n)","indexed)","input:","int","integ","introduc","large,","limit","long","look","memset(cache,","mod=1000000000+7;","modulo","more","n","n){","n,","number","number,int","obtain","occur,","on","onc","other.","output:","per,int","pos,int","possibl","problem","public:","random","res=0;","return","roll","roll.","rollmax","rollmax)","rollmax.length","rollmax;","rollmax[i](1","rolls.","sequenc","simul","solut","such","therefor","thought","times.","two","vector","vector&","{","}","如果不加记忆模式，时间复杂度就跟回溯法是一样的，但是加了记忆模式，算法快了很多，时间复杂度这里不好分析","所以，所有的结果可以看成是下面6项相加","第三次参加比赛了，当时又止步在第三题。第三题当时其实想到用记忆化保存的方法解决问题，但是最后没有想通状态转移的过程。于是之后参考了discuss里大神的逻辑，然后自己写出代码","类似一个安放数字问题，也很像回溯法构建一个排列的问题。只是回溯法需要列举出所有的情况，但是这里只需要返回最后的数字。所以就可以不用回溯的过程。这里需要多考虑的一点是，存在一个限制数组，rollmax。这里就需要记录当前数字之前出现了多少次，如果超过了限制，那么这次安放就不安放这个数字。这里的算法中，会出现很多重复计算的过程，很多前面的数字最后会汇聚到一个节点，如果不用记忆化方法保存之前的数据，肯定会tim"]},"length":109},"tokenStore":{"root":{"0":{"1":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}},"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.016666666666666666},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.08823529411764706},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186}},";":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}},")":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},".":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}},";":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}},",":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}},",":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.02},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364}}},"?":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"位":{"docs":{},"置":{"docs":{},"又":{"docs":{},"可":{"docs":{},"以":{"docs":{},"递":{"docs":{},"归":{"docs":{},"调":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"后":{"docs":{},"面":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{},"第":{"docs":{},"一":{"docs":{},"位":{"docs":{},"置":{"docs":{},"补":{"docs":{},"上":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"排":{"docs":{},"列":{"docs":{},"了":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"2":{"5":{"0":{"0":{"0":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}},"docs":{}},"docs":{}},"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}},"docs":{}},"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}},"'":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}},"s":{"docs":{},",":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.018867924528301886}}}}}},"1":{"0":{"0":{"0":{"docs":{},".":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}},"docs":{},".":{"0":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}},"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":3.3407407407407406}}},")":{"docs":{},";":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}}},"1":{"docs":{},".":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":3.3407407407407406}}}},"2":{"4":{"docs":{},".":{"0":{"0":{"0":{"0":{"0":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},".":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":1.6744186046511627}}}},"3":{"docs":{},".":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":1.4323450134770888}}}},"4":{"docs":{},".":{"docs":{"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":2.0098039215686274}}}},"5":{"docs":{},".":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":1.4370460048426148}}}},"6":{"docs":{},".":{"docs":{"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html":{"ref":"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html","tf":1.5535714285714284}}}},"7":{"docs":{},".":{"docs":{"107.-binary-tree-level-order-traversal-ii.html":{"ref":"107.-binary-tree-level-order-traversal-ii.html","tf":1.5535714285714284}}}},"8":{"docs":{},".":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":1.4363233665559245}}}},"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.025974025974025976},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":2.5049019607843137}}},",":{"9":{"docs":{},",":{"2":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"1":{"5":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{},",":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}},"docs":{}}}}}}},"生":{"docs":{},"成":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"利":{"docs":{},"用":{"5":{"docs":{},"当":{"docs":{},"中":{"docs":{},"间":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"1":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}},"^":{"9":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"docs":{}}},"1":{"0":{"docs":{},".":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":2.5072463768115942}}}},"1":{"docs":{},".":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":2.0072463768115942}}}},"2":{"docs":{},".":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":3.340909090909091}}}},"3":{"docs":{},".":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":2.506849315068493}}}},"4":{"docs":{},".":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":1.6748633879781418}}}},"5":{"docs":{},".":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":3.338951310861423}}}},"8":{"docs":{},".":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":3.3466666666666662}}}},"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}},",":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818}}},".":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":3.346153846153846}}},")":{"docs":{},".":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}},"2":{"0":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}},".":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":5.012820512820513}}}},"1":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.030612244897959183}},".":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":1.675213675213675}}}},"2":{"3":{"docs":{},".":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":2.505434782608696}}}},"docs":{},".":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":1.4343853820598005}}}},"3":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.023809523809523808}},".":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":1.4343853820598005}}}},"4":{"docs":{},".":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":1.6739130434782608}}}},"docs":{}},"3":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}},"4":{"docs":{},".":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":2.514705882352941}}}},"5":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"]":{"docs":{},",":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}},".":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":5.01}}},",":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}},"6":{"docs":{},".":{"3":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":5.037037037037037}}}}}},"docs":{}},",":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818}}}},"7":{"docs":{},".":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":2.01010101010101}}}},"8":{"1":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"docs":{},".":{"docs":{"18.-4sum.html":{"ref":"18.-4sum.html","tf":5.045454545454546}}}},"9":{"docs":{},".":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":1.6746031746031744}}}},"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.0392156862745098},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.02830188679245283},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.023622047244094488},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.01818181818181818},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.025477707006369428},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.02666666666666667},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.021052631578947368},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.0761904761904762},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.026785714285714284},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.04040404040404041},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.024},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.03614457831325301},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.07228915662650602},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.025157232704402517},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.05925925925925926},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.014814814814814815},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.01744186046511628},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.01744186046511628},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.020618556701030927},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.021739130434782608}},".":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":3.343537414965986},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.01904761904761905},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}},"]":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}},".":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}},",":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}},")":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}},":":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}},"docs":{}},"=":{"docs":{},"t":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}},"=":{"docs":{},"t":{"docs":{},"[":{"docs":{},"j":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}},";":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}},")":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},";":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802}}},"{":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}},"!":{"docs":{},"个":{"docs":{},"。":{"docs":{},"同":{"docs":{},"理":{"docs":{},"可":{"docs":{},"以":{"docs":{},"退":{"docs":{},"出":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"排":{"docs":{},"列":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"我":{"docs":{},"们":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"利":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"一":{"docs":{},"直":{"docs":{},"将":{"docs":{},"数":{"docs":{},"字":{"docs":{},"推":{"docs":{},"出":{"docs":{},"。":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"]":{"docs":{},".":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}},"，":{"docs":{},"就":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"0":{"docs":{},"。":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}}},"docs":{}}}}}}},";":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.03636363636363636},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.02857142857142857},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"j":{"docs":{},"=":{"docs":{},"y":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}},"docs":{}}}}}},",":{"0":{"docs":{},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}}}},"1":{"docs":{},"]":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}}},"2":{"docs":{},",":{"1":{"docs":{},",":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}},"]":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}},"3":{"1":{"docs":{},",":{"1":{"docs":{},",":{"5":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}},"docs":{}}},"docs":{}}},"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}},"docs":{}}},"3":{"docs":{},",":{"2":{"3":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"5":{"docs":{},",":{"1":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}},"docs":{}}},"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.06},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.022727272727272728},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.025974025974025976},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.020618556701030927}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}},"docs":{}}}}}},"e":{"docs":{},"s":{"docs":{},"=":{"docs":{},"m":{"docs":{},"+":{"docs":{},"n":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}}}}}},"j":{"docs":{},",":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}}}}},"docs":{}}}}}},"=":{"docs":{},"n":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}}},"docs":{}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"要":{"docs":{},"单":{"docs":{},"独":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"下":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}}}}}}}}}}},"/":{"2":{"2":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}},"docs":{}},"4":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}},"docs":{}},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"就":{"docs":{},"会":{"docs":{},"变":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}},"}":{"docs":{},",":{"docs":{},"{":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}},";":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}},"→":{"3":{"docs":{},"→":{"1":{"docs":{},"→":{"1":{"docs":{},"→":{"1":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"'":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}},"s":{"docs":{},",":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"，":{"docs":{},"每":{"docs":{},"当":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{},"改":{"docs":{},"变":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"h":{"docs":{},"t":{"docs":{},"，":{"docs":{},"当":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"1":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"改":{"docs":{},"变":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"和":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"具":{"docs":{},"体":{"docs":{},"行":{"docs":{},"为":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"代":{"docs":{},"码":{"docs":{},"理":{"docs":{},"解":{"docs":{},"。":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"0":{"1":{"9":{"docs":{},".":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}},"/":{"1":{"0":{"docs":{},"/":{"1":{"6":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},".":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":3.3422619047619047}}},"]":{"docs":{},",":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818}}}}},"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"9":{"docs":{},";":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}},".":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":2.009433962264151}}}},"2":{"docs":{},".":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":3.3468468468468466},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}},",":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}},"3":{"1":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}},"docs":{},".":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":2.0078740157480315}}}},"4":{"docs":{},".":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":2.511111111111111}}}},"6":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}},")":{"docs":{},",":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}},"7":{"docs":{},".":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":3.338514680483592}}}},"8":{"docs":{},".":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":3.3424242424242423}}}},"9":{"docs":{},".":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":2.5112359550561796}}}},"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0375},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.031578947368421054},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.039473684210526314},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.05714285714285714},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.03225806451612903},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.030120481927710843},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.060240963855421686},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.025157232704402517},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.044444444444444446},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.02962962962962963},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.014492753623188406},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.016304347826086956}},".":{"0":{"0":{"0":{"0":{"0":{"docs":{},",":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.025}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"0":{"0":{"0":{"docs":{},",":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"2":{"8":{"4":{"2":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},",":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":2.5083333333333333},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.01904761904761905},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}},":":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},";":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}},"i":{"docs":{},">":{"docs":{},"=":{"0":{"docs":{},";":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}},"1":{"docs":{},";":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}},"docs":{}}}}},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"找":{"docs":{},"到":{"docs":{},"中":{"docs":{},"间":{"docs":{},"夹":{"docs":{},"着":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"分":{"docs":{},"布":{"docs":{},"的":{"docs":{},"。":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}},",":{"1":{"docs":{},",":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}},"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.020618556701030927},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}}},"]":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}},")":{"docs":{},"{":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}},"相":{"docs":{},"比":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"大":{"docs":{},"于":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"当":{"docs":{},"前":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"要":{"docs":{},"加":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"等":{"docs":{},"于":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"就":{"docs":{},"是":{"docs":{},"前":{"docs":{},"面":{"docs":{},"已":{"docs":{},"经":{"docs":{},"放":{"docs":{},"置":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"用":{"docs":{},"再":{"docs":{},"写":{"docs":{},"了":{"docs":{},"。":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.02586206896551724},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":2.5090909090909093},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}},"'":{"docs":{},"s":{"docs":{},",":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}},".":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}},")":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}},"展":{"docs":{},"示":{"docs":{},"的":{"docs":{},"那":{"docs":{},"样":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"交":{"docs":{},"易":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"是":{"docs":{},"以":{"docs":{},"第":{"docs":{},"一":{"docs":{},"题":{"docs":{},"（":{"docs":{},"一":{"docs":{},"次":{"docs":{},"交":{"docs":{},"易":{"docs":{},"得":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"）":{"docs":{},"，":{"docs":{},"为":{"docs":{},"基":{"docs":{},"础":{"docs":{},"解":{"docs":{},"此":{"docs":{},"题":{"docs":{},"。":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"3":{"0":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},",":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818}}}},"1":{"docs":{},".":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":3.3406862745098036}}}},"2":{"1":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.023809523809523808}}},"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.023809523809523808},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}},".":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":2.5086206896551726}}}},"3":{"docs":{},".":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":2.0113636363636362}}}},"4":{"2":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}},"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},".":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":1.2584745762711864},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},",":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818}}}},"5":{"docs":{},".":{"docs":{"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":2.5384615384615383}}}},"6":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}},".":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":3.3397027600849256}}}},"9":{"docs":{},".":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":3.3397027600849256}}}},"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.019801980198019802},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.033707865168539325},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.02631578947368421},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.02608695652173913},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.01904761904761905},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.017045454545454544},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.021505376344086023},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.03614457831325301},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.07228915662650602},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.025157232704402517},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.014814814814814815},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.02962962962962963},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.021739130434782608},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}},")":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}},",":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}},".":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":1.6963696369636962},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}},":":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":5.01}}}}},",":{"0":{"docs":{},",":{"5":{"docs":{},",":{"9":{"docs":{},"]":{"docs":{},",":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}},"9":{"docs":{},",":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}},"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.030927835051546393},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"x":{"3":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}},"docs":{}},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728}}}}}}}}}},"4":{"0":{"docs":{},".":{"docs":{"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":2.5123456790123457}}}},"1":{"docs":{},".":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":2.5161290322580645}}}},"2":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},".":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":2.512987012987013}}}},"4":{"docs":{},".":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":3.3397027600849256}}}},"5":{"docs":{},".":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":2.513157894736842}}}},"6":{"5":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}},"docs":{},".":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":5.011111111111111}}}},"7":{"docs":{},".":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":3.3470319634703194}}}},"8":{"docs":{},".":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":3.3419540229885056}}}},"9":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}},".":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":3.349206349206349}}}},"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.021052631578947368},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.014814814814814815},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.014492753623188406},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.015151515151515152},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.01744186046511628}},")":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}},",":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}},":":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}},"]":{"docs":{},",":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"都":{"docs":{},"是":{"docs":{},"代":{"docs":{},"表":{"3":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"每":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"通":{"docs":{},"量":{"docs":{},"就":{"docs":{},"是":{"3":{"docs":{},"个":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"输":{"docs":{},"入":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"18.-4sum.html":{"ref":"18.-4sum.html","tf":5.045454545454546}}}}},".":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.030927835051546393}}},"当":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"避":{"docs":{},"免":{"docs":{},"重":{"docs":{},"复":{"docs":{},"计":{"docs":{},"算":{"docs":{},"。":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"当":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"用":{"6":{"docs":{},"当":{"docs":{},"中":{"docs":{},"间":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"会":{"docs":{},"碰":{"docs":{},"到":{"1":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"5":{"0":{"docs":{},".":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":3.345833333333333}}},"]":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818}}}},"1":{"docs":{},".":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":3.3416666666666663}}}},"2":{"docs":{},".":{"docs":{"52.-n-queens-ii.html":{"ref":"52.-n-queens-ii.html","tf":2.7}}}},"3":{"docs":{},".":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":3.345833333333333}}}},"4":{"docs":{},".":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":3.343234323432343}}}},"5":{"docs":{},".":{"docs":{"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":3.3446969696969693}}}},"6":{"docs":{},".":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":3.342342342342342}}}},"7":{"docs":{},".":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":3.3416666666666663}}}},"9":{"docs":{},".":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":2.513157894736842}}}},"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.024096385542168676},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.015151515151515152},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.023255813953488372},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.030927835051546393}},".":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":2.5126582278481013},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}},":":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}},"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}},"]":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}},")":{"docs":{},",":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}},"6":{"0":{"docs":{},".":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":3.3466666666666662}}}},"1":{"docs":{},".":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":3.3385964912280697}}}},"2":{"docs":{},".":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":3.342028985507246}}}},"3":{"docs":{},".":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":2.5088495575221237}}}},"4":{"docs":{},".":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":2.515873015873016}}}},"5":{"4":{"docs":{},".":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":2.50990099009901}}}},"7":{"docs":{},".":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":2.5076923076923077}}}},"9":{"docs":{},".":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":2.0103092783505154}}}},"docs":{}},"7":{"docs":{},".":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":3.346320346320346}}}},"9":{"docs":{},".":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":5.0131578947368425}}}},"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.025974025974025976},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.021739130434782608}},".":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":3.3416666666666663},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}},")":{"docs":{},",":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}},".":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}},"7":{"0":{"docs":{},".":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":3.3428571428571425}}}},"2":{"docs":{},".":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":3.341085271317829}}}},"3":{"docs":{},".":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":2.5140845070422535}}}},"4":{"docs":{},".":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":2.5090909090909093}}}},"5":{"docs":{},".":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":3.342767295597484}}}},"6":{"docs":{},".":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":2.5106382978723403}}}},"7":{"docs":{},".":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":5.013888888888889}}}},"8":{"docs":{},".":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":5.013888888888889}}}},"9":{"docs":{},".":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":3.3398268398268396}}}},"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},",":{"1":{"0":{"docs":{},",":{"1":{"1":{"docs":{},"]":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}},".":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":3.345238095238095},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"]":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818}}}}},"8":{"0":{"7":{"docs":{},".":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}},"docs":{},".":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":1.6723484848484846}}}},"1":{"docs":{},".":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":1.6771929824561402}}}},"2":{"docs":{},".":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":1.675595238095238}}}},"3":{"docs":{},".":{"docs":{"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":2.01010101010101}}}},"4":{"docs":{},".":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":2.512987012987013}}}},"5":{"docs":{},".":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":3.3476190476190473}}}},"6":{"docs":{},".":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":3.340852130325814}}}},"7":{"docs":{},".":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":3.339506172839506}}}},"8":{"docs":{},".":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":2.510752688172043}}}},"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}},"'":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}},".":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}},",":{"1":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}},"docs":{}},"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}},"]":{"docs":{},",":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}}},"9":{"0":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}},".":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":3.3448275862068964}}}},"1":{"docs":{},".":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":3.344086021505376}}}},"2":{"docs":{},".":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":2.008}}}},"3":{"docs":{},".":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":2.522727272727273}}}},"4":{"docs":{},".":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":2.005291005291005}}}},"5":{"docs":{},".":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":1.6726907630522088}}}},"6":{"docs":{},".":{"docs":{"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":2.0120481927710845}}}},"7":{"docs":{},".":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":3.3468468468468466}}}},"8":{"docs":{},".":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":2.006802721088435}}}},"9":{"docs":{},".":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":2.006289308176101}}}},"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.03184713375796178},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.02666666666666667},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},",":{"1":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}},"docs":{}},"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}},".":{"2":{"6":{"1":{"0":{"0":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":3.343537414965986}}},"x":{"9":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}},".":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}},"docs":{}},"]":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}},"docs":{},"r":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.018518518518518517},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"e":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802}},"a":{"docs":{},"d":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.030612244897959183}},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":10.142857142857142}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176}}}}}}},"c":{"docs":{},"h":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.039473684210526314},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.017699115044247787},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.025974025974025976},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}},".":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":1.6864686468646863},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.014705882352941176},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.01910828025477707}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.05},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.019801980198019802},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.03571428571428571},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.04411764705882353},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.030303030303030304},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.03571428571428571},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.05660377358490566},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.02702702702702703},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.031496062992125984},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.044444444444444446},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.04145077720207254},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.045454545454545456},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.02247191011235955},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.022727272727272728},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.044444444444444446},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0273972602739726},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.025},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.0297029702970297},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.021052631578947368},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.039473684210526314},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.02127659574468085},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.027777777777777776},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.027777777777777776},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.07142857142857142},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.045454545454545456},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.021052631578947368},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.026785714285714284},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.02857142857142857},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.034482758620689655},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.021164021164021163},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.030120481927710843},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.022222222222222223},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.02962962962962963},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.023255813953488372},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.022641509433962263},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.029411764705882353},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.03389830508474576},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.023255813953488372},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.050724637681159424},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.036231884057971016},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.03787878787878788},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.02666666666666667},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.021739130434782608},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.039603960396039604},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":2.5384615384615383},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.02717391304347826}},";":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.02054794520547945}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421}}}}},":":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}}},"s":{"docs":{},";":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.02},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.030303030303030304},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.02702702702702703},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.024691358024691357},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.044444444444444446},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0273972602739726},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.031746031746031744},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.027777777777777776},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.027777777777777776},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.034482758620689655},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.031746031746031744},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.012048192771084338},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.015503875968992248},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.022641509433962263},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.04},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.014492753623188406},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802}}},"=":{"0":{"docs":{},";":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}},"1":{"docs":{},";":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}},"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{},"i":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.02531645569620253}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}},"\"":{"docs":{},"\"":{"docs":{},";":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{},"b":{"docs":{},"l":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"'":{"0":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}},"{":{"docs":{},"{":{"docs":{},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},";":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}}}}},"x":{"docs":{},"%":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}}}},"docs":{}},"docs":{}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.022988505747126436},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.02666666666666667}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888}}}}},")":{"docs":{},";":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}}}}}},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}}}}}}},"{":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}}}},"docs":{}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.021164021164021163}},")":{"docs":{},";":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}},"v":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.011320754716981131}}}}}}}}}}}}}}}}},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}}}},"docs":{}},"2":{"docs":{},",":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}},"docs":{},"n":{"docs":{},"r":{"docs":{},"*":{"docs":{},"n":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}}}}}},",":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}}}},"docs":{}}}}}}}}}}},"+":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}}},"docs":{}}}},"[":{"0":{"docs":{},"]":{"docs":{},"=":{"1":{"docs":{},";":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"=":{"1":{"docs":{},";":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}},"docs":{}}}},"docs":{}}}}}}},"docs":{}}}},"1":{"docs":{},"]":{"docs":{},"=":{"1":{"docs":{},";":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},"=":{"2":{"docs":{},";":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}},"docs":{}}}},"docs":{}}}}}}},"docs":{}}}},"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{},"=":{"docs":{},"x":{"docs":{},"%":{"1":{"0":{"docs":{},";":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}}},"docs":{}},"docs":{}}}}}}}}}},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},"=":{"docs":{},"'":{"1":{"docs":{},"'":{"docs":{},";":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}},"docs":{}}}}},"docs":{}}}},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.024691358024691357}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}},"&":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}},")":{"docs":{},";":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}},"{":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":2.5454545454545454}},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":3.3690476190476186},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":2.016}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":2.5098039215686274}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":1.6904761904761902},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":3.343696027633851},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":1.678030303030303},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":1.675595238095238},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":2.01010101010101}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}},".":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":2.538961038961039},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":3.3619047619047615}}}}}}},"o":{"docs":{},"v":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":2.0125786163522013}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}},"d":{"docs":{},",":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.02830188679245283}}}},"l":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.0782608695652174},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.061946902654867256},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.031746031746031744},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.02040816326530612},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.02531645569620253}}}}}}}}},",":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}},")":{"docs":{},"{":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},";":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"(":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"=":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}},":":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.031578947368421054}}},".":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}},"h":{"docs":{},")":{"docs":{},">":{"1":{"docs":{},")":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}},"docs":{}}},"=":{"docs":{},"i":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}},":":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},"{":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}}}},"o":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}},"w":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.02564102564102564}},"s":{"docs":{},":":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}},",":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},";":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}},".":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":2.022727272727273},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":3.376436781609195},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":3.375438596491228},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":1.7087719298245612}},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.02608695652173913},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.02654867256637168},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":2.546153846153846}},"'":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}},"o":{"docs":{},"t":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.012048192771084338},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.015151515151515152},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.02054794520547945},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802}},")":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.021164021164021163},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"{":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}},"=":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.026455026455026454},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082}}}}}},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}},",":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}},".":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}},"r":{"docs":{},"s":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}}}},"s":{"docs":{},"e":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}}}},"l":{"docs":{},"l":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":2.516304347826087}},".":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.02717391304347826}},")":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}},";":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"(":{"1":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"docs":{}}}}}}}},"s":{"docs":{},".":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}},"e":{"docs":{},":":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}},"语":{"docs":{},"句":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"和":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"p":{"docs":{},"o":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"i":{"docs":{},"n":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":2.5259740259740258}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}}}},"s":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}},"b":{"docs":{},"b":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.016853932584269662}}}}}}}},"u":{"docs":{},"n":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}},":":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288}}}}}},"=":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},";":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288}}}}},"a":{"docs":{},"x":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}}}}}}}}},"g":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}},"t":{"docs":{},"a":{"docs":{},"e":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}},"我":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"做":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"做":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"做":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"简":{"docs":{},"单":{"docs":{},"题":{"docs":{},"，":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"就":{"docs":{},"算":{"docs":{},"做":{"docs":{},"不":{"docs":{},"出":{"docs":{},"也":{"docs":{},"能":{"docs":{},"看":{"docs":{},"懂":{"docs":{},"别":{"docs":{},"人":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"就":{"docs":{},"开":{"docs":{},"始":{"docs":{},"看":{"docs":{},"不":{"docs":{},"起":{"docs":{},"简":{"docs":{},"单":{"docs":{},"题":{"docs":{},"。":{"docs":{},"慢":{"docs":{},"慢":{"docs":{},"的":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"只":{"docs":{},"做":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"级":{"docs":{},"别":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"级":{"docs":{},"别":{"docs":{},"确":{"docs":{},"实":{"docs":{},"很":{"docs":{},"难":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"很":{"docs":{},"久":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"做":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"题":{"docs":{},"目":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"自":{"docs":{},"己":{"docs":{},"前":{"docs":{},"面":{"docs":{},"做":{"docs":{},"的":{"docs":{},"已":{"docs":{},"经":{"docs":{},"忘":{"docs":{},"了":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"用":{"docs":{},"优":{"docs":{},"先":{"docs":{},"队":{"docs":{},"列":{"docs":{},"来":{"docs":{},"做":{"docs":{},"的":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}}}}}}},"描":{"docs":{},"述":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"好":{"docs":{},"懂":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"看":{"docs":{},"这":{"docs":{},"个":{"docs":{},"网":{"docs":{},"站":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},":":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"/":{"docs":{},"k":{"docs":{},"m":{"docs":{},"p":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"们":{"docs":{},"通":{"docs":{},"过":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"法":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"排":{"docs":{},"列":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"太":{"docs":{},"慢":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"排":{"docs":{},"列":{"docs":{},"直":{"docs":{},"接":{"docs":{},"明":{"docs":{},"显":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"规":{"docs":{},"律":{"docs":{},"。":{"docs":{},"查":{"docs":{},"询":{"docs":{},"维":{"docs":{},"基":{"docs":{},"百":{"docs":{},"科":{"docs":{},"可":{"docs":{},"以":{"docs":{},"知":{"docs":{},"道":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"列":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"当":{"docs":{},"前":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"上":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"则":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},"=":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},")":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"自":{"docs":{},"己":{"docs":{},"写":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"之":{"docs":{},"前":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"好":{"docs":{},"的":{"docs":{},"括":{"docs":{},"号":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"记":{"docs":{},"录":{"docs":{},"左":{"docs":{},"右":{"docs":{},"括":{"docs":{},"号":{"docs":{},"括":{"docs":{},"号":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"后":{"docs":{},"面":{"docs":{},"看":{"docs":{},"了":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"发":{"docs":{},"现":{"docs":{},"其":{"docs":{},"实":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"就":{"docs":{},"行":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"直":{"docs":{},"接":{"docs":{},"一":{"docs":{},"次":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"完":{"docs":{},"当":{"docs":{},"前":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"右":{"docs":{},"括":{"docs":{},"号":{"docs":{},"没":{"docs":{},"多":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"右":{"docs":{},"括":{"docs":{},"号":{"docs":{},"多":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"改":{"docs":{},"变":{"docs":{},"一":{"docs":{},"下":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"其":{"docs":{},"实":{"docs":{},"一":{"docs":{},"点":{"docs":{},"都":{"docs":{},"不":{"docs":{},"陌":{"docs":{},"生":{"docs":{},"。":{"docs":{},"大":{"docs":{},"一":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"学":{"docs":{},"习":{"docs":{},"，":{"docs":{},"算":{"docs":{},"法":{"docs":{},"设":{"docs":{},"计":{"docs":{},"课":{"docs":{},"，":{"docs":{},"就":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"目":{"docs":{},"。":{"docs":{},"说":{"docs":{},"实":{"docs":{},"话":{"docs":{},"，":{"docs":{},"就":{"docs":{},"用":{"docs":{},"死":{"docs":{},"方":{"docs":{},"法":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"能":{"docs":{},"做":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"很":{"docs":{},"多":{"docs":{},"冗":{"docs":{},"余":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"很":{"docs":{},"多":{"docs":{},"条":{"docs":{},"件":{"docs":{},"判":{"docs":{},"断":{"docs":{},"。":{"docs":{},"我":{"docs":{},"记":{"docs":{},"得":{"docs":{},"我":{"docs":{},"当":{"docs":{},"时":{"docs":{},"用":{"4":{"docs":{},"个":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"变":{"docs":{},"量":{"docs":{},"确":{"docs":{},"定":{"docs":{},"行":{"docs":{},"动":{"docs":{},"方":{"docs":{},"向":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"4":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"定":{"docs":{},"义":{"docs":{},"行":{"docs":{},"动":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"我":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"做":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"好":{"docs":{},"像":{"docs":{},"也":{"docs":{},"是":{"docs":{},"这":{"docs":{},"么":{"docs":{},"做":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"我":{"docs":{},"第":{"docs":{},"三":{"docs":{},"次":{"docs":{},"做":{"docs":{},"题":{"docs":{},"我":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"我":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"还":{"docs":{},"用":{"docs":{},"这":{"docs":{},"中":{"docs":{},"办":{"docs":{},"法":{"docs":{},"。":{"docs":{},"于":{"docs":{},"是":{"docs":{},"我":{"docs":{},"看":{"docs":{},"了":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"确":{"docs":{},"实":{"docs":{},"有":{"docs":{},"很":{"docs":{},"好":{"docs":{},"地":{"docs":{},"办":{"docs":{},"法":{"docs":{},"。":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"定":{"docs":{},"义":{"docs":{},"当":{"docs":{},"前":{"docs":{},"行":{"docs":{},"动":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"模":{"4":{"docs":{},"就":{"docs":{},"能":{"docs":{},"得":{"docs":{},"出":{"docs":{},"行":{"docs":{},"动":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"方":{"docs":{},"向":{"docs":{},"。":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"模":{"2":{"docs":{},"就":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"docs":{},"是":{"docs":{},"左":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"docs":{},"还":{"docs":{},"是":{"docs":{},"上":{"docs":{},"下":{"docs":{},"移":{"docs":{},"动":{"docs":{},"。":{"docs":{},"左":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"左":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"docs":{},"就":{"docs":{},"要":{"docs":{},"减":{"docs":{},"一":{"docs":{},"。":{"docs":{},"再":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"保":{"docs":{},"存":{"docs":{},"能":{"docs":{},"够":{"docs":{},"左":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"docs":{},"和":{"docs":{},"上":{"docs":{},"下":{"docs":{},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"算":{"docs":{},"法":{"docs":{},"就":{"docs":{},"省":{"docs":{},"去":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"判":{"docs":{},"断":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"开":{"docs":{},"始":{"docs":{},"第":{"docs":{},"二":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"这":{"docs":{},"次":{"docs":{},"我":{"docs":{},"每":{"docs":{},"个":{"docs":{},"题":{"docs":{},"目":{"docs":{},"都":{"docs":{},"会":{"docs":{},"去":{"docs":{},"做":{"docs":{},"。":{"docs":{},"很":{"docs":{},"多":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"的":{"docs":{},"题":{"docs":{},"，":{"docs":{},"做":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"档":{"docs":{},"速":{"docs":{},"度":{"docs":{},"其":{"docs":{},"实":{"docs":{},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"很":{"docs":{},"多":{"docs":{},"题":{"docs":{},"当":{"docs":{},"你":{"docs":{},"把":{"docs":{},"你":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"从":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"平":{"docs":{},"方":{"docs":{},")":{"docs":{},"优":{"docs":{},"化":{"docs":{},"到":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"时":{"docs":{},"，":{"docs":{},"你":{"docs":{},"会":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"到":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"进":{"docs":{},"步":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"很":{"docs":{},"多":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"是":{"docs":{},"很":{"docs":{},"多":{"docs":{},"难":{"docs":{},"题":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"。":{"docs":{},"这":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"我":{"docs":{},"做":{"docs":{},"了":{"3":{"0":{"0":{"docs":{},"多":{"docs":{},"题":{"docs":{},"，":{"docs":{},"题":{"docs":{},"数":{"docs":{},"到":{"docs":{},"了":{"6":{"0":{"0":{"docs":{},"多":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"好":{"docs":{},"题":{"docs":{},"也":{"docs":{},"会":{"docs":{},"做":{"docs":{},"做":{"docs":{},"笔":{"docs":{},"记":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"之":{"docs":{},"后":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"自":{"docs":{},"己":{"docs":{},"做":{"docs":{},"题":{"docs":{},"能":{"docs":{},"力":{"docs":{},"提":{"docs":{},"升":{"docs":{},"很":{"docs":{},"快":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"去":{"docs":{},"看":{"docs":{},"了":{"docs":{},"一":{"docs":{},"下":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"，":{"docs":{},"真":{"docs":{},"的":{"docs":{},"是":{"docs":{},"发":{"docs":{},"现":{"docs":{},"每":{"docs":{},"次":{"docs":{},"看":{"docs":{},"都":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"很":{"docs":{},"意":{"docs":{},"想":{"docs":{},"不":{"docs":{},"到":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"上":{"docs":{},"面":{"docs":{},"得":{"docs":{},"到":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"最":{"docs":{},"低":{"docs":{},"成":{"docs":{},"本":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"的":{"docs":{},"最":{"docs":{},"高":{"docs":{},"利":{"docs":{},"润":{"docs":{},"，":{"docs":{},"每":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"都":{"docs":{},"记":{"docs":{},"录":{"docs":{},"。":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"我":{"docs":{},"看":{"docs":{},"我":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"做":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"更":{"docs":{},"好":{"docs":{},"(":{"docs":{},"大":{"docs":{},"概":{"docs":{},"律":{"docs":{},"是":{"docs":{},"看":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"的":{"docs":{},")":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"不":{"docs":{},"是":{"docs":{},"记":{"docs":{},"录":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"记":{"docs":{},"录":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"跳":{"docs":{},"转":{"docs":{},"到":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"次":{"docs":{},"次":{"docs":{},"慢":{"docs":{},"慢":{"docs":{},"走":{"docs":{},"。":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"已":{"docs":{},"经":{"docs":{},"做":{"docs":{},"了":{"3":{"0":{"0":{"docs":{},"多":{"docs":{},"道":{"docs":{},"题":{"docs":{},"了":{"docs":{},"，":{"docs":{},"之":{"docs":{},"前":{"docs":{},"一":{"docs":{},"直":{"docs":{},"在":{"docs":{},"本":{"docs":{},"地":{"docs":{},"用":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"记":{"docs":{},"录":{"docs":{},"心":{"docs":{},"得":{"docs":{},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"用":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"记":{"docs":{},"录":{"docs":{},"。":{"docs":{},"正":{"docs":{},"好":{"docs":{},"也":{"docs":{},"借":{"docs":{},"着":{"docs":{},"这":{"docs":{},"个":{"docs":{},"机":{"docs":{},"会":{"docs":{},"第":{"docs":{},"三":{"docs":{},"次":{"docs":{},"从":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"再":{"docs":{},"做":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"就":{"docs":{},"当":{"docs":{},"是":{"docs":{},"复":{"docs":{},"习":{"docs":{},"了":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}},"是":{"docs":{},"第":{"docs":{},"三":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"做":{"docs":{},"第":{"docs":{},"三":{"docs":{},"遍":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"一":{"docs":{},"是":{"docs":{},"做":{"docs":{},"了":{"3":{"0":{"0":{"docs":{},"多":{"docs":{},"题":{"docs":{},"了":{"docs":{},"，":{"docs":{},"该":{"docs":{},"回":{"docs":{},"头":{"docs":{},"复":{"docs":{},"习":{"docs":{},"一":{"docs":{},"下":{"docs":{},"了":{"docs":{},"。":{"docs":{},"二":{"docs":{},"是":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"这":{"docs":{},"个":{"docs":{},"很":{"docs":{},"好":{"docs":{},"的":{"docs":{},"平":{"docs":{},"台":{"docs":{},"可":{"docs":{},"以":{"docs":{},"记":{"docs":{},"录":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"有":{"docs":{},"个":{"docs":{},"做":{"docs":{},"题":{"docs":{},"的":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"多":{"docs":{},"做":{"docs":{},"点":{"docs":{},"赞":{"docs":{},"数":{"docs":{},"高":{"docs":{},"的":{"docs":{},"题":{"docs":{},"，":{"docs":{},"要":{"docs":{},"是":{"docs":{},"差":{"docs":{},"评":{"docs":{},"比":{"docs":{},"点":{"docs":{},"赞":{"docs":{},"高":{"docs":{},"，":{"docs":{},"我":{"docs":{},"基":{"docs":{},"本":{"docs":{},"都":{"docs":{},"不":{"docs":{},"会":{"docs":{},"做":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"题":{"docs":{},"不":{"docs":{},"是":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"恶":{"docs":{},"心":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"题":{"docs":{},"目":{"docs":{},"没":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"有":{"docs":{},"时":{"docs":{},"候":{"docs":{},"我":{"docs":{},"会":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"一":{"docs":{},"两":{"docs":{},"个":{"docs":{},"题":{"docs":{},"目":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"种":{"docs":{},"思":{"docs":{},"路":{"docs":{},"利":{"docs":{},"用":{"docs":{},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"。":{"docs":{},"异":{"docs":{},"或":{"docs":{},"两":{"docs":{},"次":{"docs":{},"回":{"docs":{},"到":{"docs":{},"原":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"经":{"docs":{},"历":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"之":{"docs":{},"后":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"异":{"docs":{},"或":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"回":{"docs":{},"来":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"再":{"docs":{},"异":{"docs":{},"或":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"就":{"docs":{},"能":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"好":{"docs":{},"处":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"用":{"docs":{},"中":{"docs":{},"间":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"保":{"docs":{},"存":{"docs":{},"中":{"docs":{},"间":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"坏":{"docs":{},"处":{"docs":{},"就":{"docs":{},"是":{"docs":{},"异":{"docs":{},"或":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"值":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"对":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"产":{"docs":{},"生":{"docs":{},"影":{"docs":{},"响":{"docs":{},"，":{"docs":{},"我":{"docs":{},"当":{"docs":{},"时":{"docs":{},"就":{"docs":{},"是":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"到":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"样":{"docs":{},"例":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"失":{"docs":{},"败":{"docs":{},"了":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"换":{"docs":{},"了":{"docs":{},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"树":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}},"+":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.016666666666666666},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.02},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.022058823529411766},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.047619047619047616},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.038461538461538464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"+":{"docs":{},"i":{"docs":{},")":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}},";":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}}},"/":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.07407407407407407},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.030120481927710843},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.060240963855421686},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.02040816326530612},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.03773584905660377},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.037037037037037035},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.02962962962962963},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.015503875968992248},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.0196078431372549},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.01694915254237288},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.023255813953488372},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.036231884057971016},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.030303030303030304},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.03424657534246575},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.021739130434782608}},"/":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.015544041450777202},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.017045454545454544},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612}}},"i":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"=":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"=":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}},"docs":{}}}}}},"最":{"docs":{},"原":{"docs":{},"始":{"docs":{},"的":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"法":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}}}}}}},"此":{"docs":{},"题":{"docs":{},"代":{"docs":{},"码":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"第":{"docs":{},"一":{"docs":{},"列":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"0":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}},"docs":{}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{},"'":{"docs":{},"\\":{"0":{"docs":{},"'":{"docs":{},";":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}},"docs":{}}}}}}}}}}}}}}},"类":{"docs":{},"似":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}},"迭":{"docs":{},"代":{"docs":{},"写":{"docs":{},"法":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}},"递":{"docs":{},"归":{"docs":{},"写":{"docs":{},"法":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"性":{"docs":{},"质":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}}}}}}}}}}}}},"*":{"docs":{},"*":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}},"=":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.04081632653061224},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.03333333333333333},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.049019607843137254},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.02},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.04145077720207254},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.03636363636363636},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.0449438202247191},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.045454545454545456},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.03389830508474576},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.03184713375796178},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.06369426751592357},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0375},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.03333333333333333},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.06666666666666667},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.05194805194805195},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.046511627906976744},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.03636363636363636},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.02127659574468085},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.027777777777777776},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.025974025974025976},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.03409090909090909},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.042105263157894736},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.025974025974025976},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.030864197530864196},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.043010752688172046},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.08108108108108109},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.01694915254237288},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.033707865168539325},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.05128205128205128},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.0755813953488372},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.0755813953488372},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.043478260869565216}},"=":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}}}}}},"[":{"0":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}},",":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}}},"docs":{}}},"1":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"2":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"1":{"docs":{},",":{"0":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"3":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}},".":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{},",":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}}},"2":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}}},"2":{"docs":{},",":{"3":{"docs":{},",":{"0":{"docs":{},",":{"4":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"3":{"docs":{},",":{"1":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"5":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}}},"docs":{}}},"docs":{}}},"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}},"1":{"0":{"docs":{},",":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818}}}},"2":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}},"3":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}},"4":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}},"5":{"docs":{},",":{"1":{"3":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}},"4":{"docs":{},",":{"1":{"2":{"docs":{},",":{"1":{"6":{"docs":{},"]":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"7":{"docs":{},"]":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}},"docs":{}}},"6":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}},"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}},",":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.028169014084507043}}}}},"docs":{}}},"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}},",":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},",":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},"]":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}},",":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}}},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{},",":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}},"2":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}}},"1":{"docs":{},"]":{"docs":{},",":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}},"2":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"4":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},":":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"4":{"docs":{},",":{"4":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}},"docs":{}}},"docs":{}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"3":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}},"docs":{}}}}}}}},"docs":{}}}}}}},"]":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}},",":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}},"3":{"docs":{},"]":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},",":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}},",":{"0":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},",":{"4":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},"]":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}},"docs":{}}},"5":{"docs":{},"]":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}},"8":{"docs":{},",":{"1":{"2":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"0":{"docs":{},",":{"9":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"6":{"docs":{},",":{"9":{"docs":{},",":{"8":{"docs":{},",":{"7":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},",":{"docs":{},"n":{"docs":{},"]":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}}}}}}}},"docs":{}},"]":{"docs":{},",":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}}},"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872}}}},",":{"5":{"docs":{},"]":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}},"docs":{}}},"2":{"docs":{},"]":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}},",":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}},"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}},"docs":{}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}},"docs":{}}}}}}}}}}}},"]":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}},",":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888}}}}},"4":{"docs":{},"]":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}},",":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}}}},",":{"6":{"docs":{},",":{"4":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872}}}}},"docs":{}}},"6":{"docs":{},"]":{"docs":{},".":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}},"8":{"docs":{},",":{"6":{"docs":{},",":{"2":{"docs":{},",":{"5":{"docs":{},",":{"4":{"docs":{},",":{"8":{"docs":{},",":{"3":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}},"docs":{}}}}}}},"]":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}},"3":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}},"docs":{}}},"docs":{}}}}}}},"]":{"docs":{},",":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}},"2":{"0":{"docs":{},",":{"9":{"docs":{},"]":{"docs":{},",":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}},"docs":{}}},"3":{"docs":{},",":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818}}}},"docs":{},",":{"0":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}}},"3":{"docs":{},"]":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}},",":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}},"4":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}},"docs":{}}}}}}}}}}}}},"5":{"docs":{},",":{"6":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}},".":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}}},"docs":{}}},"3":{"docs":{},"]":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}},"docs":{}},"]":{"docs":{},",":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}},"3":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}},"docs":{}}},"docs":{}},"]":{"docs":{},",":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}},"3":{"docs":{},"]":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}}},"5":{"docs":{},"]":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}}},"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}}},"docs":{}}},"docs":{}},"]":{"docs":{},",":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888}}}}},"4":{"docs":{},"]":{"docs":{},",":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}}}}},"5":{"docs":{},"]":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}},",":{"6":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{},".":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}},",":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.021052631578947368}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{},",":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}},"docs":{}}},"6":{"docs":{},"]":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}},"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}},"]":{"docs":{},",":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}},"3":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}},"4":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}},"docs":{}}}}}}}}}}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}},",":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}},"docs":{}}}}}}}}}}}}},"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}},",":{"0":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}},"docs":{}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}},"docs":{}}}}}}}},"3":{"docs":{},",":{"5":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},"]":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}},",":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}},",":{"5":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}}},"docs":{}}},"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}}},"5":{"docs":{},"]":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}},",":{"docs":{},"[":{"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"8":{"docs":{},",":{"1":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}},"docs":{}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"9":{"docs":{},",":{"2":{"0":{"docs":{},",":{"1":{"5":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}},"docs":{}}},"docs":{}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"1":{"5":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}},":":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"]":{"docs":{},",":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}},"4":{"docs":{},",":{"1":{"docs":{},",":{"8":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872}}}},"docs":{}}},"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{},".":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364}}}},",":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.022727272727272728}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}},"docs":{}},"]":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}},"8":{"docs":{},"]":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666}}}},"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}},"5":{"docs":{},",":{"1":{"docs":{},",":{"4":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"3":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"4":{"docs":{},",":{"1":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}},"docs":{}}},"docs":{}},"docs":{}}},"7":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"8":{"docs":{},",":{"1":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"8":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}},"docs":{}}},"docs":{}}},"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}},"6":{"docs":{},",":{"5":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}},"docs":{}}},"docs":{}}},"7":{"docs":{},"]":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}},",":{"1":{"docs":{},",":{"5":{"docs":{},",":{"3":{"docs":{},",":{"6":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}},"docs":{}}},"6":{"docs":{},",":{"4":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}},"docs":{}}},"docs":{}}},"docs":{}}},"8":{"docs":{},",":{"9":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"2":{"docs":{},"]":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"]":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}},"docs":{}}},"docs":{}}},"8":{"docs":{},",":{"5":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}},"docs":{}}},"docs":{}}},"9":{"docs":{},",":{"1":{"0":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"2":{"docs":{},"]":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"2":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}}},"docs":{}},"3":{"docs":{},",":{"1":{"5":{"docs":{},",":{"2":{"0":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"6":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}},"docs":{}}},"docs":{}}},"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.04},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.05172413793103448},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.04950495049504951},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.05263157894736842},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.056338028169014086},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"−":{"2":{"3":{"1":{"docs":{},",":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}},"docs":{}},"docs":{}},"docs":{}},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"0":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"0":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"0":{"docs":{},"\"":{"docs":{},"]":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}},"docs":{}}}}},"docs":{}}}}},"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"0":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"0":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}},"docs":{}}}}},"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"2":{"5":{"5":{"docs":{},".":{"2":{"5":{"5":{"docs":{},".":{"1":{"1":{"docs":{},".":{"1":{"3":{"5":{"docs":{},"\"":{"docs":{},",":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"4":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"3":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}},"5":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"3":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}},"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"9":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"5":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}},"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"2":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"6":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"3":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"3":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"\"":{"docs":{},"]":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"\"":{"docs":{},"]":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}},"t":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"2":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"9":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"4":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"9":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"5":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"9":{"docs":{},"\"":{"docs":{},"]":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},".":{"docs":{},"q":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}},"q":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}}},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{},"]":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}}}}}}}}}},"[":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},",":{"1":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"2":{"docs":{},",":{"1":{"6":{"docs":{},"]":{"docs":{},"]":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"5":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"8":{"docs":{},",":{"1":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"2":{"docs":{},",":{"1":{"6":{"docs":{},"]":{"docs":{},"]":{"docs":{},",":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"8":{"docs":{},",":{"1":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"5":{"docs":{},",":{"1":{"8":{"docs":{},"]":{"docs":{},"]":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}}}}},"docs":{}}},"6":{"docs":{},",":{"9":{"docs":{},"]":{"docs":{},"]":{"docs":{},",":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}},"docs":{}}},"docs":{}}}}},"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"4":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{},"]":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}},"docs":{}}},"docs":{}}}}},"5":{"docs":{},"]":{"docs":{},"]":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}},",":{"docs":{},"[":{"6":{"docs":{},",":{"9":{"docs":{},"]":{"docs":{},"]":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}},"docs":{}}},"docs":{}}}}},"6":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"8":{"docs":{},",":{"1":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"5":{"docs":{},",":{"1":{"8":{"docs":{},"]":{"docs":{},"]":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}},"]":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}}}}},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"b":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"c":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"e":{"docs":{},"'":{"docs":{},"]":{"docs":{},",":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}}}},"d":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"e":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"e":{"docs":{},"'":{"docs":{},"]":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}},"s":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"f":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"c":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"s":{"docs":{},"'":{"docs":{},"]":{"docs":{},",":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}},"a":{"1":{"docs":{},",":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}},"2":{"docs":{},",":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}},"docs":{},"d":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}},"d":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":2.5166666666666666},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":3.346320346320346},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},"=":{"0":{"docs":{},")":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}},"docs":{}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"1":{"docs":{},",":{"docs":{},"l":{"2":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.016666666666666666}}}}},"docs":{}}},"docs":{}}}},"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":2.5454545454545454}}}}}}},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}}}}}},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.019801980198019802},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.02531645569620253},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.023809523809523808},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.02564102564102564},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.029411764705882353},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.02},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.020202020202020204},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.017857142857142856},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.02702702702702703},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.015748031496062992},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.022222222222222223},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.01818181818181818},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.02247191011235955},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.022727272727272728},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.04838709677419355},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.025974025974025976},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.02631578947368421},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.022222222222222223},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0273972602739726},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.031746031746031744},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.025},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.025},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.018018018018018018},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.02631578947368421},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.017699115044247787},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.031746031746031744},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.025974025974025976},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.01904761904761905},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.028169014084507043},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.02727272727272727},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.03773584905660377},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.02127659574468085},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.027777777777777776},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.027777777777777776},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.021052631578947368},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.025974025974025976},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.02857142857142857},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.021505376344086023},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.022988505747126436},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.021505376344086023},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.045454545454545456},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.012048192771084338},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.024096385542168676},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.02702702702702703},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.014814814814814815},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.014814814814814815},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.015503875968992248},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.0196078431372549},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.01694915254237288},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.015503875968992248},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.014492753623188406},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.015151515151515152},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.02666666666666667},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.02564102564102564},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.02564102564102564},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.01744186046511628},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.01744186046511628},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.014492753623188406},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.020618556701030927},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}},"'":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}},"=":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"b":{"docs":{},"l":{"docs":{},"=":{"docs":{},"b":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},",":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}},"z":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":3.3650793650793647}}}}}}},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.039603960396039604},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.020202020202020204},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}},".":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.03},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.02072538860103627},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":2.034090909090909},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":1.2669491525423728},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.02631578947368421},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.02830188679245283},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":1.6950757575757573},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":1.6982456140350877},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":2.521505376344086},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":1.4440753045404207},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.0297029702970297},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":2.020618556701031},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},",":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"?":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}},".":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}},"，":{"docs":{},"这":{"docs":{},"题":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"加":{"docs":{},"入":{"docs":{},"了":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"些":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"是":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"不":{"docs":{},"好":{"docs":{},"区":{"docs":{},"分":{"docs":{},"两":{"docs":{},"个":{"docs":{},"区":{"docs":{},"间":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"将":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"能":{"docs":{},"去":{"docs":{},"除":{"docs":{},"所":{"docs":{},"有":{"docs":{},"边":{"docs":{},"界":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"除":{"docs":{},"去":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"和":{"docs":{},"前":{"docs":{},"面":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"情":{"docs":{},"况":{"docs":{},"了":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}},"n":{"docs":{},"g":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}},"i":{"docs":{},"v":{"docs":{"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}}}}}}},"e":{"docs":{},"a":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.025974025974025976}},",":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}},".":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.023809523809523808},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}},"k":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}}}},":":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}},"i":{"docs":{},")":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}},".":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}},"x":{"docs":{},"i":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}}}}}},",":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}},"e":{"docs":{},".":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}}}}},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},",":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}}},"=":{"1":{"docs":{},";":{"docs":{},"a":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728}}}}},"docs":{}},")":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}},".":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}}},"c":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.02}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.010582010582010581},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.017857142857142856}},"s":{"docs":{},"t":{"docs":{"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":5.037037037037037}}}}}}},"i":{"docs":{},"m":{"docs":{},"b":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":3.39047619047619}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.025},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.018018018018018018},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"只":{"docs":{},"有":{"docs":{},"查":{"docs":{},"找":{"docs":{},"和":{"docs":{},"插":{"docs":{},"入":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.016666666666666666},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":3.384615384615384},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.025477707006369428},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.022988505747126436},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.021505376344086023},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}}}},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}},"n":{"docs":{},"u":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}},"e":{"docs":{},";":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":3.3499999999999996}}},"t":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":1.4440753045404207}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}},"docs":{}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"s":{"docs":{},"t":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":1.4455205811138012},"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html":{"ref":"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html","tf":1.5535714285714284},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.0297029702970297}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}},"s":{"docs":{},":":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":2.0412371134020617},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"s":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}},"n":{"docs":{},"t":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.018867924528301886},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},"=":{"0":{"docs":{},";":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}},"t":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":2.5588235294117645}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":2.0202020202020203},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":3.3460721868365177},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":2.5123456790123457},"77.-combinations.html":{"ref":"77.-combinations.html","tf":5.027777777777778}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.024691358024691357}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}},"s":{"docs":{},".":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"u":{"docs":{},"m":{"2":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.024691358024691357}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.024691358024691357}}}}}}}}}}}}}}},"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}},"?":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}}},"t":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}},"u":{"docs":{},"t":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}},"e":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.017699115044247787}},",":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044}}},":":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}}}}},"p":{"docs":{},"y":{"docs":{},")":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}},".":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}},"s":{"docs":{},")":{"docs":{},",":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}}},"o":{"docs":{},"r":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":3.380503144654088}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":1.6765676567656764},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.023255813953488372},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.02127659574468085},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}}}}},"n":{"docs":{},"g":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}}}}},":":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}}},"o":{"docs":{},"s":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}}}},"c":{"docs":{},"k":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}},",":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}},".":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}},"'":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}}},"m":{"docs":{},"p":{"docs":{},"{":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}},".":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.03821656050955414}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}}}}}},"[":{"docs":{},"i":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}},"]":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}},";":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},".":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"[":{"5":{"0":{"0":{"2":{"docs":{},"]":{"docs":{},"[":{"7":{"docs":{},"]":{"docs":{},"[":{"1":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}},"docs":{}},"docs":{}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"]":{"docs":{},"[":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"]":{"docs":{},";":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.01910828025477707},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}},",":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}},"u":{"docs":{},"r":{"docs":{},";":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}},"=":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"docs":{},"j":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}}}}}},"t":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},";":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}}}}}},"[":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"]":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}}}}}}}}}},"=":{"0":{"docs":{},";":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}},"1":{"docs":{},";":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}},"docs":{},"=":{"docs":{},"c":{"docs":{},"?":{"docs":{},"以":{"docs":{},"及":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"和":{"docs":{},"d":{"docs":{},"b":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"a":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},"b":{"docs":{},"c":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"a":{"docs":{},"=":{"docs":{},"=":{"docs":{},"c":{"docs":{},"?":{"docs":{},"以":{"docs":{},"及":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"c":{"docs":{},"和":{"docs":{},"d":{"docs":{},"b":{"docs":{},"b":{"docs":{},"c":{"docs":{},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"a":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},"b":{"docs":{},"c":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{},"。":{"docs":{},"上":{"docs":{},"面":{"docs":{},"两":{"docs":{},"中":{"docs":{},"情":{"docs":{},"况":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"种":{"docs":{},"成":{"docs":{},"立":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"算":{"docs":{},"成":{"docs":{},"功":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"里":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"保":{"docs":{},"存":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"这":{"docs":{},"次":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"使":{"docs":{},"用":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"t":{"docs":{},")":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}},"d":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"i":{"docs":{},"t":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}},"o":{"docs":{},"n":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}}}}},"b":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}},"a":{"docs":{},"l":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}},"i":{"docs":{},"t":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.018018018018018018},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421}}}},"o":{"docs":{},"d":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":3.376344086021505}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":2.0294117647058822},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":2.0217391304347827}},".":{"docs":{"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.020202020202020204},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.025477707006369428},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}},".":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}},"s":{"docs":{},")":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}},",":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.025},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":3.3445692883895126},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":3.341085271317829}}}}},"u":{"docs":{},"r":{"docs":{},"b":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}},"=":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":2.533707865168539},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}},"n":{"docs":{},"d":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.0449438202247191}},",":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}},"s":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.02247191011235955}},"o":{"docs":{},"r":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.02247191011235955}},")":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}},",":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}},".":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}},"i":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}}}}},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.017699115044247787}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}}}}}},"c":{"docs":{},"e":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":2.505434782608696}}}},"e":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},",":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}},"p":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},"(":{"0":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}},"docs":{}}},"docs":{}}},"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}}}}}}}},"docs":{}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}},"docs":{}}}}}}}}}}}},"+":{"1":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}}}},"docs":{}}},"docs":{}}},"m":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044}}}}},"docs":{}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}},"docs":{}}}}}}}}}},"docs":{}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}}}}}},"docs":{}},"=":{"1":{"docs":{},";":{"docs":{"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}},"docs":{}}}}}}}}},"1":{"docs":{},"]":{"docs":{},"=":{"1":{"docs":{},";":{"docs":{"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}}},"docs":{}}}},"docs":{},"j":{"docs":{},"]":{"docs":{},"+":{"docs":{},"=":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"j":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"n":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":1.683712121212121},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":1.6845238095238093},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":2.0202020202020203},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}},",":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}},".":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}},"o":{"docs":{},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.015544041450777202},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364}}}}}}},"n":{"docs":{},"e":{"docs":{},".":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}},",":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}}},"w":{"docs":{},"n":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.034782608695652174},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.04424778761061947},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}},"d":{"docs":{},"=":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"s":{"docs":{},"，":{"docs":{},"每":{"docs":{},"层":{"docs":{},"有":{"4":{"docs":{},"个":{"docs":{},"分":{"docs":{},"量":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"还":{"docs":{},"是":{"docs":{},"挺":{"docs":{},"高":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"好":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{},"我":{"docs":{},"这":{"docs":{},"里":{"docs":{},"就":{"docs":{},"不":{"docs":{},"分":{"docs":{},"析":{"docs":{},"了":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"a":{"docs":{},"y":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.02564102564102564},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.05232558139534884},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.05232558139534884}}}}},"e":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.018518518518518517}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.01910828025477707},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.025974025974025976},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}}}},"t":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":3.3592400690846285},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":1.2584745762711864},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.021505376344086023},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},",":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}},"s":{"docs":{},".":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}},"v":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.025974025974025976}}}},"s":{"docs":{},"e":{"docs":{},"{":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}},"x":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"l":{"docs":{},"i":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.039603960396039604},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.0379746835443038},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.025},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.03571428571428571},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.030612244897959183},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.024509803921568627},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.029411764705882353},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.044642857142857144},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.01818181818181818},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.02247191011235955},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.022727272727272728},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.01910828025477707},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.04838709677419355},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.03184713375796178},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0375},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.018018018018018018},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.02666666666666667},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.025974025974025976},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.01904761904761905},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.028169014084507043},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.021052631578947368},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.021505376344086023},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.02702702702702703},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.022222222222222223},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.014492753623188406},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.01744186046511628},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.01744186046511628},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.014492753623188406},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.030927835051546393},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.016304347826086956}},"e":{"docs":{},":":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}},",":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}},"s":{"docs":{},".":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.0297029702970297},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.0196078431372549},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.025477707006369428},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.018018018018018018},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.01904761904761905},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.021505376344086023},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.01744186046511628},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.01744186046511628},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.020618556701030927},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":2.5098039215686274}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}},"s":{"docs":{},",":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}}},"u":{"docs":{},"t":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}},"n":{"docs":{},"t":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.01818181818181818},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.025477707006369428},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}}}}}},"t":{"docs":{},"i":{"docs":{},"r":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}}},"d":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":1.6825396825396823},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}}},",":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}},"(":{"0":{"docs":{},")":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}},"docs":{},"e":{"docs":{},")":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}},";":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}},"g":{"docs":{},"a":{"docs":{},"g":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186}}}}}},")":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":3.341085271317829}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}}}},"t":{"docs":{},"c":{"docs":{},".":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"里":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"整":{"docs":{},"个":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"有":{"3":{"docs":{},"个":{"docs":{},"维":{"docs":{},"度":{"docs":{},"，":{"docs":{},"一":{"docs":{},"是":{"docs":{},"前":{"docs":{},"面":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"二":{"docs":{},"是":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"三":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"防":{"docs":{},"止":{"docs":{},"的":{"docs":{},"轮":{"docs":{},"数":{"docs":{},"。":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.022222222222222223},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.025},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.02857142857142857},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.022988505747126436},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.02564102564102564},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.020618556701030927}},"&":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.012048192771084338}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}},".":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}},"m":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}},"n":{"docs":{},"t":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.018867924528301886},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.021052631578947368},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.014492753623188406},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}},"s":{"docs":{},":":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}},":":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":1.2669491525423728},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}},"a":{"docs":{},"l":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}},"x":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.015544041450777202},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":1.2584745762711864},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":2.5161290322580645},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.017045454545454544},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},";":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}},"l":{"docs":{},"l":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.025477707006369428},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}},",":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.015544041450777202},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.017045454545454544},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}},",":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.017857142857142856},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.01910828025477707},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.014814814814814815},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}},"e":{"docs":{},";":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.026785714285714284},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.025974025974025976},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.014814814814814815},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.015151515151515152}}},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"跳":{"docs":{},"完":{"docs":{},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}},".":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}}}}}}},"docs":{}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"q":{"docs":{},"u":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":1.6912568306010927}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}},"(":{"1":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},",":{"docs":{},"f":{"docs":{},"(":{"1":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},",":{"docs":{},"f":{"docs":{},"(":{"1":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},",":{"docs":{},"f":{"docs":{},"(":{"1":{"docs":{},",":{"4":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},",":{"docs":{},"f":{"docs":{},"(":{"1":{"docs":{},",":{"5":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},",":{"docs":{},"f":{"docs":{},"(":{"1":{"docs":{},",":{"6":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},".":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"g":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.018518518518518517}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}},"n":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.02},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.020202020202020204},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.023809523809523808},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.02702702702702703},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.022222222222222223},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.015544041450777202},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.02586206896551724},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.04},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.025974025974025976},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.017045454545454544},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.025974025974025976},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.024096385542168676},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.0196078431372549},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.01694915254237288},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.015503875968992248},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.021739130434782608},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.022727272727272728},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.02054794520547945},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.02564102564102564},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":3.3603603603603602},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}}}}},"(":{"1":{"docs":{},",":{"docs":{},"n":{"docs":{},",":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}}},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}},"e":{"docs":{},"r":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}}},"i":{"docs":{},"d":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.02654867256637168},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872}},".":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}},"s":{"docs":{},".":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}},")":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":3.3650793650793647}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"2":{"docs":{},"类":{"docs":{},"似":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"不":{"docs":{},"限":{"docs":{},"制":{"docs":{},"你":{"docs":{},"跳":{"docs":{},"跃":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"每":{"docs":{},"次":{"docs":{},"记":{"docs":{},"录":{"docs":{},"能":{"docs":{},"达":{"docs":{},"到":{"docs":{},"的":{"docs":{},"最":{"docs":{},"远":{"docs":{},"距":{"docs":{},"离":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"循":{"docs":{},"环":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"更":{"docs":{},"新":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"更":{"docs":{},"新":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"和":{"docs":{},"当":{"docs":{},"前":{"docs":{},"值":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"只":{"docs":{},"能":{"docs":{},"跳":{"docs":{},"到":{"docs":{},"这":{"docs":{},"里":{"docs":{},"了":{"docs":{},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":2.513157894736842},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":3.3446969696969693}}}}},"o":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"a":{"docs":{},"l":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}},"i":{"docs":{},"=":{"0":{"docs":{},";":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.01818181818181818},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}},"i":{"0":{"docs":{},"?":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},":":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035}}}}}}}}}}}}}}},"&":{"docs":{},"&":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}}}}}}}}}}},"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},"{":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}},"=":{"0":{"docs":{},"&":{"docs":{},"&":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}}}}}}}}}},"j":{"docs":{},">":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},"{":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}},"docs":{}}}}}},";":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}},"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{},"{":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}},"&":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}},">":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}},"&":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}}}}}}}}},"(":{"docs":{},"{":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}}}}}}}}}}},",":{"docs":{},"j":{"docs":{},"=":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}},"1":{"docs":{},";":{"docs":{},"i":{"0":{"docs":{},"?":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}}}},";":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}},"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"=":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},";":{"docs":{},"i":{"docs":{"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}}}},"3":{"docs":{},";":{"docs":{},"i":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}}},"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}},"x":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}},"m":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},";":{"docs":{},"i":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888}},">":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},";":{"docs":{},"i":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},";":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"=":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"1":{"docs":{},"+":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"?":{"docs":{},"m":{"docs":{},"a":{"docs":{},":":{"docs":{},"i":{"docs":{},";":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.022058823529411766},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.05263157894736842},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.03409090909090909}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}},",":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364}}},".":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.02631578947368421},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.03409090909090909}}},"=":{"0":{"docs":{},";":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}},"docs":{}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}},"i":{"docs":{},"c":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.029411764705882353},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.017857142857142856},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.015544041450777202},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.04310344827586207},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.017045454545454544}},":":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.0297029702970297},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.02531645569620253},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.03571428571428571},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.030612244897959183},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.024509803921568627},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.029411764705882353},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.044642857142857144},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.01818181818181818},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.02247191011235955},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.022727272727272728},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.04838709677419355},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.03184713375796178},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0375},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.018018018018018018},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.02666666666666667},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.025974025974025976},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.01904761904761905},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.028169014084507043},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.021052631578947368},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.021505376344086023},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.02702702702702703},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.022222222222222223},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.01744186046511628},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.01744186046511628},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.014492753623188406},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.030927835051546393},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.016304347826086956}}}}}},"t":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.0297029702970297},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.02531645569620253},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.03333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.038461538461538464},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.1111111111111111},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.03626943005181347},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.05454545454545454},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.02247191011235955},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.05172413793103448},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.045454545454545456},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.11538461538461539},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.01910828025477707},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.037037037037037035},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.03225806451612903},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.07792207792207792},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0273972602739726},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.025},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.039603960396039604},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.02702702702702703},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.03333333333333333},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.039473684210526314},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.015789473684210527},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.02727272727272727},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.02127659574468085},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.017045454545454544},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.021052631578947368},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.03896103896103896},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.02857142857142857},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.03225806451612903},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.024},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.024096385542168676},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.018867924528301886},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.011320754716981131},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.0196078431372549},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.01694915254237288},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.015503875968992248},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.028985507246376812},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.021739130434782608},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.015151515151515152},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.02564102564102564},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.01744186046511628},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.043478260869565216},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"e":{"docs":{},"g":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":3.3809523809523805},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.030612244897959183},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":2.544943820224719},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.02727272727272727},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888}}},".":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}},",":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}},".":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}}}},"r":{"docs":{},"n":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}},"v":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":3.378378378378378},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":3.408333333333333}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}},".":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}},"s":{"docs":{},",":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666}}},".":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":3.3603603603603602}}}}}}},"n":{"docs":{},"t":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},";":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}},".":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.02666666666666667}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":2.5384615384615383},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":3.3499999999999996},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}}}}}}}}},")":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":2.0105820105820107},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":1.4539951573849876},"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html":{"ref":"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html","tf":1.5535714285714284}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.010582010582010581}},")":{"docs":{},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},")":{"docs":{},"{":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}},"f":{"docs":{},"(":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.016666666666666666}}}},"docs":{}}}}},"l":{"docs":{},"=":{"0":{"docs":{},";":{"docs":{},"i":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}},"docs":{}}}},"l":{"1":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}},"{":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}}}}}}},"2":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}},"{":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}}}}}}},"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}},")":{"docs":{},"{":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}},"=":{"docs":{},"=":{"0":{"docs":{},"&":{"docs":{},"&":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},"{":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}},"docs":{}}}}}}}}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"&":{"docs":{},"&":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}}},"|":{"docs":{},"|":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},"{":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}}}},">":{"docs":{},"=":{"0":{"docs":{},"&":{"docs":{},"&":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}}}}},"docs":{}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},"{":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}},"h":{"docs":{},"=":{"docs":{},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"|":{"docs":{},"|":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"h":{"docs":{},"=":{"docs":{},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"|":{"docs":{},"|":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},">":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}},"docs":{}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"+":{"docs":{},"l":{"docs":{},"+":{"docs":{},"r":{"docs":{},">":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}}}}}}},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"docs":{},"l":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"'":{"docs":{},"l":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}},"r":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"1":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"docs":{},"s":{"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"!":{"docs":{},"=":{"docs":{},"s":{"3":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}},"docs":{}}},">":{"1":{"0":{"docs":{},"|":{"docs":{},"|":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"1":{"0":{"docs":{},"&":{"docs":{},"&":{"docs":{},"s":{"docs":{},">":{"docs":{},"\"":{"2":{"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"7":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"t":{"2":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}}}}}}}},"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}},"1":{"docs":{},")":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}},"docs":{}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"!":{"docs":{},"=":{"docs":{},"'":{"docs":{},"(":{"docs":{},"'":{"docs":{},")":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}},"[":{"docs":{},"'":{"docs":{},")":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}},"{":{"docs":{},"'":{"docs":{},")":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}},")":{"docs":{},"{":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},">":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},"{":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"=":{"docs":{},"=":{"1":{"docs":{},")":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}},"docs":{}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},"=":{"docs":{},"=":{"docs":{},"'":{"0":{"docs":{},"'":{"docs":{},")":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}},"docs":{}}}}}},"docs":{},"i":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}},"=":{"docs":{},"=":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}}}}}}},"i":{"docs":{},"!":{"docs":{},"=":{"0":{"docs":{},"&":{"docs":{},"&":{"docs":{},"i":{"docs":{},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}}}}}}}}}}},"docs":{}}},"=":{"docs":{},"=":{"docs":{},"j":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"docs":{},"j":{"docs":{},">":{"docs":{},"=":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{},"=":{"docs":{},"'":{"docs":{},"\\":{"0":{"docs":{},"'":{"docs":{},"|":{"docs":{},"|":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"[":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{},"!":{"docs":{},"=":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"[":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{},"!":{"docs":{},"=":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},")":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}},"j":{"docs":{},"+":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"2":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}},"docs":{}}}}}}},"n":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}},"1":{"docs":{},")":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}},"docs":{}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456}}}}}},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}},"docs":{}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}}}}}}},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}},"1":{"docs":{},")":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}},"docs":{}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}},"docs":{}}}}}}}}}}}}}}},"c":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}},"docs":{}}}},"r":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}},"docs":{}}}}},"x":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}},"\"":{"2":{"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"7":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"=":{"docs":{},"x":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}},"docs":{}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"=":{"docs":{},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"&":{"docs":{},"&":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"=":{"docs":{},"=":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}}}}}}}}}},")":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"p":{"docs":{},"o":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"docs":{},"=":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},")":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}},"&":{"docs":{},"&":{"docs":{},"q":{"docs":{},"&":{"docs":{},"&":{"docs":{},"(":{"docs":{},"p":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}}}}}}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"&":{"docs":{},"&":{"docs":{},"q":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"=":{"docs":{},"=":{"docs":{},"'":{"docs":{},")":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}},"]":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}},"}":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}},"(":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}},"l":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}},"r":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}},"u":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"1":{"docs":{},"|":{"docs":{},"|":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"3":{"docs":{},")":{"docs":{},"{":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}},"docs":{}}}}}}}}}}},"2":{"docs":{},"|":{"docs":{},"|":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}}}}}}}}},"docs":{}}},">":{"docs":{},"=":{"2":{"docs":{},")":{"docs":{},"{":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}},"docs":{}}}}}}},"u":{"docs":{},"t":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"[":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"]":{"docs":{},"[":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"]":{"docs":{},"!":{"docs":{},"=":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},"{":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}}},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"{":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}}}}}},")":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}}}}},"t":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}},"m":{"docs":{},"p":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.01509433962264151}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888}},")":{"docs":{},"{":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}}}}}}},"k":{"docs":{},")":{"docs":{},"{":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}}}}}}}}}}}}}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}}}}}}}}}}},"o":{"docs":{},"u":{"1":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}},"docs":{}}},"q":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},"{":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}}}}}}}},"=":{"docs":{},"=":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},"{":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"|":{"docs":{},"|":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}}}}}}},")":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428}}}}}}}}},"&":{"docs":{},"&":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}},"docs":{}}}}}}}}}}}}}}},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},"{":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}},"docs":{}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"=":{"docs":{},"=":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}}}}}}}},"k":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}},"docs":{}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},"|":{"docs":{},"|":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}},"=":{"docs":{},"=":{"docs":{},"'":{"0":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}},"docs":{}}}}}}}}}}}}}},"p":{"docs":{},"[":{"docs":{},"s":{"docs":{},"[":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},"]":{"docs":{},"+":{"docs":{},"+":{"docs":{},">":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}},"docs":{}}}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"*":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"+":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},"!":{"docs":{},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"&":{"docs":{},"&":{"docs":{},"p":{"docs":{},"r":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}}}}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"&":{"docs":{},"&":{"docs":{},"p":{"docs":{},"r":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}}}}}}}}},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}},"q":{"1":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}},"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},")":{"docs":{},"{":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}},"u":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"docs":{},"u":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"'":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}},"u":{"docs":{},"'":{"docs":{},")":{"docs":{},"{":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}},".":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}}},"e":{"docs":{},"r":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},"?":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}},".":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}}}}},".":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}},"h":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}},";":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}}}}}}},":":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}},"s":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{},"k":{"docs":{},"u":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}},"]":{"docs":{},"和":{"docs":{},"p":{"docs":{},"[":{"0":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}},"docs":{}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":3.351515151515151},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}}}},"a":{"docs":{},"g":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":3.3591954022988504}},"e":{"docs":{},"!":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}},".":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}}}},")":{"docs":{},"{":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}},"i":{"docs":{},"为":{"0":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}},"docs":{}}}},";":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}},"+":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}},"docs":{},"+":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}},"i":{"docs":{"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":2.5123456790123457},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":2.513157894736842},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":3.3470319634703194},"52.-n-queens-ii.html":{"ref":"52.-n-queens-ii.html","tf":2.7},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":2.513157894736842},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":2.5088495575221237},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":1.6723484848484846},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":1.6771929824561402},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":1.675595238095238},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":3.3448275862068964},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":2.008},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":1.6726907630522088},"107.-binary-tree-level-order-traversal-ii.html":{"ref":"107.-binary-tree-level-order-traversal-ii.html","tf":1.5535714285714284},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":2.506849315068493},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":1.4343853820598005}},"i":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":1.4343853820598005}}}},",":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}}}}},">":{"docs":{},"=":{"0":{"docs":{},"&":{"docs":{},"&":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},">":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"?":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"[":{"docs":{},"i":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}},"p":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":2.5454545454545454}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}}}},".":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}},"e":{"docs":{},".":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}}}}}},"m":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.02608695652173913},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.017699115044247787},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.03225806451612903},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.024}},"a":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}},";":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}},"p":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.020202020202020204},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.025974025974025976}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}}}},"(":{"1":{"2":{"8":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}}}},">":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}},"x":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}},"i":{"docs":{},"m":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":3.3476190476190473}},"u":{"docs":{},"m":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":3.345833333333333},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":2.0294117647058822},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":1.681159420289855},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":2.5792079207920793}}}},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"=":{"0":{"docs":{},";":{"docs":{"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}},"docs":{}}}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}},"docs":{}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":2.534313725490196},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":3.403397027600849}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.015544041450777202},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364}},".":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.0603448275862069},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":3.3630363036303628},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":2.526315789473684},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":2.5140845070422535},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":2.536363636363636},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}},")":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}},"看":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}}}}}}}}}},",":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}},".":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}}}}}},"[":{"8":{"docs":{},"]":{"docs":{},"=":{"docs":{},"{":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"j":{"docs":{},"k":{"docs":{},"l":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"m":{"docs":{},"n":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"q":{"docs":{},"r":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"u":{"docs":{},"v":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"x":{"docs":{},"y":{"docs":{},"z":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"*":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"+":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{},";":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}},"=":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}}}},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}},"k":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},"{":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},",":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}},"n":{"docs":{},"i":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}}},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}},"r":{"docs":{},"g":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":2.018867924528302},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":2.015748031496063},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":3.3603603603603602},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":2.521505376344086}},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},",":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.014705882352941176},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}},"d":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}},"i":{"docs":{},"f":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364}},"i":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364}}}}},"=":{"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{},"+":{"7":{"docs":{},";":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"u":{"docs":{},"l":{"docs":{},"o":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"v":{"docs":{},"e":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.03076923076923077}},"{":{"docs":{},"{":{"0":{"docs":{},",":{"1":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"1":{"docs":{},",":{"0":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"0":{"docs":{},",":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"=":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}},".":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}},"s":{"docs":{},")":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}},",":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385}}},".":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}},"=":{"1":{"docs":{},";":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}},"docs":{}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.01744186046511628},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}},"i":{"docs":{},"d":{"docs":{},";":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364}}},"d":{"docs":{},"l":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}},"=":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"docs":{},"(":{"docs":{},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":2.532258064516129}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},".":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.031746031746031744}},"u":{"docs":{},"m":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.02631578947368421},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":2.515873015873016},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":2.5319148936170213},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":2.028985507246377},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.02564102564102564}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}}},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},";":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},")":{"docs":{},"{":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}}}}}}}},",":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"2":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}},"docs":{}}}}}},")":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}},"n":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.038461538461538464},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.023809523809523808},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.02702702702702703},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.025},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":3.3749999999999996},"52.-n-queens-ii.html":{"ref":"52.-n-queens-ii.html","tf":2.7},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.06666666666666667},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.02608695652173913},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.017699115044247787},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.01904761904761905},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.027777777777777776},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.021505376344086023},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.021739130434782608}},"u":{"docs":{},"m":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.03},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.03626943005181347},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.022727272727272728},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.025423728813559324},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.03409090909090909},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.031578947368421054},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":2.533333333333333},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":3.343537414965986},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":2.0202020202020203},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.03821656050955414},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.02631578947368421},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.018867924528301886},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.021505376344086023},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.02666666666666667},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.02564102564102564},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.021739130434782608}},"s":{"docs":{},".":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}},",":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428}}}},")":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}},".":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}},"s":{"1":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.053763440860215055}},",":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}},"[":{"docs":{},"r":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}},"2":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.03225806451612903}},",":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.021505376344086023}}},".":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}},"docs":{},",":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.022222222222222223}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}},"1":{"docs":{},"]":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}},"docs":{},"i":{"docs":{},"]":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}}}}}}}}}},"k":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}},"]":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.022058823529411766}},")":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}},"l":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}},".":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}}}}}}}},")":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.022222222222222223},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.022988505747126436},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}},"s":{"docs":{},")":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}},";":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}},"{":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}},",":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}}}},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}},"{":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}}},",":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}},"e":{"docs":{},"g":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}}}}}},"x":{"docs":{},"t":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":3.3553921568627447},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}}}}}}}},"w":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.025},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016}},"=":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"l":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.05454545454545454}},"e":{"docs":{},")":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}},"y":{"docs":{},")":{"docs":{},".":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":1.6904761904761902},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":2.533333333333333},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.022556390977443608},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.018518518518518517},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.027210884353741496},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.029411764705882353},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.021739130434782608},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.028985507246376812},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}},"s":{"docs":{},",":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112}}},"'":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}},".":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.0196078431372549},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}},"'":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.02040816326530612}}}}},"n":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.016666666666666666},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"e":{"docs":{},")":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}},"t":{"docs":{},"e":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}},":":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}},"y":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}},".":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}},":":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}},")":{"docs":{},".":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}},"w":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},";":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428}}},"=":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},";":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428}}}}}}}}}},"}":{"docs":{},"次":{"docs":{},"。":{"docs":{},"循":{"docs":{},"环":{"docs":{},"需":{"docs":{},"要":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"平":{"docs":{},"方":{"docs":{},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"平":{"docs":{},"方":{"docs":{},")":{"docs":{},"。":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":3.358333333333333},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.021505376344086023},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}},"{":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},".":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}},",":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}},"t":{"docs":{},"h":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":1.6746031746031744}}}},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}},",":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}}}}}},"×":{"docs":{},"n":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}},"c":{"docs":{},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}}}}}}}}}},"docs":{}}}}}}}}}},"r":{"docs":{},"=":{"0":{"docs":{},";":{"docs":{},"n":{"docs":{},"c":{"docs":{},"=":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}}}}},"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"{":{"docs":{},"n":{"docs":{},"c":{"docs":{},",":{"docs":{},"n":{"docs":{},"r":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}}}},",":{"docs":{},"n":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}}}}}}}},"!":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.02666666666666667}}},"个":{"docs":{},"数":{"docs":{},"排":{"docs":{},"列":{"docs":{},"有":{"docs":{},"n":{"docs":{},"!":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"1":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}},"docs":{}}}}}}}}}}}}}}}}},"，":{"docs":{},"那":{"docs":{},"么":{"1":{"docs":{},"开":{"docs":{},"头":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"会":{"docs":{},"有":{"docs":{},"(":{"docs":{},"n":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}}}}}}}}}},"docs":{}}},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"*":{"docs":{},"n":{"docs":{},")":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}}}}}}}}}}}},".":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}},"?":{"docs":{"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.02564102564102564},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"c":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"e":{"docs":{},",":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}},".":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}}}},"e":{"docs":{},".":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.022727272727272728},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":1.689922480620155},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":1.4398921832884095},"107.-binary-tree-level-order-traversal-ii.html":{"ref":"107.-binary-tree-level-order-traversal-ii.html","tf":1.5535714285714284}},",":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}},".":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}},")":{"docs":{},".":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":2.5153846153846153}},",":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}},"u":{"docs":{},"t":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}},":":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.0297029702970297},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.02531645569620253},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.03571428571428571},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.030612244897959183},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.024509803921568627},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.029411764705882353},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.044642857142857144},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.01818181818181818},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.02247191011235955},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.022727272727272728},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.04838709677419355},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.03184713375796178},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0375},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.018018018018018018},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.02666666666666667},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.025974025974025976},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.01904761904761905},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.028169014084507043},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.021052631578947368},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.021505376344086023},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.02702702702702703},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.022222222222222223},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.01744186046511628},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.01744186046511628},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.014492753623188406},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.030927835051546393},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.016304347826086956}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},".":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}}}}}}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}},"s":{"docs":{},",":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.017857142857142856}}},"r":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}}}},".":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}}}}},"(":{"1":{"docs":{},")":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}},"n":{"docs":{},")":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"数":{"docs":{},"字":{"docs":{},"比":{"docs":{},"较":{"docs":{},"少":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"一":{"docs":{},"共":{"docs":{},"就":{"3":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"适":{"docs":{},"合":{"docs":{},"的":{"docs":{},"。":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}},",":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}},"e":{"docs":{},",":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}},".":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.02654867256637168}},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.018867924528301886}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}},"p":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.03333333333333333},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.029411764705882353},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.03821656050955414}},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.021052631578947368},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},",":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}},".":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}}}}},";":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678}}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.023255813953488372},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.023255813953488372}},".":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}},"e":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":2.5441176470588234}},",":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}}}},"=":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},";":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}}}},"p":{"docs":{},"r":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},";":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}},"v":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.010582010582010581}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}}}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}}}},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":1.4539951573849876}},",":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.01694915254237288}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},">":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}}}},"c":{"docs":{},"e":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}},".":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},":":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.015873015873015872},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666}},"e":{"docs":{},".":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}},"s":{"docs":{},"h":{"docs":{},"进":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"时":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"就":{"docs":{},"是":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}},"s":{"docs":{},"(":{"2":{"5":{"6":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}},"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}},"docs":{}},"docs":{}},"docs":{},"s":{"1":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"=":{"1":{"docs":{},";":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}},"docs":{}}}},"docs":{}}}},"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"]":{"docs":{},"=":{"docs":{},"i":{"docs":{},";":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"]":{"docs":{},"]":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}}}}}}}},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"e":{"docs":{},",":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}}}}},"=":{"0":{"docs":{},";":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}},"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}},"i":{"docs":{},"t":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":1.2669491525423728},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":2.5384615384615383},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":2.532258064516129},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}}}}}},")":{"docs":{},"{":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}},"_":{"1":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"_":{"2":{"docs":{},"=":{"0":{"docs":{},";":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}},"docs":{}}},"docs":{}}}}}}},"docs":{}}},"docs":{}},";":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html":{"ref":"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html","tf":1.5535714285714284}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}},"w":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":3.358333333333333}}}}},"e":{"docs":{},"r":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}},"r":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":2.5253164556962027},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":3.353741496598639}},"e":{"docs":{},".":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.030612244897959183}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714}}}}}},"h":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":3.359420289855072},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":2.517699115044248},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":2.5476190476190474},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":3.3636363636363633},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":2.5136986301369864},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.02564102564102564},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":1.6956521739130432}},".":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872}}},"'":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}},")":{"docs":{},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}},"t":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":3.3483709273182956},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":3.3422619047619047},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":3.3468468468468466},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":2.5344827586206895}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}},".":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.018867924528301886},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364}},"?":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}}},".":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"插":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"间":{"docs":{},"也":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"'":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":3.373333333333333}}}}}}},"i":{"docs":{},"r":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":2.511111111111111}}}}},")":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}},";":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186}}}},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":2.01010101010101}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364}},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}},"s":{"docs":{},",":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}},".":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}},"。":{"docs":{},"于":{"docs":{},"是":{"docs":{},"我":{"docs":{},"将":{"docs":{},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{},"和":{"docs":{},"第":{"docs":{},"一":{"docs":{},"列":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"，":{"docs":{},"从":{"2":{"docs":{},"行":{"2":{"docs":{},"列":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"将":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"那":{"docs":{},"行":{"docs":{},"和":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"位":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"0":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{},"和":{"docs":{},"第":{"docs":{},"一":{"docs":{},"列":{"docs":{},"，":{"docs":{},"将":{"docs":{},"有":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"行":{"docs":{},"或":{"docs":{},"者":{"docs":{},"一":{"docs":{},"列":{"docs":{},"置":{"docs":{},"为":{"docs":{},"零":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},".":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":3.348039215686274},"46.-permutations.html":{"ref":"46.-permutations.html","tf":5.011111111111111},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":3.3470319634703194},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":3.373333333333333}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}},"s":{"docs":{},".":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}}}}}}},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.022222222222222223}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}},"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},",":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.022222222222222223}}}}}}}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}},",":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}}}}}}},"s":{"1":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.024691358024691357},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.04054054054054054}},",":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.02702702702702703}}},".":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{},"b":{"1":{"docs":{},"+":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}},"docs":{}}}},"docs":{}}}}}}}},"2":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.024691358024691357},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.02702702702702703}},")":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}},",":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.02702702702702703}}},".":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}},";":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"s":{"2":{"docs":{},",":{"docs":{},"b":{"2":{"docs":{},"+":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}},"docs":{}}}},"docs":{}}}}}}}},"3":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.04054054054054054}},")":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}},",":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}},"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.03333333333333333},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.029411764705882353},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.03821656050955414},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.0425531914893617},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.033707865168539325}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":3.3629629629629627},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.03},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.02702702702702703},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.025477707006369428},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.05},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.025},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.018867924528301886},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.027777777777777776},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.022988505747126436},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.021164021164021163},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}},"?":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}},"v":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}},"e":{"docs":{},"n":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":2.018867924528302},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":2.0236220472440944},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":2.022727272727273},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":1.2669491525423728},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":3.3616352201257858},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":1.678030303030303},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":1.7087719298245612},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":1.6845238095238093},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":2.0202020202020203},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":2.532258064516129},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":1.4518272425249168},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}}}}}}}}}},"。":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"排":{"docs":{},"序":{"docs":{},"之":{"docs":{},"后":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"认":{"docs":{},"定":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"。":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}}}},"t":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":2.0412371134020617}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259}},".":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}},"?":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}},",":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}}},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":3.353135313531353},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":2.526315789473684}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.02564102564102564},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.029411764705882353},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.02127659574468085},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}},"m":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":3.343537414965986},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":3.3460721868365177},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":2.5123456790123457},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.025},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":2.5317460317460316},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":3.3636363636363633},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":2.5205479452054793},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.02564102564102564},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":1.6739130434782608}},"和":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"是":{"docs":{},"原":{"docs":{},"来":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"数":{"docs":{},"字":{"docs":{},"本":{"docs":{},"身":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"里":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"得":{"docs":{},"不":{"docs":{},"到":{"docs":{},"答":{"docs":{},"案":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"逼":{"docs":{},"近":{"docs":{},"需":{"docs":{},"求":{"docs":{},"值":{"docs":{},"。":{"docs":{},"记":{"docs":{},"得":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"如":{"docs":{},"何":{"docs":{},"识":{"docs":{},"别":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"法":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"回":{"docs":{},"顾":{"docs":{},"一":{"docs":{},"下":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"法":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"左":{"docs":{},"右":{"docs":{},"向":{"docs":{},"中":{"docs":{},"间":{"docs":{},"逼":{"docs":{},"近":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"面":{"docs":{},"也":{"docs":{},"用":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"中":{"docs":{},"额":{"docs":{},"外":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"已":{"docs":{},"经":{"docs":{},"有":{"docs":{},"序":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"和":{"docs":{},"小":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"就":{"docs":{},"将":{"docs":{},"小":{"docs":{},"的":{"docs":{},"变":{"docs":{},"大":{"docs":{},"一":{"docs":{},"点":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"，":{"docs":{},"反":{"docs":{},"之":{"docs":{},"大":{"docs":{},"的":{"docs":{},"减":{"docs":{},"小":{"docs":{},"。":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"基":{"docs":{},"础":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"题":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"要":{"docs":{},"求":{"3":{"docs":{},"个":{"docs":{},"数":{"docs":{},"加":{"docs":{},"起":{"docs":{},"来":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"加":{"docs":{},"起":{"docs":{},"来":{"docs":{},"为":{"docs":{},"零":{"docs":{},"减":{"docs":{},"去":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"成":{"docs":{},"了":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}},"了":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"一":{"docs":{},"下":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035}}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"+":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"+":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},";":{"docs":{"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}},".":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}},")":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}},",":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"意":{"docs":{},"思":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"得":{"docs":{},"到":{"docs":{},"路":{"docs":{},"径":{"docs":{},"上":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"值":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"了":{"docs":{},"。":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.016853932584269662},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":2.051546391752577}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":3.338951310861423}}}}}}}}}}}},"t":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":5.027777777777778},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":3.3563218390804597}},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888}}}}}}}}}},".":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.022988505747126436}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":1.6864686468646863},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":2.5253164556962027},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":2.5106382978723403},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}},".":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":3.358333333333333},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802}}}}}}},"t":{"docs":{},"l":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}},"r":{"docs":{},"e":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.02040816326530612},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}},"s":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}},"d":{"docs":{},"o":{"docs":{},"k":{"docs":{},"u":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":3.365180467091295}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}},"i":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}},"g":{"docs":{},"n":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.023809523809523808},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}}}}}},"z":{"docs":{},"e":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}},"是":{"docs":{},"n":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}},"=":{"1":{"docs":{},";":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}},"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}},")":{"docs":{},"{":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}}}},"u":{"docs":{},"l":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":2.510869565217391}}}}}},"t":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.02586206896551724}}}}},"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}}}}}}}},";":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}},"2":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}}}}}}},";":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}},"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}}},"c":{"docs":{},"k":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":1.692307692307692},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":1.4518272425249168},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":1.4460132890365447}},")":{"docs":{},",":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.02531645569620253},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.041666666666666664},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.0196078431372549},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.058823529411764705},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.020202020202020204},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.03571428571428571},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.025477707006369428},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.05194805194805195},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.05319148936170213},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":3.3888888888888884},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":3.3738738738738734},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.033707865168539325}},",":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}},"?":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}},"s":{"docs":{},".":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.029411764705882353}}},",":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}},".":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}},")":{"docs":{},".":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}},"&":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}}},"docs":{}},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":3.351515151515151}},".":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.015748031496062992},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"u":{"docs":{},"r":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}},"e":{"docs":{},".":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}},"e":{"docs":{},"p":{"2":{"docs":{},"=":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},";":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}}}}}},"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.02631578947368421},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.031578947368421054},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.10476190476190476},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}},"=":{"0":{"docs":{},";":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"*":{"2":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}},"docs":{}}}}}}}}}},"s":{"docs":{},".":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.026785714285714284},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}},"i":{"docs":{},")":{"docs":{},";":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}}}},";":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.04310344827586207},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385}}}},"r":{"docs":{},"t":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"=":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}},"(":{"0":{"docs":{},")":{"docs":{},",":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}},"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}},";":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}},"=":{"1":{"docs":{},";":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}},"docs":{}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}},"i":{"docs":{},"r":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":3.352380952380952}}}}},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.03184713375796178},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.06172839506172839}}}}}}}}}}}},")":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728}}},",":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}},".":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}},";":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}},"e":{"docs":{},"t":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.02},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.025477707006369428},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":2.528169014084507},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.027777777777777776},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}},")":{"docs":{},".":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}},"=":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},";":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":2.0113636363636362},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":2.5384615384615383},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":2.518181818181818},"79.-word-search.html":{"ref":"79.-word-search.html","tf":3.3398268398268396},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":1.687719298245614},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":1.6787148594377508},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":2.0240963855421685},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":2.020408163265306},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":2.0125786163522013},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":1.4363233665559245}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}}}}}},".":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":3.36},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.016304347826086956}},"e":{"docs":{},")":{"docs":{},".":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}},",":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}},".":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}}},"t":{"docs":{},"i":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}},"l":{"docs":{},"l":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":1.7094017094017093},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":1.4750830564784052},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":1.469269102990033}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":2.522222222222222},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.018518518518518517},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},",":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}},"r":{"docs":{},"e":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421}}}}},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}},"x":{"docs":{},")":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":5.0131578947368425}}}}}}}},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":3.376543209876543}}}}}}}},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":3.3481481481481477}},"i":{"docs":{},"c":{"docs":{},":":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}}}}}},"t":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.02127659574468085},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.018518518518518517},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.016853932584269662}},"a":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.03409090909090909},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.03389830508474576},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.03184713375796178},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.024691358024691357},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.031578947368421054}},")":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}},".":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.024691358024691357}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"但":{"docs":{},"是":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"有":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"，":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"但":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"得":{"docs":{},"不":{"docs":{},"到":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}},"i":{"docs":{},"l":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}},"=":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},";":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}}}}}},"e":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}},"h":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.022727272727272728},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.025974025974025976},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.022222222222222223},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.02631578947368421},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.010582010582010581},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"s":{"docs":{},"e":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}},"i":{"docs":{},"s":{"docs":{},":":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}},"n":{"docs":{},"k":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"e":{"docs":{},",":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745}}}}}}},"?":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}}},"w":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}},".":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}},"o":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":3.353741496598639},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":2.5416666666666665},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.02564102564102564},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":2.0283018867924527},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":2.533707865168539},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.024691358024691357},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.014814814814814815},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.030927835051546393},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.014705882352941176},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.026785714285714284},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.030927835051546393}},".":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}},";":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.025974025974025976},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.014814814814814815},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}},",":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}}},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}}}}}}},"i":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}},"s":{"docs":{},".":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}}}},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":3.3466666666666662},"120.-triangle.html":{"ref":"120.-triangle.html","tf":5.0256410256410255}},"e":{"docs":{},",":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}},".":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}},")":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}}}}}},"a":{"docs":{},"p":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":2.5259740259740258}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":2.0105820105820107},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":1.689922480620155},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":1.4398921832884095},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":1.4455205811138012},"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html":{"ref":"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html","tf":1.5535714285714284},"107.-binary-tree-level-order-traversal-ii.html":{"ref":"107.-binary-tree-level-order-traversal-ii.html","tf":1.5535714285714284}},"a":{"docs":{},"l":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"还":{"docs":{},"是":{"docs":{},"控":{"docs":{},"制":{"docs":{},"在":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"极":{"docs":{},"大":{"docs":{},"的":{"docs":{},"减":{"docs":{},"少":{"docs":{},"了":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"了":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"空":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"前":{"docs":{},"面":{"docs":{},"问":{"docs":{},"题":{"docs":{},"使":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"来":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"后":{"docs":{},"续":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"够":{"docs":{},"再":{"docs":{},"回":{"docs":{},"到":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"用":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"方":{"docs":{},"便":{"docs":{},"回":{"docs":{},"到":{"docs":{},"前":{"docs":{},"面":{"docs":{},"。":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259}},")":{"docs":{},";":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.023255813953488372},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.01744186046511628}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":2.0105820105820107},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":1.6787148594377508},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":2.0120481927710845},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":2.020408163265306},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":2.0251572327044025},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":3.355555555555555},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":3.355555555555555},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":1.689922480620155},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":1.4436657681940699},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":2.0294117647058822},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":1.4455205811138012},"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html":{"ref":"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html","tf":1.5535714285714284},"107.-binary-tree-level-order-traversal-ii.html":{"ref":"107.-binary-tree-level-order-traversal-ii.html","tf":1.5535714285714284},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":1.459579180509413},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":2.5434782608695654},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":2.0217391304347827},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.030303030303030304},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.02054794520547945},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":1.6912568306010927},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":1.6884057971014492},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":2.5495049504950495}},",":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.015873015873015872},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.018072289156626505},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.02040816326530612},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.018867924528301886},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.022222222222222223},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.02962962962962963},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.023255813953488372},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.022641509433962263},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.029411764705882353},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.025423728813559324},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.023255813953488372},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.021739130434782608},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.021739130434782608},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.022727272727272728},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.02054794520547945},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.02459016393442623},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.021739130434782608}},"e":{"docs":{},"(":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}}},")":{"docs":{},";":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}}}}}},"*":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.018867924528301886},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.015503875968992248},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.01509433962264151},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.025423728813559324},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.015503875968992248},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.039603960396039604}}}}}}},"s":{"docs":{},")":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}},".":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}},",":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}},".":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.01694915254237288},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}},":":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":1.675213675213675},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":1.4401993355481726},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":1.4401993355481726}},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}},"s":{"docs":{},",":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}},".":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},")":{"docs":{},".":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}}}}}}},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}},"p":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.02564102564102564}},".":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.02857142857142857}}},"?":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}},"u":{"1":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.022556390977443608}},"=":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"1":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}},"docs":{}}}}}},"2":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405}},"=":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"2":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}},"docs":{}}}}}},"docs":{},"=":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"2":{"docs":{},";":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}},"docs":{}}}}}},"d":{"docs":{},"o":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}}}}}}}}}},";":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}},"m":{"docs":{},"p":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}}}}}}}}}}},"t":{"docs":{},"q":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}}}}}}}}},";":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}},")":{"docs":{},"{":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}},"=":{"1":{"docs":{},";":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}},"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}},"d":{"docs":{},"i":{"docs":{},",":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}},"s":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}}}}},"docs":{}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}},"q":{"1":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}},"docs":{}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}},"+":{"docs":{},"=":{"2":{"docs":{},";":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}},"docs":{},"s":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}}}}},"docs":{}}}}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}},"(":{"1":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}},"docs":{}}},"docs":{}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"+":{"docs":{},"=":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}},"(":{"docs":{},"n":{"docs":{},",":{"docs":{},"'":{"docs":{},".":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}}}}},")":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}},",":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.02127659574468085},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}},"=":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},";":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}},"q":{"docs":{},"=":{"docs":{},"q":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}}}}}}}}}}}},".":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"s":{"docs":{},"o":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}}}}}}}},"u":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}},">":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}}}}}}}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":3.359420289855072},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":2.517699115044248},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":1.684738955823293},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":2.036144578313253}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}},".":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}}}}}},"p":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},":":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}},"要":{"docs":{},"求":{"docs":{},"能":{"docs":{},"不":{"docs":{},"能":{"docs":{},"不":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"结":{"docs":{},"题":{"docs":{},"。":{"docs":{},"于":{"docs":{},"是":{"docs":{},"又":{"docs":{},"开":{"docs":{},"始":{"docs":{},"想":{"docs":{},"如":{"docs":{},"何":{"docs":{},"不":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"中":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"和":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"很":{"docs":{},"像":{"docs":{},"，":{"docs":{},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"也":{"docs":{},"很":{"docs":{},"适":{"docs":{},"合":{"docs":{},"存":{"docs":{},"储":{"docs":{},"数":{"docs":{},"字":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"位":{"docs":{},"。":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}},"s":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.03773584905660377},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}},"d":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385}}}}}}}}}}}},";":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135}},"u":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.02040816326530612},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.02072538860103627},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}},"e":{"docs":{},".":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}},"s":{"docs":{},".":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}},"i":{"docs":{},"d":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":3.351190476190476},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":2.5344827586206895},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":3.3588110403397025},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":2.0136054421768708},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},".":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.017857142857142856},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}}}}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}},";":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}},")":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135}},";":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}},",":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.020202020202020204},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.02702702702702703},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.022222222222222223},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.0297029702970297},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.018018018018018018},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.04285714285714286},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.045454545454545456},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.031746031746031744},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.024096385542168676},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.011320754716981131},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},">":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.02},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.09090909090909091},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.03333333333333333},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0273972602739726},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.031746031746031744},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.039473684210526314},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.027777777777777776},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.027777777777777776},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.034482758620689655},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.015503875968992248},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.01509433962264151},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.02666666666666667}}},"(":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}}}}}}},"docs":{}}}}}}}}}}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}},"&":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.01694915254237288},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}},"docs":{}}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}},"docs":{}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"q":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}}}},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"=":{"docs":{},"t":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.022222222222222223},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}}}},"{":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.030612244897959183},"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.016666666666666666},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.019801980198019802},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.02531645569620253},"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.023809523809523808},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.02564102564102564},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.029411764705882353},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.02},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.07407407407407407},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.020202020202020204},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.09090909090909091},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.023809523809523808},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.017857142857142856},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.02830188679245283},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.02702702702702703},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.023622047244094488},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.03333333333333333},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.015544041450777202},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.01818181818181818},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.02247191011235955},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.03676470588235294},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.034482758620689655},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.022727272727272728},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.07692307692307693},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.03184713375796178},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.06172839506172839},"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.03225806451612903},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.025974025974025976},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.02631578947368421},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.03333333333333333},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0547945205479452},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.031746031746031744},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.025},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.025},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.02702702702702703},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.025},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.02631578947368421},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.015789473684210527},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.017699115044247787},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.031746031746031744},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.025974025974025976},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.01904761904761905},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.028169014084507043},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.018867924528301886},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.02127659574468085},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.027777777777777776},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.027777777777777776},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.025974025974025976},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.021052631578947368},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.026785714285714284},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.030303030303030304},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.025974025974025976},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.02857142857142857},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.022556390977443608},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.021505376344086023},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.034482758620689655},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.021505376344086023},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.024},"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.045454545454545456},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.042328042328042326},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.018072289156626505},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.024096385542168676},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.02702702702702703},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.02040816326530612},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.018867924528301886},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.022222222222222223},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.022222222222222223},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.023255813953488372},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.022641509433962263},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.029411764705882353},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.025423728813559324},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.023255813953488372},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.021739130434782608},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.021739130434782608},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.022727272727272728},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.02054794520547945},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.02459016393442623},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.02666666666666667},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.02564102564102564},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.021739130434782608},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.020618556701030927},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.010869565217391304}},"}":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.018018018018018018},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},";":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"}":{"docs":{},";":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"首":{"docs":{},"先":{"docs":{},"在":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"中":{"docs":{},"对":{"docs":{},"比":{"docs":{},"以":{"docs":{},"下":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"之":{"docs":{},"后":{"docs":{},"很":{"docs":{},"多":{"docs":{},"能":{"docs":{},"一":{"docs":{},"次":{"docs":{},"便":{"docs":{},"利":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"解":{"docs":{},"答":{"docs":{},"里":{"docs":{},"都":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"保":{"docs":{},"存":{"docs":{},"前":{"docs":{},"面":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"状":{"docs":{},"态":{"docs":{},"再":{"docs":{},"来":{"docs":{},"对":{"docs":{},"比":{"docs":{},"。":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"提":{"docs":{},"到":{"docs":{},"了":{"docs":{},"，":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"题":{"docs":{},"并":{"docs":{},"且":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"首":{"docs":{},"先":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"能":{"docs":{},"否":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"题":{"docs":{},"。":{"docs":{},"这":{"docs":{},"题":{"docs":{},"正":{"docs":{},"好":{"docs":{},"可":{"docs":{},"以":{"docs":{},"。":{"docs":{},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"链":{"docs":{},"表":{"docs":{},"加":{"docs":{},"法":{"docs":{},"很":{"docs":{},"相":{"docs":{},"似":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"还":{"docs":{},"简":{"docs":{},"单":{"docs":{},"一":{"docs":{},"点":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"又":{"docs":{},"题":{"docs":{},"目":{"docs":{},"做":{"docs":{},"过":{"docs":{},"合":{"docs":{},"并":{"docs":{},"两":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"k":{"docs":{},"个":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"借":{"docs":{},"助":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"两":{"docs":{},"两":{"docs":{},"合":{"docs":{},"并":{"docs":{},"，":{"docs":{},"合":{"docs":{},"并":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"。":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"来":{"docs":{},"做":{"docs":{},"。":{"docs":{},"用":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"从":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"取":{"docs":{},"出":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"重":{"docs":{},"新":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"。":{"docs":{},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"中":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"自":{"docs":{},"带":{"docs":{},"的":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"类":{"docs":{},"算":{"docs":{},"法":{"docs":{},"做":{"docs":{},"这":{"docs":{},"题":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"优":{"docs":{},"先":{"docs":{},"队":{"docs":{},"列":{"docs":{},"来":{"docs":{},"做":{"docs":{},"这":{"docs":{},"题":{"docs":{},"。":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"一":{"docs":{},"直":{"docs":{},"搞":{"docs":{},"不":{"docs":{},"清":{"docs":{},"这":{"docs":{},"几":{"docs":{},"个":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"本":{"docs":{},"质":{"docs":{},"区":{"docs":{},"别":{"docs":{},"和":{"docs":{},"如":{"docs":{},"何":{"docs":{},"去":{"docs":{},"写":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"我":{"docs":{},"总":{"docs":{},"结":{"docs":{},"出":{"docs":{},"了":{"docs":{},"规":{"docs":{},"律":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"，":{"docs":{},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"在":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},">":{"docs":{},"=":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"将":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"次":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"就":{"docs":{},"会":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"。":{"docs":{},"左":{"docs":{},"开":{"docs":{},"右":{"docs":{},"闭":{"docs":{},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"当":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"差":{"1":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"等":{"docs":{},"于":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"最":{"docs":{},"后":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"会":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},"。":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"会":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"处":{"docs":{},"重":{"docs":{},"合":{"docs":{},"。":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"每":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"运":{"docs":{},"行":{"docs":{},"n":{"docs":{},"次":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"平":{"docs":{},"方":{"docs":{},")":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"做":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"我":{"docs":{},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"如":{"docs":{},"何":{"docs":{},"去":{"docs":{},"计":{"docs":{},"算":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"开":{"docs":{},"根":{"docs":{},"号":{"docs":{},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"看":{"docs":{},"了":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"了":{"docs":{},"解":{"docs":{},"到":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{},"（":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"很":{"docs":{},"多":{"docs":{},"题":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"范":{"docs":{},"围":{"docs":{},"中":{"docs":{},"找":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"可":{"docs":{},"以":{"docs":{},"找":{"docs":{},"到":{"docs":{},"排":{"docs":{},"除":{"docs":{},"一":{"docs":{},"半":{"docs":{},"数":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"条":{"docs":{},"件":{"docs":{},"很":{"docs":{},"难":{"docs":{},"找":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"体":{"docs":{},"会":{"docs":{},"）":{"docs":{},"。":{"docs":{},"我":{"docs":{},"记":{"docs":{},"得":{"docs":{},"我":{"docs":{},"前":{"docs":{},"几":{"docs":{},"周":{"docs":{},"做":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"也":{"docs":{},"是":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"当":{"docs":{},"时":{"docs":{},"做":{"docs":{},"出":{"docs":{},"来":{"docs":{},"之":{"docs":{},"后":{"docs":{},"很":{"docs":{},"惊":{"docs":{},"讶":{"docs":{},"。":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"目":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"我":{"docs":{},"首":{"docs":{},"先":{"docs":{},"在":{"docs":{},"行":{"docs":{},"上":{"docs":{},"做":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"列":{"docs":{},"上":{"docs":{},"在":{"docs":{},"来":{"docs":{},"一":{"docs":{},"次":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"慢":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"其":{"docs":{},"实":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"目":{"docs":{},"就":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"种":{"docs":{},"二":{"docs":{},"维":{"docs":{},"的":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"是":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"次":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"能":{"docs":{},"排":{"docs":{},"除":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"想":{"docs":{},"这":{"docs":{},"题":{"docs":{},"，":{"docs":{},"没":{"docs":{},"看":{"docs":{},"清":{"docs":{},"是":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"导":{"docs":{},"致":{"docs":{},"分":{"docs":{},"析":{"docs":{},"了":{"docs":{},"很":{"docs":{},"久":{"docs":{},"也":{"docs":{},"没":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"知":{"docs":{},"道":{"docs":{},"是":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"很":{"docs":{},"好":{"docs":{},"办":{"docs":{},"了":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"保":{"docs":{},"存":{"docs":{},"数":{"docs":{},"字":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"保":{"docs":{},"存":{"3":{"docs":{},"个":{"docs":{},"以":{"docs":{},"上":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"查":{"docs":{},"看":{"docs":{},"链":{"docs":{},"表":{"docs":{},"后":{"docs":{},"面":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"值":{"docs":{},"，":{"docs":{},"有":{"docs":{},"的":{"docs":{},"话":{"docs":{},"直":{"docs":{},"接":{"docs":{},"加":{"docs":{},"一":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"，":{"docs":{},"就":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"后":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"和":{"docs":{},"这":{"docs":{},"个":{"docs":{},"组":{"docs":{},"合":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"加":{"docs":{},"入":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"能":{"docs":{},"进":{"docs":{},"行":{"docs":{},"上":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"这":{"docs":{},"里":{"docs":{},"有":{"docs":{},"问":{"docs":{},"题":{"docs":{"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"使":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"解":{"docs":{},"答":{"docs":{},"。":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"中":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"。":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"中":{"docs":{},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"和":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"，":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"底":{"docs":{},"层":{"docs":{},"是":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"，":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"底":{"docs":{},"层":{"docs":{},"是":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"。":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"得":{"docs":{},"到":{"docs":{},"解":{"docs":{},"答":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"保":{"docs":{},"存":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"做":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"了":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"看":{"docs":{},"到":{"docs":{},"题":{"docs":{},"目":{"docs":{},"就":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"应":{"docs":{},"该":{"docs":{},"用":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"做":{"docs":{},"。":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"让":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"先":{"docs":{},"走":{"docs":{},"，":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"每":{"docs":{},"走":{"docs":{},"一":{"docs":{},"步":{"docs":{},"记":{"docs":{},"录":{"docs":{},"走":{"docs":{},"过":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"出":{"docs":{},"现":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"走":{"docs":{},"过":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"之":{"docs":{},"前":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"就":{"docs":{},"让":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"走":{"docs":{},"。":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"每":{"docs":{},"走":{"docs":{},"一":{"docs":{},"步":{"docs":{},"，":{"docs":{},"擦":{"docs":{},"除":{"docs":{},"一":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"擦":{"docs":{},"出":{"docs":{},"的":{"docs":{},"刚":{"docs":{},"好":{"docs":{},"是":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"停":{"docs":{},"止":{"docs":{},"，":{"docs":{},"又":{"docs":{},"轮":{"docs":{},"到":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"走":{"docs":{},"。":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"每":{"docs":{},"走":{"docs":{},"一":{"docs":{},"步":{"docs":{},"计":{"docs":{},"算":{"docs":{},"一":{"docs":{},"次":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"之":{"docs":{},"差":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"差":{"docs":{},"值":{"docs":{},"就":{"docs":{},"行":{"docs":{},"。":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"做":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"的":{"docs":{},"解":{"docs":{},"答":{"docs":{},"有":{"docs":{},"可":{"docs":{},"以":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"。":{"docs":{},"在":{"docs":{},"外":{"docs":{},"层":{"docs":{},"循":{"docs":{},"环":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"大":{"docs":{},"于":{"0":{"docs":{},"的":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"了":{"docs":{},"。":{"docs":{},"时":{"docs":{},"间":{"docs":{},"从":{"9":{"6":{"docs":{},"m":{"docs":{},"s":{"docs":{},"提":{"docs":{},"升":{"docs":{},"到":{"docs":{},"了":{"8":{"8":{"docs":{},"m":{"docs":{},"s":{"docs":{},"。":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"题":{"docs":{},"真":{"docs":{},"的":{"docs":{},"就":{"docs":{},"很":{"docs":{},"有":{"docs":{},"经":{"docs":{},"验":{"docs":{},"了":{"docs":{},"，":{"docs":{},"看":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"题":{"docs":{},"并":{"docs":{},"且":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"直":{"docs":{},"接":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{},"这":{"docs":{},"题":{"docs":{},"不":{"docs":{},"递":{"docs":{},"归":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"也":{"docs":{},"能":{"docs":{},"做":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"难":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"递":{"docs":{},"归":{"docs":{},"能":{"docs":{},"省":{"docs":{},"好":{"docs":{},"多":{"docs":{},"事":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"加":{"docs":{},"比":{"docs":{},"赛":{"docs":{},"了":{"docs":{},"，":{"docs":{},"当":{"docs":{},"时":{"docs":{},"又":{"docs":{},"止":{"docs":{},"步":{"docs":{},"在":{"docs":{},"第":{"docs":{},"三":{"docs":{},"题":{"docs":{},"。":{"docs":{},"第":{"docs":{},"三":{"docs":{},"题":{"docs":{},"当":{"docs":{},"时":{"docs":{},"其":{"docs":{},"实":{"docs":{},"想":{"docs":{},"到":{"docs":{},"用":{"docs":{},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"没":{"docs":{},"有":{"docs":{},"想":{"docs":{},"通":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{},"于":{"docs":{},"是":{"docs":{},"之":{"docs":{},"后":{"docs":{},"参":{"docs":{},"考":{"docs":{},"了":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"里":{"docs":{},"大":{"docs":{},"神":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"自":{"docs":{},"己":{"docs":{},"写":{"docs":{},"出":{"docs":{},"代":{"docs":{},"码":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"先":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"使":{"docs":{},"用":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"逼":{"docs":{},"近":{"docs":{},"，":{"docs":{},"求":{"docs":{},"得":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"是":{"docs":{},"之":{"docs":{},"后":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"没":{"docs":{},"有":{"docs":{},"给":{"docs":{},"出":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"算":{"docs":{},"法":{"docs":{},"思":{"docs":{},"想":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"排":{"docs":{},"序":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"排":{"docs":{},"序":{"docs":{},"最":{"docs":{},"快":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"便":{"docs":{},"利":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"做":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}},"这":{"docs":{},"题":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"3":{"docs":{},"种":{"docs":{},"解":{"docs":{},"法":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"刚":{"docs":{},"接":{"docs":{},"触":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"，":{"docs":{},"最":{"docs":{},"开":{"docs":{},"始":{"docs":{},"想":{"docs":{},"到":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"便":{"docs":{},"利":{"docs":{},"求":{"docs":{},"解":{"docs":{},"。":{"docs":{"1.-two-sum.html":{"ref":"1.-two-sum.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"我":{"docs":{},"们":{"docs":{},"也":{"docs":{},"定":{"docs":{},"义":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"计":{"docs":{},"算":{"docs":{},"容":{"docs":{},"量":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"取":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"如":{"docs":{},"何":{"docs":{},"移":{"docs":{},"动":{"docs":{},"。":{"docs":{},"哪":{"docs":{},"边":{"docs":{},"的":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"更":{"docs":{},"小":{"docs":{},"我":{"docs":{},"就":{"docs":{},"移":{"docs":{},"动":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"移":{"docs":{},"动":{"docs":{},"必":{"docs":{},"定":{"docs":{},"导":{"docs":{},"致":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"减":{"docs":{},"小":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"靠":{"docs":{},"高":{"docs":{},"度":{"docs":{},"增":{"docs":{},"高":{"docs":{},"，":{"docs":{},"才":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"提":{"docs":{},"高":{"docs":{},"总":{"docs":{},"容":{"docs":{},"量":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"样":{"docs":{},"移":{"docs":{},"动":{"docs":{},"不":{"docs":{},"会":{"docs":{},"漏":{"docs":{},"掉":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"1":{"5":{"docs":{},"题":{"docs":{},"算":{"docs":{},"法":{"docs":{},"基":{"docs":{},"本":{"docs":{},"一":{"docs":{},"模":{"docs":{},"一":{"docs":{},"样":{"docs":{"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456}},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"判":{"docs":{},"断":{"docs":{},"相":{"docs":{},"等":{"docs":{},"改":{"docs":{},"成":{"docs":{},"的":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"相":{"docs":{},"近":{"docs":{},"的":{"docs":{},"，":{"docs":{"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"就":{"docs":{},"是":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"区":{"docs":{},"别":{"docs":{},"对":{"docs":{},"算":{"docs":{},"法":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{},"两":{"docs":{},"个":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"还":{"docs":{},"是":{"docs":{},"用":{"docs":{},"上":{"docs":{},"题":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"，":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"多":{"docs":{},"一":{"docs":{},"倍":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"就":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"找":{"docs":{},"到":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"规":{"docs":{},"避":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"在":{"docs":{},"机":{"docs":{},"器":{"docs":{},"人":{"docs":{},"的":{"docs":{},"行":{"docs":{},"动":{"docs":{},"路":{"docs":{},"上":{"docs":{},"放":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"障":{"docs":{},"碍":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"和":{"docs":{},"上":{"docs":{},"题":{"docs":{},"做":{"docs":{},"法":{"docs":{},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{},"，":{"docs":{},"当":{"docs":{},"当":{"docs":{},"前":{"docs":{},"走":{"docs":{},"到":{"docs":{},"障":{"docs":{},"碍":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"赋":{"docs":{},"值":{"0":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"是":{"docs":{},"，":{"docs":{},"既":{"docs":{},"可":{"docs":{},"以":{"docs":{},"代":{"docs":{},"表":{"docs":{},"这":{"docs":{},"里":{"docs":{},"没":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"案":{"docs":{},"可":{"docs":{},"以":{"docs":{},"走":{"docs":{},"到":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"他":{"docs":{},"右":{"docs":{},"边":{"docs":{},"和":{"docs":{},"下":{"docs":{},"面":{"docs":{},"得":{"docs":{},"到":{"docs":{},"总":{"docs":{},"线":{"docs":{},"路":{"docs":{},"时":{"docs":{},"，":{"docs":{},"加":{"docs":{},"上":{"docs":{},"的":{"docs":{},"是":{"0":{"docs":{},"。":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"实":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"发":{"docs":{},"就":{"docs":{},"能":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"单":{"docs":{},"纯":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"太":{"docs":{},"慢":{"docs":{},"了":{"docs":{},"，":{"docs":{},"历":{"docs":{},"史":{"docs":{},"上":{"docs":{},"也":{"docs":{},"有":{"docs":{},"几":{"docs":{},"位":{"docs":{},"大":{"docs":{},"佬":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"很":{"docs":{},"慢":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"确":{"docs":{},"实":{"docs":{},"有":{"docs":{},"可":{"docs":{},"以":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"人":{"docs":{},"来":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"成":{"docs":{},"功":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"次":{"docs":{},"之":{"docs":{},"后":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"失":{"docs":{},"败":{"docs":{},"了":{"docs":{},"，":{"docs":{},"他":{"docs":{},"不":{"docs":{},"会":{"docs":{},"前":{"docs":{},"进":{"docs":{},"一":{"docs":{},"位":{"docs":{},"重":{"docs":{},"新":{"docs":{},"来":{"docs":{},"。":{"docs":{},"而":{"docs":{},"是":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"已":{"docs":{},"知":{"docs":{},"的":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"很":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"很":{"docs":{},"像":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"还":{"docs":{},"简":{"docs":{},"单":{"docs":{},"一":{"docs":{},"点":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"中":{"docs":{},"间":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"借":{"docs":{},"鉴":{"docs":{},"前":{"docs":{},"面":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"题":{"docs":{},"目":{"docs":{},"的":{"docs":{},"解":{"docs":{},"答":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"?":{"docs":{},"其":{"docs":{},"实":{"docs":{},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},".":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"*":{"docs":{},"比":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"*":{"docs":{},"更":{"docs":{},"加":{"docs":{},"加":{"docs":{},"单":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"上":{"docs":{},"题":{"docs":{},"的":{"docs":{},"简":{"docs":{},"化":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"数":{"docs":{},"量":{"docs":{},"即":{"docs":{},"可":{"docs":{"52.-n-queens-ii.html":{"ref":"52.-n-queens-ii.html","tf":0.2}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"，":{"docs":{},"从":{"docs":{},"左":{"docs":{},"上":{"docs":{},"角":{"docs":{},"或":{"docs":{},"者":{"docs":{},"右":{"docs":{},"下":{"docs":{},"角":{"docs":{},"开":{"docs":{},"始":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"思":{"docs":{},"考":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"从":{"docs":{},"这":{"docs":{},"里":{"docs":{},"出":{"docs":{},"发":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"一":{"docs":{},"步":{"docs":{},"步":{"docs":{},"和":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"逼":{"docs":{},"近":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"目":{"docs":{},"其":{"docs":{},"实":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"样":{"docs":{},"都":{"docs":{},"能":{"docs":{},"做":{"docs":{},"得":{"docs":{},"出":{"docs":{},"。":{"docs":{},"只":{"docs":{},"是":{"docs":{},"有":{"docs":{},"些":{"docs":{},"人":{"docs":{},"做":{"docs":{},"的":{"docs":{},"简":{"docs":{},"单":{"docs":{},"有":{"docs":{},"些":{"docs":{},"人":{"docs":{},"做":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"用":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"不":{"docs":{},"好":{"docs":{},"分":{"docs":{},"析":{"docs":{},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"假":{"docs":{},"设":{"docs":{},"有":{"docs":{},"k":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"大":{"docs":{},"小":{"docs":{},"都":{"docs":{},"是":{"docs":{},"n":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"建":{"docs":{},"堆":{"docs":{},"需":{"docs":{},"要":{"docs":{},"o":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"(":{"docs":{},"我":{"docs":{},"这":{"docs":{},"题":{"docs":{},"不":{"docs":{},"是":{"docs":{},"交":{"docs":{},"换":{"docs":{},"建":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"个":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},")":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"拿":{"docs":{},"出":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"g":{"docs":{},"k":{"docs":{},")":{"docs":{},"，":{"docs":{},"再":{"docs":{},"插":{"docs":{},"入":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"g":{"docs":{},"k":{"docs":{},")":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"n":{"docs":{},"*":{"docs":{},"k":{"docs":{},"次":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"+":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"g":{"docs":{},"k":{"docs":{},")":{"docs":{},"*":{"docs":{},"n":{"docs":{},"*":{"docs":{},"k":{"docs":{},",":{"docs":{},"所":{"docs":{},"以":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"k":{"docs":{},"l":{"docs":{},"g":{"docs":{},"k":{"docs":{},")":{"docs":{},".":{"docs":{},"当":{"docs":{},"然":{"docs":{},"这":{"docs":{},"只":{"docs":{},"是":{"docs":{},"大":{"docs":{},"致":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"题":{"docs":{},"目":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"难":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"限":{"docs":{},"制":{"docs":{},"了":{"docs":{},"我":{"docs":{},"们":{"docs":{},"，":{"docs":{},"希":{"docs":{},"望":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"d":{"docs":{},"o":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"好":{"docs":{},"分":{"docs":{},"析":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"中":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"间":{"docs":{},"也":{"docs":{},"很":{"docs":{},"快":{"docs":{},"了":{"docs":{},"，":{"docs":{},"贴":{"docs":{},"个":{"docs":{},"图":{"docs":{},"。":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"是":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"解":{"docs":{},"决":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"上":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"摆":{"docs":{},"放":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"于":{"docs":{},"后":{"docs":{},"面":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"调":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"我":{"docs":{},"们":{"docs":{},"如":{"docs":{},"何":{"docs":{},"找":{"docs":{},"到":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"我":{"docs":{},"们":{"docs":{},"给":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"摆":{"docs":{},"放":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"替":{"docs":{},"换":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"替":{"docs":{},"换":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"和":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"替":{"docs":{},"换":{"docs":{},"，":{"docs":{},"查":{"docs":{},"看":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"能":{"docs":{},"解":{"docs":{},"决":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"两":{"docs":{},"次":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"了":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"这":{"docs":{},"里":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"和":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"区":{"docs":{},"别":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"。":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"我":{"docs":{},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"太":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"，":{"docs":{},"查":{"docs":{},"了":{"docs":{},"资":{"docs":{},"料":{"docs":{},"，":{"docs":{},"网":{"docs":{},"上":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"说":{"docs":{},"法":{"docs":{},"，":{"docs":{},"我":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"docs":{},"n":{"docs":{},")":{"docs":{},"和":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"!":{"docs":{},")":{"docs":{},"都":{"docs":{},"有":{"docs":{},"道":{"docs":{},"理":{"docs":{},"。":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"说":{"docs":{},"一":{"docs":{},"下":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"如":{"docs":{},"何":{"docs":{},"理":{"docs":{},"解":{"docs":{},"。":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"比":{"docs":{},"两":{"docs":{},"个":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"更":{"docs":{},"快":{"docs":{},"，":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},"+":{"docs":{},"l":{"docs":{},"g":{"docs":{},"m":{"docs":{},")":{"docs":{},",":{"docs":{},"这":{"docs":{},"里":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"+":{"docs":{},"n":{"docs":{},")":{"docs":{},"；":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"，":{"docs":{},"存":{"docs":{},"储":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"前":{"docs":{},"一":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"后":{"docs":{},"指":{"docs":{},"针":{"docs":{},"走":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"将":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"中":{"docs":{},"字":{"docs":{},"符":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"减":{"docs":{},"一":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"减":{"docs":{},"一":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"（":{"docs":{},"能":{"docs":{},"在":{"docs":{},"t":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"体":{"docs":{},"现":{"docs":{},"）":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"将":{"docs":{},"之":{"docs":{},"前":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"减":{"docs":{},"一":{"docs":{},"(":{"docs":{},"s":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"递":{"docs":{},"归":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"还":{"docs":{},"不":{"docs":{},"会":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"解":{"docs":{},"决":{"docs":{},"之":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"会":{"docs":{},"太":{"docs":{},"慢":{"docs":{},"的":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"。":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"种":{"docs":{},"表":{"docs":{},"示":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"种":{"docs":{},"就":{"docs":{},"行":{"docs":{},"，":{"docs":{},"那":{"docs":{},"当":{"docs":{},"然":{"docs":{},"是":{"docs":{},"生":{"docs":{},"成":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"中":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"对":{"docs":{},"分":{"docs":{},"。":{"docs":{},"直":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"最":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"是":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"题":{"docs":{},"目":{"docs":{},"有":{"docs":{},"点":{"docs":{},"描":{"docs":{},"述":{"docs":{},"不":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"只":{"docs":{},"有":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"可":{"docs":{},"以":{"docs":{},"连":{"docs":{},"接":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"加":{"docs":{},"上":{"docs":{},"子":{"docs":{},"树":{"docs":{},"上":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"中":{"docs":{},"间":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"只":{"docs":{},"能":{"docs":{},"连":{"docs":{},"接":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"或":{"docs":{},"者":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"当":{"docs":{},"然":{"docs":{},"是":{"docs":{},"选":{"docs":{},"择":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"题":{"docs":{},"目":{"docs":{},"，":{"docs":{},"无":{"docs":{},"论":{"docs":{},"你":{"docs":{},"算":{"docs":{},"法":{"docs":{},"多":{"docs":{},"么":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"都":{"docs":{},"会":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"被":{"docs":{},"限":{"docs":{},"制":{"docs":{},"到":{"docs":{},"了":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"有":{"docs":{},"很":{"docs":{},"大":{"docs":{},"提":{"docs":{},"升":{"docs":{},"。":{"docs":{"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"0":{"docs":{},",":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385}}}},"1":{"2":{"docs":{},")":{"docs":{},".":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}},"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}},",":{"1":{"docs":{},")":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}},"docs":{}}},"2":{"2":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}},"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.021505376344086023}},",":{"2":{"docs":{},")":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}},"docs":{}}},"5":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}},"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}},"*":{"docs":{},")":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}},".":{"docs":{},")":{"docs":{},"\"":{"docs":{},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}},"l":{"docs":{},"]":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}}}}}},"p":{"docs":{},")":{"docs":{},",":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.03488372093023256},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.03488372093023256}}}}}}},"s":{"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{},")":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}}},"i":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}},",":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.038461538461538464}}},".":{"docs":{},"e":{"docs":{},".":{"docs":{},",":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}},"n":{"docs":{},"t":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}}},"e":{"docs":{},",":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}},"k":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}}}}}}},"!":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}}}}}}},"h":{"docs":{},"e":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}},"docs":{}}},"docs":{}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}}}}}},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}},".":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}}},"x":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}}}},"m":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.017699115044247787}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.023255813953488372}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.031007751937984496}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{},",":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},")":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}},"b":{"docs":{},")":{"docs":{},".":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}}}},"b":{"docs":{},",":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{},")":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"=":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}},"u":{"docs":{},"p":{"docs":{},")":{"docs":{},",":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}},">":{"0":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.021052631578947368}}},"1":{"1":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}},"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.042105263157894736},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204}}},"2":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.03684210526315789},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.026785714285714284},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.04040404040404041},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.022556390977443608},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}},",":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}},"3":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.015748031496062992},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.021052631578947368},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.03571428571428571},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.030303030303030304},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016}},".":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112}}}},"4":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.02830188679245283},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.023622047244094488},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}},",":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112}}}},"5":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.015789473684210527},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016}},",":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}},".":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}}}},"6":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.015748031496062992}}},"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.05},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.01910828025477707},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.037037037037037035},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.05217391304347826},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.05309734513274336},"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.06201550387596899},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.03225806451612903}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405}},",":{"docs":{},"(":{"docs":{},"l":{"1":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}},"docs":{}}},"l":{"2":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}},")":{"docs":{},";":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}}}}},"docs":{}}},"=":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"1":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}},"docs":{}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},";":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"1":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}},",":{"docs":{},"l":{"2":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}},"e":{"docs":{},";":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}}},"p":{"docs":{},"r":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}},"o":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}}}}}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"1":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405}}},"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}}}},")":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}},"{":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}},";":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112}}}},";":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.03968253968253968},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.015748031496062992},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.021052631578947368},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.045112781954887216},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.048}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.042105263157894736},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}},",":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"+":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},")":{"docs":{},"%":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}},"docs":{}},"docs":{}},"/":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}},"docs":{}},"docs":{}}}}}},"l":{"2":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.016666666666666666}}},"docs":{},"+":{"docs":{},"r":{"docs":{},";":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"l":{"docs":{},",":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},"{":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}}}},";":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}},";":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}},">":{"docs":{},"l":{"2":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}},"docs":{}},"=":{"docs":{},"x":{"docs":{},")":{"docs":{},"{":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259}}}}}}},")":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}},"{":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.021164021164021163},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863}}},")":{"docs":{},"{":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}}}}},"q":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},";":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}},"!":{"docs":{},"=":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863}}}}}}}}}},"=":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.011320754716981131}},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.022222222222222223},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.011320754716981131},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}},"&":{"docs":{},"&":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}}},",":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745}}}}}}}}}}}}}}}},"{":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.015873015873015872},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},"{":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}},";":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}},"&":{"docs":{},"&":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},";":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"m":{"docs":{},"a":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"q":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"!":{"docs":{},"=":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},"{":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}},"&":{"docs":{},"&":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}},")":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.011320754716981131}},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.022222222222222223},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.011320754716981131},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}},")":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745}}}},"docs":{}}},"{":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.026455026455026454},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.02459016393442623}}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},"{":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}},"&":{"docs":{},"&":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082}},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}},"i":{"docs":{},";":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"1":{"docs":{},"+":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{},"m":{"docs":{},"a":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},",":{"docs":{},"q":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"=":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},";":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}},"l":{"1":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}},",":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}}}}}},";":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886}}},"=":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}}},"2":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}},";":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886}}},"=":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}},")":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}},"{":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}},"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}},"v":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428}}},"f":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.0196078431372549},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.022727272727272728},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863}}}},"f":{"docs":{},"t":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.019801980198019802}},")":{"docs":{},";":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}},"=":{"0":{"docs":{},",":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}},";":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}},",":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},";":{"docs":{"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364}}}}}}},"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}}}}}},"i":{"docs":{},";":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}},"docs":{}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}},"docs":{}}}}},"=":{"docs":{},"x":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"?":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{},"i":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}},";":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.02531645569620253},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464}}},",":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}}}}}}}},".":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"=":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},",":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"docs":{},"!":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}}}},"h":{"docs":{},"=":{"docs":{},"i":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}},"n":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.039603960396039604},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.015544041450777202},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.022727272727272728},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.017045454545454544},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.02072538860103627},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.017045454545454544}}},"=":{"docs":{},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"?":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},":":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}},",":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":2.0303030303030303},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.01910828025477707},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}},")":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}}}}}},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},"{":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":1.697674418604651},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":1.4436657681940699},"107.-binary-tree-level-order-traversal-ii.html":{"ref":"107.-binary-tree-level-order-traversal-ii.html","tf":1.5535714285714284}},")":{"docs":{},".":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.016666666666666666},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.031746031746031744},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.015748031496062992},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.022222222222222223},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":2.024},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":1.6830601092896174}}},"e":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.02564102564102564}},":":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}},"s":{"docs":{},",":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}},"s":{"docs":{},"t":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":1.6904761904761902},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":2.0283018867924527},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":2.015748031496063},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":3.3438596491228068},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":1.675595238095238},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":2.01010101010101},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":3.3483709273182956},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":2.016},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":1.6830601092896174}},".":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.015748031496062992},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.015748031496062992},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.022222222222222223},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016}},"e":{"docs":{},"(":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}},"(":{"docs":{},"l":{"1":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}},"docs":{}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.016666666666666666}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}},"*":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.025},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.023809523809523808},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.031496062992125984},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.021052631578947368},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.03007518796992481},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.04}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"=":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112}}}}}}}}}}}}}}},",":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}},":":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}}}},"s":{"docs":{},".":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}}},")":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}},"'":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"'":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}}}},"k":{"docs":{},"e":{"docs":{},":":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.0449438202247191},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.043478260869565216}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":1.6864686468646863},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":2.5253164556962027},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":2.5294117647058822},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":2.5344827586206895},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714}},"e":{"docs":{},".":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}},")":{"docs":{},">":{"docs":{},">":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}},"docs":{}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}}},"o":{"docs":{},"k":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}},"m":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"r":{"docs":{},"b":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"=":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{},"r":{"docs":{},"b":{"docs":{},"=":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.02531645569620253}}}}}}}}}}}}}}}}}},";":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.025},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":2.538961038961039},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}},",":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"s":{"docs":{},"t":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":1.2584745762711864},"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.05263157894736842},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.03409090909090909},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}},"s":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288}}}}}},"=":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288}}}},"docs":{}}}},"a":{"docs":{},"x":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}}}}}}}}},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"&":{"docs":{},"&":{"docs":{},"u":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.015384615384615385}}}}}}}}}}}},";":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}},"z":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":2.5140845070422535}},",":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}},".":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}},"i":{"docs":{},"g":{"docs":{},"z":{"docs":{},"a":{"docs":{},"g":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":3.3499999999999996},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":1.4398921832884095}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}}}}}}}}}}}}}}}}}}}}}},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"分":{"docs":{},"析":{"docs":{},"之":{"docs":{},"后":{"docs":{},"得":{"docs":{},"知":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"来":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{},"参":{"docs":{},"差":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"本":{"docs":{},"来":{"docs":{},"是":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"就":{"docs":{},"行":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"变":{"docs":{},"量":{"docs":{},"指":{"docs":{},"定":{"docs":{},"现":{"docs":{},"在":{"docs":{},"是":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"还":{"docs":{},"是":{"docs":{},"右":{"docs":{},"到":{"docs":{},"左":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"处":{"docs":{},"理":{"docs":{},"方":{"docs":{},"式":{"docs":{},"和":{"docs":{},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"样":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}},"}":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.0297029702970297},"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.06329113924050633},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.04},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.14814814814814814},"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.020202020202020204},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.023809523809523808},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.017857142857142856},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.06756756756756757},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.031496062992125984},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.029411764705882353},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.034482758620689655},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.0423728813559322},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.07692307692307693},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.025477707006369428},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.04938271604938271},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.044444444444444446},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0273972602739726},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.06349206349206349},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.025},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.015789473684210527},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.025974025974025976},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.02631578947368421},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.031914893617021274},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.027777777777777776},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.025974025974025976},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.017045454545454544},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.02857142857142857},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.022556390977443608},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.021505376344086023},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.04597701149425287},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.05291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.04216867469879518},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.02040816326530612},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.025157232704402517},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.014814814814814815},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.014814814814814815},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.03875968992248062},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.03773584905660377},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.01694915254237288},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.015503875968992248},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.014492753623188406},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.028985507246376812},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.015151515151515152},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.03424657534246575},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.040983606557377046},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.04},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.017094017094017096},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.014492753623188406},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.039603960396039604},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.046153846153846156},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},"/":{"docs":{},"/":{"docs":{},"上":{"docs":{},"面":{"docs":{},"是":{"docs":{},"递":{"docs":{},"归":{"docs":{},"基":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}}}}}},";":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.018867924528301886},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.023622047244094488},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.022222222222222223},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414},"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.010526315789473684},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.021164021164021163},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.012048192771084338},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.012578616352201259},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.014814814814814815},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.014814814814814815},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.015503875968992248},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.01509433962264151},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.0196078431372549},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.01694915254237288},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.015503875968992248},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.014492753623188406},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.015151515151515152},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.01639344262295082},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.014492753623188406},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.026785714285714284},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.03076923076923077}},"e":{"docs":{},"{":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.017241379310344827},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.010582010582010581},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}},"时":{"docs":{},"间":{"docs":{},"应":{"docs":{},"该":{"docs":{},"可":{"docs":{},"以":{"docs":{},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"前":{"docs":{},"两":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"其":{"docs":{},"实":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"更":{"docs":{},"快":{"docs":{},"。":{"docs":{},"我":{"docs":{},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"每":{"docs":{},"次":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"调":{"docs":{},"用":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"后":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"导":{"docs":{},"致":{"docs":{},"。":{"docs":{},"于":{"docs":{},"是":{"docs":{},"想":{"docs":{},"了":{"docs":{},"一":{"docs":{},"下":{"docs":{},"能":{"docs":{},"否":{"docs":{},"提":{"docs":{},"前":{"docs":{},"知":{"docs":{},"道":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"。":{"docs":{},"防":{"docs":{},"止":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"分":{"docs":{},"配":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"想":{"docs":{},"到":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"都":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"只":{"docs":{},"有":{"1":{"0":{"docs":{},"位":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"1":{"0":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"足":{"docs":{},"够":{"docs":{},"了":{"docs":{},"。":{"docs":{},"改":{"docs":{},"进":{"docs":{},"了":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"效":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"明":{"docs":{},"显":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"1":{"0":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"内":{"docs":{},"存":{"docs":{},"分":{"docs":{},"配":{"docs":{},"所":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"多":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"之":{"docs":{},"后":{"docs":{},"很":{"docs":{},"多":{"docs":{},"题":{"docs":{},"目":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"能":{"docs":{},"减":{"docs":{},"少":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"或":{"docs":{},"者":{"docs":{},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"加":{"docs":{},"倍":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"提":{"docs":{},"前":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"好":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"很":{"docs":{},"多":{"docs":{},"题":{"docs":{},"目":{"docs":{},"会":{"docs":{},"快":{"docs":{},"很":{"docs":{},"多":{"docs":{},"。":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"3":{"docs":{},"^":{"docs":{},"n":{"docs":{},")":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}},"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"树":{"docs":{},"。":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"是":{"docs":{},"比":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"方":{"docs":{},"法":{"docs":{},"慢":{"docs":{},"一":{"docs":{},"点":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"有":{"docs":{},"时":{"docs":{},"间":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"以":{"docs":{},"下":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"把":{"docs":{},"。":{"docs":{"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"保":{"docs":{},"存":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"之":{"docs":{},"后":{"docs":{},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"只":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"多":{"docs":{},"访":{"docs":{},"问":{"docs":{},"节":{"docs":{},"点":{"docs":{},"两":{"docs":{},"次":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"总":{"docs":{},"次":{"docs":{},"数":{"docs":{},"是":{"2":{"docs":{},"n":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"²":{"docs":{},")":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}}},"和":{"docs":{},"上":{"docs":{},"两":{"docs":{},"题":{"docs":{},"一":{"docs":{},"样":{"docs":{},",":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872}}}}}}}}}}}}}},"是":{"docs":{},"o":{"docs":{},"(":{"2":{"docs":{},"^":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"都":{"docs":{},"能":{"docs":{},"选":{"docs":{},"择":{"docs":{},"是":{"docs":{},"放":{"docs":{},"入":{"docs":{},"或":{"docs":{},"者":{"docs":{},"不":{"docs":{},"放":{"docs":{},"入":{"docs":{},"最":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"树":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"去":{"docs":{},"解":{"docs":{},"题":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"想":{"docs":{},"好":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"归":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"设":{"docs":{},"计":{"docs":{},"好":{"docs":{},"递":{"docs":{},"归":{"docs":{},"基":{"docs":{},"处":{"docs":{},"理":{"docs":{},"结":{"docs":{},"束":{"docs":{},"清":{"docs":{},"况":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"很":{"docs":{},"类":{"docs":{},"似":{"docs":{},"数":{"docs":{},"学":{"docs":{},"归":{"docs":{},"纳":{"docs":{},"法":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"相":{"docs":{},"加":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"将":{"docs":{},"每":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"看":{"docs":{},"成":{"docs":{},"累":{"docs":{},"加":{"docs":{},"器":{"docs":{},"的":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"就":{"docs":{},"行":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"进":{"docs":{},"位":{"docs":{},"。":{"docs":{},"相":{"docs":{},"加":{"docs":{},"得":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"将":{"docs":{},"进":{"docs":{},"位":{"docs":{},"传":{"docs":{},"给":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"会":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"上":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"很":{"docs":{},"多":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"相":{"docs":{},"比":{"docs":{},"于":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"解":{"docs":{},"题":{"docs":{},"会":{"docs":{},"慢":{"docs":{},"一":{"docs":{},"点":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"比":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"更":{"docs":{},"容":{"docs":{},"易":{"docs":{},"写":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"会":{"docs":{},"少":{"docs":{},"很":{"docs":{},"多":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"其":{"docs":{},"实":{"docs":{},"慢":{"docs":{},"不":{"docs":{},"了":{"docs":{},"太":{"docs":{},"多":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"链":{"docs":{},"表":{"docs":{},"题":{"docs":{},"和":{"docs":{},"树":{"docs":{},"题":{"docs":{},"建":{"docs":{},"议":{"docs":{},"先":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"法":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"是":{"docs":{},"双":{"docs":{},"重":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"子":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"步":{"docs":{},"数":{"docs":{},"很":{"docs":{},"大":{"docs":{},"。":{"docs":{},"整":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"4":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"不":{"docs":{},"会":{"docs":{},"很":{"docs":{},"大":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"每":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"就":{"docs":{},"进":{"docs":{},"行":{"3":{"docs":{},"次":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"可":{"docs":{},"以":{"docs":{},"近":{"docs":{},"似":{"docs":{},"看":{"docs":{},"做":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"每":{"docs":{},"次":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"都":{"docs":{},"是":{"docs":{},"乘":{"2":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},".":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"间":{"docs":{},"处":{"docs":{},"理":{"docs":{},"比":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"多":{"docs":{},"很":{"docs":{},"多":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"还":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"排":{"docs":{},"除":{"docs":{},"一":{"docs":{},"半":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"差":{"docs":{},"算":{"docs":{},"法":{"docs":{},"和":{"docs":{},"好":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"次":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"省":{"docs":{},"去":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"多":{"docs":{},"余":{"docs":{},"中":{"docs":{},"间":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"和":{"docs":{},"条":{"docs":{},"件":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"能":{"docs":{},"够":{"docs":{},"提":{"docs":{},"升":{"docs":{},"程":{"docs":{},"序":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"观":{"docs":{},"察":{"docs":{},"知":{"docs":{},"道":{"docs":{},"，":{"docs":{},"题":{"docs":{},"目":{"docs":{},"需":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"相":{"docs":{},"加":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"题":{"docs":{},"以":{"docs":{},"及":{"docs":{},"树":{"docs":{},"类":{"docs":{},"题":{"docs":{},"目":{"docs":{},"，":{"docs":{},"尤":{"docs":{},"其":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"或":{"docs":{},"者":{"docs":{},"树":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"大":{"docs":{},"概":{"docs":{},"律":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"做":{"docs":{},"会":{"docs":{},"简":{"docs":{},"单":{"docs":{},"很":{"docs":{},"多":{"docs":{},"。":{"docs":{"2.-add-two-numbers.html":{"ref":"2.-add-two-numbers.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"全":{"docs":{},"部":{"docs":{},"在":{"docs":{},"右":{"docs":{},"边":{"docs":{},"展":{"docs":{},"平":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"每":{"docs":{},"次":{"docs":{},"将":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"接":{"docs":{},"在":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"最":{"docs":{},"后":{"docs":{},"面":{"docs":{},"，":{"docs":{},"重":{"docs":{},"复":{"docs":{},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"都":{"docs":{},"展":{"docs":{},"平":{"docs":{},"即":{"docs":{},"可":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"1":{"0":{"0":{"docs":{},"\"":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}},"1":{"0":{"1":{"docs":{},"\"":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}},"docs":{},"\"":{"docs":{},",":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}},"1":{"docs":{},"\"":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}},"docs":{}},"docs":{}},"1":{"docs":{},"\"":{"docs":{},",":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}},"2":{"3":{"docs":{},"\"":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}},"docs":{},"\"":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}},"3":{"2":{"docs":{},"\"":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}},"docs":{}},"docs":{},"\"":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}},"2":{"1":{"3":{"docs":{},"\"":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.02666666666666667}}}},"docs":{}},"2":{"6":{"docs":{},"\"":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}},"docs":{}},"3":{"1":{"4":{"docs":{},"\"":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}},"docs":{},"\"":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}},"docs":{},"\"":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}},"5":{"5":{"2":{"5":{"5":{"1":{"1":{"1":{"3":{"5":{"docs":{},"\"":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},".":{"2":{"5":{"5":{"docs":{},".":{"1":{"1":{"1":{"docs":{},".":{"3":{"5":{"docs":{},"\"":{"docs":{},"]":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"3":{"1":{"2":{"docs":{},"\"":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}},"docs":{}},"2":{"1":{"docs":{},"\"":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}},"docs":{}},"docs":{}},"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}},",":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}},"d":{"docs":{},"e":{"docs":{},"\"":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},",":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}},"a":{"docs":{},"\"":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}},"\"":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}},"\"":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714}}},"*":{"docs":{},"\"":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}},"c":{"docs":{},"?":{"docs":{},"b":{"docs":{},"\"":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}}},"a":{"docs":{},"\"":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.012738853503184714}},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}},"b":{"docs":{},"\"":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}},"c":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.02702702702702703}}}}}}},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}},"d":{"docs":{},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"\"":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}}}}}},"c":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"\"":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}}}}}}}}}},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}},"c":{"docs":{},"\"":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}},"f":{"docs":{},"\"":{"docs":{},",":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}},"c":{"docs":{},"d":{"docs":{},"c":{"docs":{},"b":{"docs":{},"\"":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}},"e":{"docs":{},"\"":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}},"d":{"docs":{},"c":{"docs":{},"e":{"docs":{},"b":{"docs":{},"\"":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}},"o":{"docs":{},"b":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}},"\"":{"docs":{},",":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}},"\"":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}},"a":{"docs":{},"\"":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}},"f":{"docs":{},"\"":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}},"a":{"docs":{},"d":{"docs":{},"\"":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}}},"g":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{},"\"":{"docs":{},",":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}}}},"t":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}},"n":{"docs":{},"c":{"docs":{},"\"":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}},"g":{"docs":{},"\"":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}}},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}},"f":{"docs":{},"\"":{"docs":{},",":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}},"z":{"docs":{},"\"":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}},"p":{"docs":{},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"\"":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"w":{"docs":{},"\"":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}},"a":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"i":{"docs":{},"g":{"docs":{},"y":{"docs":{},"i":{"docs":{},"r":{"docs":{},"\"":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}},",":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"y":{"docs":{},"a":{"docs":{},"h":{"docs":{},"r":{"docs":{},"p":{"docs":{},"i":{"docs":{},"\"":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}},"\"":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}},";":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}},".":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}},"c":{"docs":{},"b":{"docs":{},"b":{"docs":{},"d":{"docs":{},"\"":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}}},"\"":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}},"*":{"docs":{},"a":{"docs":{},"*":{"docs":{},"b":{"docs":{},"\"":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}}},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}},"f":{"docs":{},"\"":{"docs":{},"]":{"docs":{},".":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}},"a":{"docs":{},"e":{"docs":{},"b":{"docs":{},"d":{"docs":{},"\"":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}}},".":{"docs":{},"*":{"docs":{},"\"":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745}}}},".":{"docs":{},".":{"docs":{},"q":{"docs":{},"\"":{"docs":{},",":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666}}}}}},"q":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}}},"q":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"*":{"docs":{},"i":{"docs":{},"s":{"docs":{},"*":{"docs":{},"p":{"docs":{},"*":{"docs":{},".":{"docs":{},"\"":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"\"":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}},"f":{"docs":{},"l":{"docs":{},"\"":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}},"(":{"docs":{},")":{"docs":{},"\"":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}},"[":{"docs":{},"]":{"docs":{},"{":{"docs":{},"}":{"docs":{},"\"":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}}},"(":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"\"":{"docs":{},",":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}},")":{"docs":{},"(":{"docs":{},")":{"docs":{},"\"":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}},"\"":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}},"[":{"docs":{},")":{"docs":{},"]":{"docs":{},"\"":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}},"]":{"docs":{},"\"":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}},"(":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},"\"":{"docs":{},",":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}}},")":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"\"":{"docs":{},",":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}},")":{"docs":{},"(":{"docs":{},")":{"docs":{},"\"":{"docs":{},",":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}},"\"":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}},"{":{"docs":{},"[":{"docs":{},"]":{"docs":{},"}":{"docs":{},"\"":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"\"":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}},"\"":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}},")":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"\"":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}}}},"*":{"docs":{},"\"":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}},"a":{"docs":{},"*":{"docs":{},"b":{"docs":{},"\"":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}}},"?":{"docs":{},"a":{"docs":{},"\"":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}},"d":{"docs":{},"c":{"docs":{},"e":{"docs":{},"\"":{"docs":{},".":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}}},"b":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.02702702702702703}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}},"e":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}},"q":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.016666666666666666}}}}}}}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"\"":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}},"g":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678}},".":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}},"t":{"docs":{},"a":{"docs":{},"e":{"docs":{},"\"":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}},".":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}}},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}},"i":{"docs":{},"t":{"docs":{},"\"":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}}}}}},"\"":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}},"g":{"docs":{},"r":{"docs":{},"\"":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}},".":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.012345679012345678}}},":":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}}}},"v":{"docs":{},"f":{"docs":{},"\"":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}}},"h":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405}},"=":{"1":{"docs":{},",":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"=":{"1":{"docs":{},";":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}},"docs":{}}}}}}},"docs":{}}}}}}}},"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.015873015873015872},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.017857142857142856}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"1":{"docs":{},";":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}},"docs":{}}}}},",":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}},".":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112}}},")":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}},";":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.015789473684210527},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.020202020202020204}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.025974025974025976},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.023255813953488372},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.021739130434782608}},")":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}},"s":{"docs":{},")":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}},"docs":{}}}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"l":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},",":{"docs":{},"n":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}},"docs":{}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"+":{"docs":{},"'":{"docs":{},"(":{"docs":{},"'":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}}}},")":{"docs":{},"'":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}},"docs":{}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}}}},">":{"docs":{},"&":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},",":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{},"i":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}},"+":{"1":{"docs":{},",":{"docs":{},"j":{"docs":{},",":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}}}}},"docs":{}}}}}}}}},"docs":{}},",":{"docs":{},"j":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}},"+":{"1":{"docs":{},",":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}}}}}}}},"docs":{}}}}}}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},",":{"docs":{},"n":{"docs":{},",":{"docs":{},"k":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}}}}},"docs":{}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0136986301369863}},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}},",":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.01818181818181818}},",":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.01818181818181818}}},".":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}},"n":{"docs":{},"d":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}},"i":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}},"l":{"docs":{},"d":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":2.5259740259740258}},"'":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}},".":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}}}}}}},"g":{"docs":{},"h":{"docs":{},")":{"docs":{},"{":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}},"&":{"docs":{},"&":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}},">":{"docs":{},"=":{"0":{"docs":{},"&":{"docs":{},"&":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}}}}}}}}}}}}},"docs":{}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"&":{"docs":{},"&":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{},"&":{"docs":{},"&":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}}}}},"=":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464}}}}}}}}}}}}},"=":{"docs":{},"x":{"docs":{},")":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}},"x":{"docs":{},")":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},"{":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}}}}}}},"m":{"docs":{},"p":{"0":{"docs":{},"^":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"0":{"docs":{},"?":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}},"docs":{}}}}}}}}}}},"docs":{}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}},"o":{"docs":{},"u":{"1":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}},"docs":{}}}},"x":{"docs":{},")":{"docs":{},"{":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612}}}}},"i":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}},"&":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},"{":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{},"=":{"0":{"docs":{},"&":{"docs":{},"&":{"docs":{},"j":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}}}}}}}}}}}}},"docs":{}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}}},"!":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496}}}}}}}}}}}}}}},"q":{"1":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}},"docs":{},"u":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},">":{"docs":{},"=":{"docs":{},"d":{"docs":{},"i":{"docs":{},")":{"docs":{},"{":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}}}}},"n":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.016}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"%":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{},"{":{"docs":{"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901}}}}}},"docs":{}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"%":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{},"{":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}}}},"docs":{}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}}}}}}}}}}},"k":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},"{":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}},"docs":{}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"0":{"docs":{},")":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}},"docs":{}}}},"j":{"docs":{},">":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},"{":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}},"docs":{}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}},")":{"docs":{},"{":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.010582010582010581},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541}}}},"|":{"docs":{},"|":{"docs":{},"!":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.018867924528301886}},",":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}},"a":{"docs":{},"t":{"docs":{},".":{"docs":{"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}}},"y":{"docs":{},"?":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":1.6864686468646863},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.01910828025477707},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}},"i":{"docs":{},"n":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.025974025974025976}}}}},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":3.3460721868365177}}}}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":2.5425531914893615}},",":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}},".":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":3.346153846153846},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":2.538961038961039}},".":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}},"y":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.02857142857142857},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":3.354838709677419},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"。":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"加":{"docs":{},"上":{"docs":{},"前":{"docs":{},"两":{"docs":{},"次":{"docs":{},"的":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}}}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"不":{"docs":{},"等":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"就":{"docs":{},"能":{"docs":{},"加":{"docs":{},"上":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"次":{"docs":{},"的":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333},"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}},".":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.031007751937984496}},",":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}},"2":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}},")":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}},",":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}},".":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}},"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124},"79.-word-search.html":{"ref":"79.-word-search.html","tf":3.372294372294372}},":":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}},")":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}},",":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}},"综":{"docs":{},"合":{"docs":{},"来":{"docs":{},"看":{"docs":{},"还":{"docs":{},"是":{"docs":{},"第":{"docs":{},"二":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"更":{"docs":{},"好":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}}}}}}}}},"记":{"docs":{},"录":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},":":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"不":{"docs":{},"管":{"docs":{},"什":{"docs":{},"么":{"docs":{},"清":{"docs":{},"况":{"docs":{},"都":{"docs":{},"是":{"docs":{},"运":{"docs":{},"行":{"docs":{},"n":{"docs":{},"次":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"得":{"docs":{},"c":{"docs":{},"s":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"专":{"docs":{},"门":{"docs":{},"有":{"docs":{},"一":{"docs":{},"门":{"docs":{},"实":{"docs":{},"验":{"docs":{},"就":{"docs":{},"跟":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"目":{"docs":{},"很":{"docs":{},"类":{"docs":{},"似":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"不":{"docs":{},"用":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"符":{"docs":{},"号":{"docs":{},"实":{"docs":{},"现":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"符":{"docs":{},"号":{"docs":{},"啥":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"用":{"docs":{},"乘":{"docs":{},"除":{"docs":{},"取":{"docs":{},"余":{"docs":{},"数":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"除":{"docs":{},"法":{"docs":{},"。":{"docs":{},"能":{"docs":{},"用":{"docs":{},"的":{"docs":{},"还":{"docs":{},"有":{"docs":{},"加":{"docs":{},"法":{"docs":{},"和":{"docs":{},"减":{"docs":{},"法":{"docs":{},"，":{"docs":{},"除":{"docs":{},"法":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"看":{"docs":{},"被":{"docs":{},"除":{"docs":{},"数":{"docs":{},"中":{"docs":{},"能":{"docs":{},"减":{"docs":{},"去":{"docs":{},"几":{"docs":{},"个":{"docs":{},"除":{"docs":{},"数":{"docs":{},"。":{"docs":{},"想":{"docs":{},"到":{"docs":{},"这":{"docs":{},"一":{"docs":{},"步":{"docs":{},"就":{"docs":{},"很":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"了":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"诶":{"docs":{},"一":{"docs":{},"直":{"docs":{},"减":{"docs":{},"去":{"docs":{},"除":{"docs":{},"数":{"docs":{},"就":{"docs":{},"行":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"有":{"docs":{},"的":{"docs":{},"慢":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"减":{"docs":{},"去":{"docs":{},"除":{"docs":{},"数":{"docs":{},"的":{"docs":{},"倍":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"会":{"docs":{},"快":{"docs":{},"一":{"docs":{},"点":{"docs":{},"。":{"docs":{},"直":{"docs":{},"接":{"docs":{},"移":{"docs":{},"位":{"docs":{},"最":{"docs":{},"好":{"docs":{},"，":{"docs":{},"就":{"docs":{},"能":{"docs":{},"很":{"docs":{},"快":{"docs":{},"生":{"docs":{},"成":{"2":{"docs":{},"的":{"docs":{},"倍":{"docs":{},"数":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"分":{"docs":{},"析":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"不":{"docs":{},"同":{"docs":{},"。":{"docs":{},"在":{"docs":{},"输":{"docs":{},"入":{"docs":{},"为":{"docs":{},"n":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"需":{"docs":{},"要":{"docs":{},"运":{"docs":{},"行":{"2":{"docs":{},"n":{"docs":{},"次":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"情":{"docs":{},"况":{"docs":{},"需":{"docs":{},"要":{"docs":{},"运":{"docs":{},"行":{"docs":{},"n":{"docs":{},"次":{"docs":{},"。":{"docs":{},"最":{"docs":{},"好":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"。":{"docs":{"3.-longest-substring-without-repeating-characters.html":{"ref":"3.-longest-substring-without-repeating-characters.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"想":{"docs":{},"装":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"水":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"两":{"docs":{},"个":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"隔":{"docs":{},"得":{"docs":{},"越":{"docs":{},"远":{"docs":{},"越":{"docs":{},"好":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"两":{"docs":{},"个":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"中":{"docs":{},"较":{"docs":{},"矮":{"docs":{},"的":{"docs":{},"那":{"docs":{},"根":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"也":{"docs":{},"会":{"docs":{},"决":{"docs":{},"定":{"docs":{},"装":{"docs":{},"水":{"docs":{},"的":{"docs":{},"量":{"docs":{},"。":{"docs":{},"直":{"docs":{},"接":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"法":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"很":{"docs":{},"多":{"docs":{},"人":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"就":{"docs":{},"想":{"docs":{},"到":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"每":{"docs":{},"一":{"docs":{},"种":{"docs":{},"组":{"docs":{},"合":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"题":{"docs":{},"还":{"docs":{},"有":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"隔":{"docs":{},"得":{"docs":{},"越":{"docs":{},"远":{"docs":{},"，":{"docs":{},"更":{"docs":{},"大":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"会":{"docs":{},"大":{"docs":{},"很":{"docs":{},"多":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"这":{"docs":{},"里":{"docs":{},"也":{"docs":{},"用":{"docs":{},"到":{"docs":{},"了":{"docs":{},"之":{"docs":{},"前":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"一":{"docs":{},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"相":{"docs":{},"等":{"docs":{},"了":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"查":{"docs":{},"看":{"docs":{},"左":{"docs":{},"上":{"docs":{},"角":{"docs":{},"的":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"值":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"当":{"docs":{},"前":{"docs":{},"也":{"docs":{},"是":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"也":{"docs":{},"好":{"docs":{},"说":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"按":{"docs":{},"照":{"docs":{},"相":{"docs":{},"等":{"docs":{},"来":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"关":{"docs":{},"键":{"docs":{},"就":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"*":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"来":{"docs":{},"回":{"docs":{},"顾":{"docs":{},"一":{"docs":{},"下":{"docs":{},"*":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"0":{"docs":{},"个":{"docs":{},"，":{"0":{"docs":{},"个":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"查":{"docs":{},"看":{"docs":{},"靠":{"docs":{},"左":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"格":{"docs":{},"的":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"值":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"c":{"docs":{},"*":{"docs":{},"和":{"docs":{},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"排":{"docs":{},"前":{"docs":{},"三":{"docs":{},"个":{"docs":{},"。":{"docs":{},"两":{"docs":{},"个":{"docs":{},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"是":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"，":{"docs":{},"值":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"c":{"docs":{},"和":{"docs":{},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"格":{"docs":{},"子":{"docs":{},"值":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"c":{"docs":{},"*":{"docs":{},"是":{"docs":{},"和":{"docs":{},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"0":{"docs":{},"个":{"docs":{},"c":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"观":{"docs":{},"察":{"docs":{},"左":{"docs":{},"边":{"docs":{},"两":{"docs":{},"个":{"docs":{},"格":{"docs":{},"子":{"docs":{},"的":{"docs":{},"值":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"考":{"docs":{},"虑":{"1":{"docs":{},"个":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"可":{"docs":{},"以":{"docs":{},"换":{"docs":{},"一":{"docs":{},"种":{"docs":{},"思":{"docs":{},"想":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"行":{"docs":{},"列":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"需":{"docs":{},"要":{"1":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"上":{"docs":{},"一":{"docs":{},"行":{"docs":{},"和":{"docs":{},"当":{"docs":{},"前":{"docs":{},"列":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"是":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"0":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"上":{"docs":{},"一":{"docs":{},"行":{"docs":{},"成":{"docs":{},"功":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"一":{"docs":{},"行":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"也":{"docs":{},"成":{"docs":{},"功":{"docs":{},"。":{"docs":{},"同":{"docs":{},"理":{"docs":{},"可":{"docs":{},"得":{"1":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"看":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"格":{"docs":{},"子":{"docs":{},"是":{"docs":{},"否":{"docs":{},"满":{"docs":{},"足":{"docs":{},"条":{"docs":{},"件":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"看":{"docs":{},"来":{"docs":{},"，":{"docs":{},"排":{"docs":{},"序":{"docs":{},"成":{"docs":{},"了":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"瓶":{"docs":{},"颈":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"不":{"docs":{},"能":{"docs":{},"这":{"docs":{},"么":{"docs":{},"说":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"至":{"docs":{},"少":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"两":{"docs":{},"个":{"docs":{},"头":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"两":{"docs":{},"个":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"加":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"头":{"docs":{},"上":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"将":{"docs":{},"两":{"docs":{},"个":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"合":{"docs":{},"并":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"待":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{},"问":{"docs":{},"题":{"docs":{},"了":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"下":{"docs":{},"一":{"docs":{},"天":{"docs":{},"价":{"docs":{},"格":{"docs":{},"比":{"docs":{},"今":{"docs":{},"天":{"docs":{},"低":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"我":{"docs":{},"们":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"要":{"docs":{},"下":{"docs":{},"一":{"docs":{},"天":{"docs":{},"买":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"这":{"docs":{},"一":{"docs":{},"天":{"docs":{},"高":{"docs":{},"价":{"docs":{},"买":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{},"买":{"docs":{},"进":{"docs":{},"的":{"docs":{},"价":{"docs":{},"格":{"docs":{},"改":{"docs":{},"成":{"docs":{},"下":{"docs":{},"一":{"docs":{},"天":{"docs":{},"的":{"docs":{},"。":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"知":{"docs":{},"道":{"docs":{},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"最":{"docs":{},"多":{"docs":{},"允":{"docs":{},"许":{"docs":{},"买":{"docs":{},"两":{"docs":{},"次":{"docs":{},"，":{"docs":{},"意":{"docs":{},"思":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"次":{"docs":{},"可":{"docs":{},"以":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"买":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{},"就":{"docs":{},"像":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.02531645569620253},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"16.3sum-closest.html":{"ref":"16.3sum-closest.html","tf":0.037037037037037035},"18.-4sum.html":{"ref":"18.-4sum.html","tf":0.045454545454545456},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"会":{"docs":{},"进":{"docs":{},"入":{"docs":{},"子":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"平":{"docs":{},"方":{"docs":{},")":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"好":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"不":{"docs":{},"会":{"docs":{},"进":{"docs":{},"入":{"docs":{},"子":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"这":{"docs":{},"题":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"，":{"docs":{},"这":{"docs":{},"不":{"docs":{},"是":{"docs":{},"跟":{"docs":{},"第":{"7":{"docs":{},"题":{"docs":{},"很":{"docs":{},"类":{"docs":{},"似":{"docs":{},"吗":{"docs":{},"。":{"docs":{},"直":{"docs":{},"接":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"2":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"就":{"docs":{},"是":{"docs":{},"个":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"题":{"docs":{},"了":{"docs":{},"。":{"docs":{},"不":{"docs":{},"到":{"docs":{},"一":{"docs":{},"分":{"docs":{},"钟":{"docs":{},"写":{"docs":{},"完":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"里":{"docs":{},"的":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"是":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"转":{"docs":{},"置":{"docs":{},"之":{"docs":{},"后":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"这":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"需":{"docs":{},"要":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{},"空":{"docs":{},"间":{"docs":{},"题":{"docs":{},"目":{"docs":{},"也":{"docs":{},"明":{"docs":{},"显":{"docs":{},"要":{"docs":{},"求":{"docs":{},"了":{"docs":{},"我":{"docs":{},"们":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"维":{"docs":{},"持":{"docs":{},"在":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"内":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"本":{"docs":{},"来":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"上":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"只":{"docs":{},"能":{"docs":{},"这":{"docs":{},"么":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"交":{"docs":{},"换":{"docs":{},"值":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"改":{"docs":{},"变":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"旋":{"docs":{},"转":{"9":{"0":{"docs":{},"度":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"首":{"docs":{},"先":{"docs":{},"按":{"docs":{},"照":{"docs":{},"竖":{"docs":{},"直":{"docs":{},"中":{"docs":{},"线":{"docs":{},"对":{"docs":{},"称":{"docs":{},"，":{"docs":{},"再":{"docs":{},"按":{"docs":{},"照":{"docs":{},"对":{"docs":{},"角":{"docs":{},"线":{"docs":{},"对":{"docs":{},"称":{"docs":{},"就":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"，":{"docs":{},"两":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"得":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"。":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"，":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"现":{"docs":{},"在":{"docs":{},"给":{"docs":{},"出":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"3":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"1":{"docs":{},"，":{"2":{"docs":{},"，":{"3":{"docs":{},"。":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"6":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"最":{"docs":{},"后":{"docs":{},"加":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"4":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"会":{"docs":{},"变":{"docs":{},"为":{"1":{"0":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"说":{"docs":{},"明":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"来":{"docs":{},"简":{"docs":{},"化":{"docs":{},"求":{"docs":{},"解":{"docs":{},"现":{"docs":{},"在":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"和":{"docs":{},"为":{"docs":{},"负":{"docs":{},"值":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"不":{"docs":{},"能":{"docs":{},"用":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"负":{"docs":{},"值":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"当":{"docs":{},"前":{"docs":{},"值":{"docs":{},"直":{"docs":{},"接":{"docs":{},"表":{"docs":{},"示":{"docs":{},"。":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"想":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"以":{"docs":{},"及":{"docs":{},"代":{"docs":{},"码":{"docs":{},"里":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"。":{"docs":{},"不":{"docs":{},"然":{"docs":{},"很":{"docs":{},"难":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"我":{"docs":{},"个":{"docs":{},"人":{"docs":{},"也":{"docs":{},"是":{"docs":{},"第":{"docs":{},"三":{"docs":{},"次":{"docs":{},"做":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"了":{"docs":{},"，":{"docs":{},"也":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"回":{"docs":{},"味":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"找":{"docs":{},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{},"就":{"docs":{},"行":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"次":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"将":{"docs":{},"它":{"docs":{},"当":{"docs":{},"作":{"docs":{},"一":{"docs":{},"个":{"docs":{},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{},"的":{"docs":{},"中":{"docs":{},"间":{"docs":{},"，":{"docs":{},"向":{"docs":{},"两":{"docs":{},"边":{"docs":{},"扩":{"docs":{},"散":{"docs":{},"。":{"docs":{},"比":{"docs":{},"较":{"docs":{},"得":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"5.-longest-palindromic-substring.html":{"ref":"5.-longest-palindromic-substring.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"现":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}}}}},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"进":{"docs":{},"入":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"将":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"值":{"docs":{},"减":{"docs":{},"去":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"判":{"docs":{},"断":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"且":{"docs":{},"当":{"docs":{},"前":{"docs":{},"值":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"1":{"docs":{},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{},"b":{"2":{"docs":{},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{},"s":{"1":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"s":{"2":{"docs":{},"=":{"0":{"docs":{},";":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}},"docs":{}}},"docs":{}}}},"docs":{}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"b":{"1":{"docs":{},",":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}},"docs":{}}}}}}}},"2":{"docs":{},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"b":{"2":{"docs":{},",":{"docs":{},"s":{"1":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}},"docs":{}}}},"docs":{}}}}}}}},"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.025974025974025976}},"e":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.02666666666666667}},")":{"docs":{},".":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}},".":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}},")":{"docs":{},".":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.017699115044247787}}}},":":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}},",":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}}}},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.015544041450777202},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.011627906976744186},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.011627906976744186}},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}},")":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678},"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}},";":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}},"=":{"0":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},";":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}},"docs":{}}}}},"?":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}},"s":{"docs":{},"t":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":1.675213675213675},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":1.4343853820598005},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":1.4343853820598005}}}}},"i":{"docs":{},"t":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.023809523809523808},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":3.372294372294372},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":2.015873015873016},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":1.6787148594377508},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":2.0120481927710845},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":2.0340136054421767},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":2.018867924528302},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.022222222222222223},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.022222222222222223},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":1.697674418604651},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":1.4474393530997303},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":2.0392156862745097},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":1.462469733656174},"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html":{"ref":"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html","tf":1.5535714285714284},"107.-binary-tree-level-order-traversal-ii.html":{"ref":"107.-binary-tree-level-order-traversal-ii.html","tf":1.5535714285714284},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":1.459579180509413},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":2.536231884057971},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":2.028985507246377},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.022727272727272728},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.02054794520547945},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":1.6912568306010927},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":1.6884057971014492},"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":2.50990099009901}}}}}}},"o":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},";":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}},"?":{"docs":{},"i":{"docs":{},":":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}}}},"o":{"docs":{},"l":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684},"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839},"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.010309278350515464}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.03184713375796178},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}},")":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}},",":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{},"'":{"docs":{},"\\":{"0":{"docs":{},"'":{"docs":{},";":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}},"docs":{}}},"t":{"docs":{},";":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}}}},"^":{"docs":{},"=":{"2":{"5":{"5":{"docs":{},";":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.01948051948051948}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"x":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}},",":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}},"t":{"docs":{},"h":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.017699115044247787},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}},".":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}}}},"n":{"docs":{},"u":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306}}}}}}}},"r":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988},"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.03896103896103896}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.023255813953488372},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":2.5144927536231885}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}}}}}},"b":{"docs":{},"g":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.028089887640449437}}}}}}},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},";":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}}}}}}}}}}},",":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}},"y":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":1.7094017094017093},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":1.4808970099667773},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":1.4750830564784052}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.017857142857142856}},"s":{"docs":{},".":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.018867924528301886}}}}}}},")":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}},"{":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}},",":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}},".":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}},"s":{"docs":{},"t":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}},"'":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.012048192771084338},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}},"s":{"docs":{},":":{"docs":{"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}}}},".":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}},":":{"docs":{"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124}}}}}},"y":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.016666666666666666}}},"于":{"docs":{},"是":{"docs":{},"开":{"docs":{},"始":{"docs":{},"找":{"docs":{},"规":{"docs":{},"律":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"除":{"docs":{},"了":{"docs":{},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"行":{"docs":{},"。":{"docs":{},"中":{"docs":{},"间":{"docs":{},"每":{"docs":{},"行":{"docs":{},"都":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"纵":{"docs":{},"向":{"docs":{},"字":{"docs":{},"符":{"docs":{},"中":{"docs":{},"夹":{"docs":{},"着":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"找":{"docs":{},"纵":{"docs":{},"向":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"规":{"docs":{},"律":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"两":{"docs":{},"个":{"docs":{},"纵":{"docs":{},"向":{"docs":{},"字":{"docs":{},"符":{"docs":{},"位":{"docs":{},"置":{"docs":{},"差":{"docs":{},"是":{"docs":{},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"*":{"2":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"想":{"docs":{},"法":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"构":{"docs":{},"造":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"z":{"docs":{},"i":{"docs":{},"g":{"docs":{},"z":{"docs":{},"a":{"docs":{},"g":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"把":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"存":{"docs":{},"入":{"docs":{},"其":{"docs":{},"中":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"太":{"docs":{},"慢":{"docs":{},"了":{"docs":{},"，":{"docs":{},"也":{"docs":{},"太":{"docs":{},"占":{"docs":{},"用":{"docs":{},"空":{"docs":{},"间":{"docs":{},"了":{"docs":{},"，":{"docs":{},"很":{"docs":{},"多":{"docs":{},"地":{"docs":{},"方":{"docs":{},"都":{"docs":{},"没":{"docs":{},"有":{"docs":{},"存":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"6.-zigzag-conversion.html":{"ref":"6.-zigzag-conversion.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"得":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"找":{"docs":{},"到":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.025},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.009900990099009901},"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.017391304347826087},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.014084507042253521},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405}},")":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.015037593984962405},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}},"{":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.01694915254237288}}},".":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}},"/":{"docs":{},"=":{"1":{"0":{"docs":{},";":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.02040816326530612}}}},"docs":{}},"docs":{}}},",":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125},"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"满":{"docs":{},"足":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"=":{"docs":{},"x":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}},"−":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904},"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}},"初":{"docs":{},"次":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"这":{"docs":{},"题":{"docs":{},"想":{"docs":{},"到":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"是":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"正":{"docs":{},"负":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"按":{"docs":{},"位":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"取":{"docs":{},"模":{"docs":{},"得":{"docs":{},"到":{"docs":{},"个":{"docs":{},"位":{"docs":{},"，":{"docs":{},"将":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"个":{"docs":{},"位":{"docs":{},"加":{"docs":{},"到":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"想":{"docs":{},"法":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"我":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"用":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"更":{"docs":{},"加":{"docs":{},"易":{"docs":{},"懂":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"比":{"docs":{},"较":{"docs":{},"少":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"正":{"docs":{},"负":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"数":{"docs":{},"字":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"调":{"docs":{},"用":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"将":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"过":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"变":{"docs":{},"回":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"处":{"docs":{},"理":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"的":{"0":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"被":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"到":{"docs":{},"首":{"docs":{},"位":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"如":{"docs":{},"果":{"docs":{},"现":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"大":{"docs":{},"于":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},",":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"2":{"docs":{},"^":{"3":{"1":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"始":{"docs":{},"化":{"docs":{},"是":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"状":{"docs":{},"态":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"移":{"docs":{},"动":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"逼":{"docs":{},"近":{"docs":{},"尾":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"整":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"函":{"docs":{},"数":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"函":{"docs":{},"数":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"也":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"其":{"docs":{},"他":{"docs":{},"部":{"docs":{},"分":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"数":{"docs":{},"学":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"每":{"docs":{},"位":{"docs":{},"处":{"docs":{},"理":{"docs":{},"可":{"docs":{},"能":{"docs":{},"比":{"docs":{},"这":{"docs":{},"个":{"docs":{},"快":{"docs":{},"一":{"docs":{},"点":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"用":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"操":{"docs":{},"作":{"docs":{},"数":{"docs":{},"字":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"问":{"docs":{},"题":{"docs":{},"还":{"docs":{},"是":{"docs":{},"很":{"docs":{},"舒":{"docs":{},"服":{"docs":{},"的":{"docs":{},"。":{"docs":{"7.-reverse-integer.html":{"ref":"7.-reverse-integer.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"次":{"docs":{},"交":{"docs":{},"易":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"，":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"交":{"docs":{},"易":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"上":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"减":{"docs":{},"去":{"docs":{},"当":{"docs":{},"前":{"docs":{},"价":{"docs":{},"格":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"减":{"docs":{},"去":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"购":{"docs":{},"买":{"docs":{},"的":{"docs":{},"成":{"docs":{},"本":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"都":{"docs":{},"计":{"docs":{},"算":{"docs":{},"此":{"docs":{},"值":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"购":{"docs":{},"买":{"docs":{},"的":{"docs":{},"最":{"docs":{},"便":{"docs":{},"宜":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"。":{"docs":{"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"9.-palindrome-number.html":{"ref":"9.-palindrome-number.html","tf":0.01020408163265306},"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176}},".":{"docs":{},".":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}},",":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282}}}}}},"'":{"0":{"docs":{},"'":{"docs":{},")":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}},"+":{"docs":{},"c":{"docs":{},";":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}}}}}}}}}}},"docs":{},"'":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745}}},"*":{"docs":{},"'":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.025477707006369428}},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}},".":{"docs":{},"'":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}},".":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714}}}}},"a":{"docs":{},"'":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}},",":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}},"(":{"docs":{},"'":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}},",":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}},")":{"docs":{},"'":{"docs":{},",":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428},"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}},"[":{"docs":{},"'":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}},"]":{"docs":{},"'":{"docs":{},",":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}},"{":{"docs":{},"'":{"docs":{},",":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}},"}":{"docs":{},"'":{"docs":{},",":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}},"?":{"docs":{},"'":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.01910828025477707}}}},"b":{"docs":{},"'":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}},".":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}}}},"c":{"docs":{},"'":{"docs":{},",":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}},")":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}},"q":{"docs":{},"'":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"'":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"'":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}}}}}},"e":{"docs":{},"'":{"docs":{},")":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}}}}},"h":{"docs":{},"'":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}},"i":{"docs":{},"'":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}},"n":{"docs":{},"'":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}}}},"r":{"docs":{},"'":{"docs":{},")":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.015503875968992248}}}}},"t":{"docs":{},"'":{"docs":{},")":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}},"u":{"docs":{},"'":{"docs":{},")":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}},"x":{"docs":{},"'":{"docs":{},")":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}},"z":{"docs":{},"'":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}},"*":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.00980392156862745},"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.047619047619047616},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.05660377358490566},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.047244094488188976},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.06666666666666667},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.06306306306306306},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.058333333333333334},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.031578947368421054},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.05357142857142857},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.06060606060606061},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.045112781954887216},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.048},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.037037037037037035},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.04216867469879518},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.047619047619047616},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.0440251572327044},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.05185185185185185},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.05185185185185185},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.05426356589147287},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.052830188679245285},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.06862745098039216},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.059322033898305086},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.05426356589147287},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.050724637681159424},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.050724637681159424},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.05303030303030303},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.04794520547945205},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.05737704918032787},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.050724637681159424},"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}},".":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725},"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}},"/":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}}},"*":{"docs":{},"s":{"docs":{},"o":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}},",":{"docs":{},"*":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}},"j":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}},"]":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"分":{"docs":{},"析":{"docs":{},"全":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"这":{"docs":{},"一":{"docs":{},"题":{"docs":{},"中":{"docs":{},"就":{"docs":{},"*":{"docs":{},"号":{"docs":{},"很":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"，":{"docs":{},"他":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"零":{"docs":{},"个":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"多":{"docs":{},"个":{"docs":{},"。":{"docs":{},"分":{"docs":{},"析":{"docs":{},"到":{"docs":{},"*":{"docs":{},"号":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"有":{"docs":{},"点":{"docs":{},"多":{"docs":{},"。":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"0":{"docs":{},";":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.00909090909090909}},"j":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}},"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"'":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":2.5526315789473686},"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":3.3787878787878785}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105}}}}}}}}}},"s":{"docs":{},".":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105}}}}}},"d":{"docs":{},"g":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}}}}}}}}},")":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}},"{":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}},",":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988}}}}}}},"分":{"docs":{},"析":{"docs":{},"一":{"docs":{},"次":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"4":{"docs":{},"的":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"知":{"docs":{},"道":{"docs":{},"，":{"docs":{},"价":{"docs":{},"格":{"docs":{},"走":{"docs":{},"向":{"docs":{},"只":{"docs":{},"有":{"docs":{},"上":{"docs":{},"面":{"docs":{},"两":{"docs":{},"种":{"docs":{},"，":{"docs":{},"要":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"直":{"docs":{},"递":{"docs":{},"增":{"docs":{},"，":{"docs":{},"要":{"docs":{},"不":{"docs":{},"就":{"docs":{},"是":{"docs":{},"下":{"docs":{},"降":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"归":{"docs":{},"纳":{"docs":{},"成":{"docs":{},"一":{"docs":{},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"写":{"docs":{},"出":{"docs":{},"代":{"docs":{},"码":{"docs":{},".":{"docs":{},"注":{"docs":{},"意":{"docs":{},"写":{"docs":{},"成":{"docs":{},"一":{"docs":{},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"时":{"docs":{},"，":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"最":{"docs":{},"后":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"，":{"docs":{},"就":{"docs":{},"能":{"docs":{},"处":{"docs":{},"理":{"docs":{},"所":{"docs":{},"有":{"docs":{},"情":{"docs":{},"况":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"能":{"docs":{},"讲":{"docs":{},"述":{"docs":{},"的":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"，":{"docs":{},"建":{"docs":{},"议":{"docs":{},"先":{"docs":{},"做":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"解":{"docs":{},"法":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"等":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"再":{"docs":{},"来":{"docs":{},"做":{"docs":{},"这":{"docs":{},"题":{"docs":{},"会":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"很":{"docs":{},"多":{"docs":{},"。":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"看":{"docs":{},"到":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"将":{"docs":{},"链":{"docs":{},"表":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"截":{"docs":{},"断":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"到":{"docs":{},"前":{"docs":{},"面":{"docs":{},"。":{"docs":{},"知":{"docs":{},"道":{"docs":{},"这":{"docs":{},"个":{"docs":{},"意":{"docs":{},"思":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"如":{"docs":{},"果":{"docs":{},"k":{"docs":{},"大":{"docs":{},"于":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"了":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"k":{"docs":{},"等":{"docs":{},"于":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"，":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"不":{"docs":{},"变":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"很":{"docs":{},"明":{"docs":{},"显":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"令":{"docs":{},"k":{"docs":{},"=":{"docs":{},"k":{"docs":{},"%":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"截":{"docs":{},"断":{"docs":{},"链":{"docs":{},"表":{"docs":{},"即":{"docs":{},"可":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"借":{"docs":{},"助":{"docs":{},"之":{"docs":{},"前":{"docs":{},"只":{"docs":{},"能":{"docs":{},"买":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"能":{"docs":{},"买":{"docs":{},"很":{"docs":{},"多":{"docs":{},"次":{"docs":{},"。":{"docs":{},"只":{"docs":{},"要":{"docs":{},"有":{"docs":{},"利":{"docs":{},"润":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"都":{"docs":{},"加":{"docs":{},"上":{"docs":{},"。":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"m":{"docs":{},"，":{"docs":{},"p":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"。":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"*":{"docs":{},"n":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"。":{"docs":{},"算":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"这":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"n":{"docs":{},")":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"都":{"docs":{},"是":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"专":{"docs":{},"门":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"k":{"docs":{},"m":{"docs":{},"p":{"docs":{},"这":{"docs":{},"种":{"docs":{},"。":{"docs":{},"还":{"docs":{},"有":{"docs":{},"就":{"docs":{},"是":{"docs":{},"很":{"docs":{},"多":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"想":{"docs":{},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"重":{"docs":{},"合":{"docs":{},"之":{"docs":{},"类":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"字":{"docs":{},"典":{"docs":{},"树":{"docs":{},"。":{"docs":{},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"问":{"docs":{},"题":{"docs":{},"就":{"docs":{},"是":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"解":{"docs":{},"决":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"横":{"docs":{},"纵":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"i":{"docs":{},"j":{"docs":{},"表":{"docs":{},"示":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"10.-regular-expression-matchinghard.html":{"ref":"10.-regular-expression-matchinghard.html","tf":0.004901960784313725}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"11.-container-with-most-water.html":{"ref":"11.-container-with-most-water.html","tf":0.01282051282051282},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}},"以":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"，":{"docs":{},"从":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"对":{"docs":{},"比":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{},"出":{"docs":{},"现":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"就":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"后":{"docs":{},"面":{"docs":{},"。":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}}}}},"其":{"docs":{},"实":{"docs":{},"整":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"是":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"=":{"docs":{},"=":{"1":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"判":{"docs":{},"断":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"在":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"一":{"docs":{},"直":{"docs":{},"判":{"docs":{},"断":{"docs":{},"并":{"docs":{},"且":{"docs":{},"调":{"docs":{},"用":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"到":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"中":{"docs":{},"，":{"docs":{},"会":{"docs":{},"及":{"docs":{},"其":{"docs":{},"耗":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"加":{"docs":{},"上":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"判":{"docs":{},"断":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"整":{"docs":{},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"会":{"docs":{},"快":{"docs":{},"很":{"docs":{},"多":{"docs":{},"的":{"docs":{},"。":{"docs":{"14.-longest-common-prefix.html":{"ref":"14.-longest-common-prefix.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"考":{"docs":{},"的":{"docs":{},"变":{"docs":{},"种":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"之":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"一":{"docs":{},"半":{"docs":{},"还":{"docs":{},"是":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"。":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"只":{"docs":{},"要":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"半":{"docs":{},"是":{"docs":{},"否":{"docs":{},"满":{"docs":{},"足":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"道":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"放":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"进":{"docs":{},"如":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"运":{"docs":{},"行":{"docs":{},"完":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"放":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"是":{"3":{"docs":{},"个":{"docs":{},"。":{"docs":{},"中":{"docs":{},"间":{"docs":{},"判":{"docs":{},"断":{"docs":{},"非":{"docs":{},"法":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"长":{"docs":{},"度":{"docs":{},"大":{"docs":{},"于":{"1":{"docs":{},"并":{"docs":{},"且":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"'":{"0":{"docs":{},"'":{"docs":{},",":{"docs":{},"显":{"docs":{},"然":{"docs":{},"不":{"docs":{},"行":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"数":{"docs":{},"字":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"数":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"2":{"5":{"5":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"也":{"docs":{},"是":{"docs":{},"不":{"docs":{},"行":{"docs":{},"的":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"所":{"docs":{},"有":{"docs":{},"情":{"docs":{},"况":{"docs":{},"都":{"docs":{},"满":{"docs":{},"足":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"将":{"docs":{},"结":{"docs":{},"果":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"到":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"中":{"docs":{},"。":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"问":{"docs":{},"题":{"docs":{},"得":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"有":{"docs":{},"的":{"docs":{},"像":{"docs":{},"，":{"docs":{},"此":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"值":{"docs":{},"等":{"docs":{},"于":{"docs":{},"上":{"docs":{},"两":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"值":{"docs":{},"相":{"docs":{},"加":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"优":{"docs":{},"化":{"docs":{},"到":{"docs":{},"只":{"docs":{},"用":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"重":{"docs":{},"复":{"docs":{},"使":{"docs":{},"用":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"：":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},")":{"docs":{},"代":{"docs":{},"表":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},"代":{"docs":{},"表":{"docs":{},"减":{"docs":{},"少":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},")":{"docs":{},"代":{"docs":{},"表":{"docs":{},"替":{"docs":{},"换":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"解":{"docs":{},"决":{"docs":{},"此":{"docs":{},"题":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"题":{"docs":{},"可":{"docs":{},"以":{"docs":{},"优":{"docs":{},"化":{"docs":{},"到":{"docs":{},"只":{"docs":{},"用":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"只":{"docs":{},"给":{"docs":{},"出":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"解":{"docs":{},"答":{"docs":{},"。":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01},"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.012738853503184714},"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863},"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872},"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.0297029702970297},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.02631578947368421},"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894},"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872},"73.-set-matrix-zeroes.html":{"ref":"73.-set-matrix-zeroes.html","tf":0.056338028169014086},"74.-search-a-2d-matrix.html":{"ref":"74.-search-a-2d-matrix.html","tf":0.01818181818181818},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888},"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285},"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334},"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}},",":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.017241379310344827},"54.-spiral-matrix.html":{"ref":"54.-spiral-matrix.html","tf":0.019801980198019802},"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.02631578947368421}}},"=":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}},"=":{"docs":{},"'":{"docs":{},"q":{"docs":{},"'":{"docs":{},")":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}}},"[":{"docs":{},"j":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"[":{"docs":{},"j":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}},"docs":{}}}}}},";":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}},"排":{"docs":{},"序":{"docs":{},"需":{"docs":{},"要":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"，":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"外":{"docs":{},"层":{"docs":{},"循":{"docs":{},"环":{"docs":{},"执":{"docs":{},"行":{"docs":{},"n":{"docs":{},"次":{"docs":{},"，":{"docs":{},"内":{"docs":{},"层":{"docs":{},"循":{"docs":{},"环":{"docs":{},"执":{"docs":{},"行":{"docs":{},"(":{"docs":{},"n":{"docs":{"15.-3sum.html":{"ref":"15.-3sum.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"需":{"docs":{},"要":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"并":{"docs":{},"保":{"docs":{},"存":{"docs":{},"。":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"达":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"点":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"是":{"docs":{},"其":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"点":{"docs":{},"和":{"docs":{},"左":{"docs":{},"边":{"docs":{},"点":{"docs":{},"的":{"docs":{},"方":{"docs":{},"案":{"docs":{},"之":{"docs":{},"和":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"我":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"点":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"走":{"docs":{},"过":{"docs":{},"来":{"docs":{},"，":{"docs":{},"一":{"docs":{},"种":{"docs":{},"是":{"docs":{},"从":{"docs":{},"上":{"docs":{},"面":{"docs":{},"往":{"docs":{},"下":{"docs":{},"走":{"docs":{},"，":{"docs":{},"一":{"docs":{},"种":{"docs":{},"是":{"docs":{},"从":{"docs":{},"左":{"docs":{},"边":{"docs":{},"往":{"docs":{},"右":{"docs":{},"走":{"docs":{},"。":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"如":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"和":{"docs":{},"前":{"docs":{},"面":{"docs":{},"数":{"docs":{},"字":{"docs":{},"组":{"docs":{},"合":{"docs":{},"成":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"底":{"docs":{},"部":{"docs":{},"出":{"docs":{},"发":{"docs":{},"向":{"docs":{},"上":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"选":{"docs":{},"择":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"将":{"docs":{},"它":{"docs":{},"加":{"docs":{},"到":{"docs":{},"自":{"docs":{},"己":{"docs":{},"当":{"docs":{},"前":{"docs":{},"值":{"docs":{},"上":{"docs":{},"。":{"docs":{},"重":{"docs":{},"复":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"知":{"docs":{},"道":{"docs":{},"到":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"计":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"问":{"docs":{},"题":{"docs":{"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"代":{"docs":{},"表":{"3":{"docs":{"17.-letter-combinations-of-a-phone-number.html":{"ref":"17.-letter-combinations-of-a-phone-number.html","tf":0.010101010101010102}}},"docs":{}}}}},"函":{"docs":{},"数":{"docs":{},"正":{"docs":{},"常":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"都":{"docs":{},"能":{"docs":{},"分":{"docs":{},"出":{"4":{"docs":{},"个":{"docs":{},"分":{"docs":{},"支":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"分":{"docs":{},"支":{"docs":{},"中":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"线":{"docs":{},"性":{"docs":{},"的":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"不":{"docs":{},"好":{"docs":{},"定":{"docs":{},"义":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"整":{"docs":{},"个":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"还":{"docs":{},"是":{"docs":{},"挺":{"docs":{},"高":{"docs":{},"的":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"次":{"docs":{},"将":{"docs":{},"次":{"docs":{},"数":{"docs":{},"降":{"docs":{},"低":{"docs":{},"一":{"docs":{},"半":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"需":{"docs":{},"要":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"那":{"docs":{},"总":{"docs":{},"时":{"docs":{},"间":{"docs":{},"可":{"docs":{},"以":{"docs":{},"表":{"docs":{},"达":{"docs":{},"为":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"=":{"2":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},")":{"docs":{},"+":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"用":{"docs":{},"主":{"docs":{},"定":{"docs":{},"理":{"docs":{},"分":{"docs":{},"析":{"docs":{},"可":{"docs":{},"知":{"docs":{},"为":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"=":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"21.-merge-two-sorted-lists.html":{"ref":"21.-merge-two-sorted-lists.html","tf":0.009433962264150943},"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":0.007874015748031496},"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112},"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.018018018018018018},"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.016666666666666666},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494},"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428},"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.00819672131147541},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203},"659.-split-array-into-consecutive-subsequences.html":{"ref":"659.-split-array-into-consecutive-subsequences.html","tf":0.020618556701030927}}},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105},"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}},"。":{"docs":{},"没":{"docs":{},"有":{"docs":{},"用":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"存":{"docs":{},"储":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{},"符":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"步":{"docs":{},"能":{"docs":{},"走":{"docs":{},"到":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"就":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"，":{"docs":{},"每":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"地":{"docs":{},"方":{"docs":{},"，":{"docs":{},"确":{"docs":{},"定":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"能":{"docs":{},"走":{"docs":{},"到":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{},"在":{"docs":{},"一":{"docs":{},"步":{"docs":{},"走":{"docs":{},"完":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"确":{"docs":{},"定":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"大":{"docs":{},"能":{"docs":{},"走":{"docs":{},"到":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"。":{"docs":{"45.-jump-game-ii.html":{"ref":"45.-jump-game-ii.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"ref":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","tf":0.005813953488372093}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"来":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"递":{"docs":{},"增":{"docs":{},"，":{"docs":{},"就":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"小":{"docs":{},"于":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"值":{"docs":{},"，":{"docs":{},"就":{"docs":{},"将":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"值":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"，":{"docs":{},"并":{"docs":{},"计":{"docs":{},"算":{"docs":{},"以":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"值":{"docs":{},"为":{"docs":{},"高":{"docs":{},"度":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"面":{"docs":{},"积":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"去":{"docs":{},"计":{"docs":{},"算":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"的":{"docs":{},"宽":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"我":{"docs":{},"们":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"知":{"docs":{},"道":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"的":{"docs":{},"值":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"的":{"docs":{},"，":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"比":{"docs":{},"他":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"值":{"docs":{},"在":{"docs":{},"之":{"docs":{},"前":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"被":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"计":{"docs":{},"算":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"当":{"docs":{},"前":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"减":{"docs":{},"去":{"docs":{},"当":{"docs":{},"前":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"，":{"docs":{},"就":{"docs":{},"能":{"docs":{},"表":{"docs":{},"示":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"的":{"docs":{},"宽":{"docs":{},"了":{"docs":{},"。":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428}}}}}}}}}}}}}},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.005681818181818182}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"91.-decode-ways.html":{"ref":"91.-decode-ways.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"答":{"docs":{},"案":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"使":{"docs":{},"用":{"docs":{},"以":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"最":{"docs":{},"后":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"时":{"docs":{},"间":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"53.-maximum-subarray.html":{"ref":"53.-maximum-subarray.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"线":{"docs":{},"性":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"逼":{"docs":{},"近":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"开":{"docs":{},"始":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"题":{"docs":{},"目":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"直":{"docs":{},"接":{"docs":{},"类":{"docs":{},"比":{"docs":{},"成":{"docs":{},"了":{"docs":{},"括":{"docs":{},"号":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"就":{"docs":{},"动":{"docs":{},"手":{"docs":{},"做":{"docs":{},"了":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"括":{"docs":{},"号":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"比":{"docs":{},"这":{"docs":{},"个":{"docs":{},"多":{"docs":{},"了":{"docs":{},"一":{"docs":{},"点":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"而":{"docs":{},"这":{"docs":{},"里":{"docs":{},"只":{"docs":{},"要":{"docs":{},"统":{"docs":{},"计":{"docs":{},"数":{"docs":{},"字":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"直":{"docs":{},"接":{"docs":{},"定":{"docs":{},"义":{"4":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"会":{"docs":{},"更":{"docs":{},"快":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"4":{"docs":{},"个":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"存":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"但":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"找":{"docs":{},"第":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"几":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"有":{"docs":{},"个":{"docs":{},"小":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"前":{"docs":{},"后":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"n":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"首":{"docs":{},"先":{"docs":{},"让":{"docs":{},"前":{"docs":{},"指":{"docs":{},"针":{"docs":{},"先":{"docs":{},"走":{"docs":{},"n":{"docs":{},"步":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"后":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"前":{"docs":{},"指":{"docs":{},"针":{"docs":{},"一":{"docs":{},"起":{"docs":{},"行":{"docs":{},"动":{"docs":{},"。":{"docs":{},"当":{"docs":{},"前":{"docs":{},"指":{"docs":{},"针":{"docs":{},"到":{"docs":{},"终":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"后":{"docs":{},"指":{"docs":{},"针":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"正":{"docs":{},"好":{"docs":{},"在":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"n":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"能":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"边":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"就":{"docs":{},"能":{"docs":{},"删":{"docs":{},"除":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"n":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"链":{"docs":{},"表":{"docs":{},"不":{"docs":{},"像":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"按":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{},"所":{"docs":{},"有":{"docs":{},"人":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"做":{"docs":{},"这":{"docs":{},"种":{"docs":{},"题":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"是":{"docs":{},"想":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"得":{"docs":{},"出":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"删":{"docs":{},"除":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"n":{"docs":{},"个":{"docs":{},"。":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"样":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"多":{"docs":{},"用":{"docs":{},"于":{"docs":{},"求":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"点":{"docs":{},"的":{"docs":{},"。":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"都":{"docs":{},"是":{"docs":{},"从":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"点":{"docs":{},"出":{"docs":{},"发":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"docs":{},"两":{"docs":{},"步":{"docs":{},"一":{"docs":{},"个":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"docs":{},"一":{"docs":{},"步":{"docs":{},"，":{"docs":{},"当":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"到":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"正":{"docs":{},"好":{"docs":{},"在":{"docs":{},"中":{"docs":{},"点":{"docs":{},"。":{"docs":{"19.-remove-nth-node-from-end-of-list.html":{"ref":"19.-remove-nth-node-from-end-of-list.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"括":{"docs":{},"号":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"问":{"docs":{},"题":{"docs":{},"在":{"docs":{},"上":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"课":{"docs":{},"上":{"docs":{},"也":{"docs":{},"是":{"docs":{},"会":{"docs":{},"讲":{"docs":{},"的":{"docs":{},"。":{"docs":{},"没":{"docs":{},"学":{"docs":{},"过":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"之":{"docs":{},"前":{"docs":{},"可":{"docs":{},"能":{"docs":{},"很":{"docs":{},"难":{"docs":{},"相":{"docs":{},"出":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"来":{"docs":{},"做":{"docs":{},"这":{"docs":{},"题":{"docs":{},"，":{"docs":{},"学":{"docs":{},"完":{"docs":{},"之":{"docs":{},"后":{"docs":{},"就":{"docs":{},"很":{"docs":{},"显":{"docs":{},"然":{"docs":{},"了":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"用":{"docs":{},"处":{"docs":{},"很":{"docs":{},"大":{"docs":{},"，":{"docs":{},"在":{"docs":{},"之":{"docs":{},"后":{"docs":{},"很":{"docs":{},"多":{"docs":{},"地":{"docs":{},"方":{"docs":{},"也":{"docs":{},"会":{"docs":{},"用":{"docs":{},"到":{"docs":{},"。":{"docs":{},"线":{"docs":{},"性":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"组":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"某":{"docs":{},"些":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"一":{"docs":{},"下":{"docs":{},"能":{"docs":{},"否":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{},"这":{"docs":{},"题":{"docs":{},"就":{"docs":{},"是":{"docs":{},"线":{"docs":{},"性":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"需":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"一":{"docs":{},"些":{"docs":{},"条":{"docs":{},"件":{"docs":{},"。":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"括":{"docs":{},"会":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"要":{"docs":{},"和":{"docs":{},"最":{"docs":{},"近":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"括":{"docs":{},"首":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"保":{"docs":{},"存":{"docs":{},"最":{"docs":{},"近":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"括":{"docs":{},"首":{"docs":{},"即":{"docs":{},"可":{"docs":{"20.-valid-parentheses.html":{"ref":"20.-valid-parentheses.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"其":{"docs":{},"实":{"docs":{},"也":{"docs":{},"存":{"docs":{},"在":{"docs":{},"括":{"docs":{},"号":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"首":{"docs":{},"先":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{},"这":{"docs":{},"题":{"docs":{},"比":{"docs":{},"括":{"docs":{},"号":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"需":{"docs":{},"要":{"docs":{},"多":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"右":{"docs":{},"括":{"docs":{},"号":{"docs":{},"多":{"docs":{},"了":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"新":{"docs":{},"开":{"docs":{},"始":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"和":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"括":{"docs":{},"号":{"docs":{},"不":{"docs":{},"能":{"docs":{},"连":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"了":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"。":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"生":{"docs":{},"成":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"需":{"docs":{},"要":{"docs":{},"知":{"docs":{},"道":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"括":{"docs":{},"号":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"哪":{"docs":{},"样":{"docs":{},"的":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"右":{"docs":{},"括":{"docs":{},"号":{"docs":{},"前":{"docs":{},"必":{"docs":{},"须":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"左":{"docs":{},"括":{"docs":{},"号":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"题":{"docs":{},"目":{"docs":{},"中":{"docs":{},"都":{"docs":{},"是":{"docs":{},"小":{"docs":{},"括":{"docs":{},"号":{"docs":{},"号":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"里":{"docs":{},"还":{"docs":{},"不":{"docs":{},"用":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"其":{"docs":{},"他":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"题":{"docs":{},"显":{"docs":{},"然":{"docs":{},"是":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"说":{"docs":{},"是":{"docs":{},"递":{"docs":{},"归":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"单":{"docs":{},"纯":{"docs":{},"的":{"docs":{},"生":{"docs":{},"成":{"docs":{},"所":{"docs":{},"有":{"docs":{},"组":{"docs":{},"合":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"有":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"生":{"docs":{},"成":{"docs":{},"。":{"docs":{},"在":{"docs":{},"生":{"docs":{},"成":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"左":{"docs":{},"括":{"docs":{},"号":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"才":{"docs":{},"能":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"右":{"docs":{},"括":{"docs":{},"号":{"docs":{},"。":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"析":{"docs":{},"函":{"docs":{},"数":{"docs":{},"运":{"docs":{},"行":{"docs":{},"了":{"docs":{},"多":{"docs":{},"少":{"docs":{},"次":{"docs":{},"。":{"docs":{},"分":{"docs":{},"析":{"docs":{},"了":{"docs":{},"很":{"docs":{},"久":{"docs":{},"，":{"docs":{},"得":{"docs":{},"出":{"docs":{},"时":{"docs":{},"间":{"docs":{},"变":{"docs":{},"化":{"docs":{},"满":{"docs":{},"足":{"docs":{},"很":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"就":{"docs":{},"不":{"docs":{},"分":{"docs":{},"析":{"docs":{},"了":{"docs":{"22.-generate-parentheses.html":{"ref":"22.-generate-parentheses.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"k":{"docs":{"23.-merge-k-sorted-lists.html":{"ref":"23.-merge-k-sorted-lists.html","tf":2.015748031496063},"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.03676470588235294},"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0273972602739726},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.04},"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.02631578947368421},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.027777777777777776}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.010362694300518135},"80.-remove-duplicates-from-sorted-array-ii.html":{"ref":"80.-remove-duplicates-from-sorted-array-ii.html","tf":0.011363636363636364}}}}}},"m":{"docs":{},"p":{"docs":{},"最":{"docs":{},"关":{"docs":{},"键":{"docs":{},"的":{"docs":{},"是":{"docs":{},"构":{"docs":{},"建":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"就":{"docs":{},"很":{"docs":{},"好":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"了":{"docs":{},"。":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"求":{"docs":{},"出":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},")":{"docs":{},"，":{"docs":{},"m":{"docs":{},">":{"docs":{},"n":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},")":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588},"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}}}}}},";":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.007352941176470588}}},"=":{"0":{"docs":{},";":{"docs":{},"k":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}}},"docs":{},"i":{"docs":{},";":{"docs":{},"k":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}},"k":{"docs":{},"%":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842}}}}}}},")":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}}},"e":{"docs":{},"y":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748}},".":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.013605442176870748}}}}}},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"题":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"24.-swap-nodes-in-pairs.html":{"ref":"24.-swap-nodes-in-pairs.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"9":{"docs":{},"个":{"docs":{},"月":{"docs":{},"前":{"docs":{},"写":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"还":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"情":{"docs":{},"有":{"docs":{},"可":{"docs":{},"原":{"docs":{},"，":{"docs":{},"毕":{"docs":{},"竟":{"docs":{},"是":{"docs":{},"做":{"docs":{},"到":{"docs":{},"后":{"docs":{},"面":{"docs":{},"几":{"docs":{},"题":{"docs":{},"才":{"docs":{},"慢":{"docs":{},"慢":{"docs":{},"用":{"docs":{},"起":{"docs":{},"来":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"循":{"docs":{},"环":{"docs":{},"里":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"太":{"docs":{},"不":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"了":{"docs":{},"，":{"docs":{},"看":{"docs":{},"着":{"docs":{},"很":{"docs":{},"难":{"docs":{},"受":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"改":{"docs":{},"成":{"docs":{},"了":{"docs":{},"现":{"docs":{},"在":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"代":{"docs":{},"码":{"docs":{},"更":{"docs":{},"加":{"docs":{},"易":{"docs":{},"读":{"docs":{},"，":{"docs":{},"看":{"docs":{},"着":{"docs":{},"舒":{"docs":{},"服":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"介":{"docs":{},"绍":{"docs":{},"的":{"docs":{},"是":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"有":{"4":{"docs":{},"个":{"docs":{},"地":{"docs":{},"方":{"docs":{},"需":{"docs":{},"要":{"docs":{},"我":{"docs":{},"们":{"docs":{},"放":{"docs":{},"置":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"3":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"处":{"docs":{},"理":{"1":{"docs":{"93.-restore-ip-addresses.html":{"ref":"93.-restore-ip-addresses.html","tf":0.022727272727272728}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"题":{"docs":{},"目":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"相":{"docs":{},"等":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"看":{"docs":{},"着":{"docs":{},"自":{"docs":{},"己":{"docs":{},"之":{"docs":{},"前":{"docs":{},"写":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"在":{"docs":{},"太":{"docs":{},"难":{"docs":{},"受":{"docs":{},"，":{"docs":{},"想":{"docs":{},"优":{"docs":{},"化":{"docs":{},"一":{"docs":{},"下":{"docs":{},"。":{"docs":{"27.-remove-element.html":{"ref":"27.-remove-element.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"1":{"docs":{},",":{"docs":{},"q":{"2":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}},"docs":{}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}}}}}}}}}}}},"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}},"e":{"docs":{},"n":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":3.391666666666666},"52.-n-queens-ii.html":{"ref":"52.-n-queens-ii.html","tf":2.7}},"s":{"docs":{},"'":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}},"u":{"docs":{},"e":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.014814814814814815},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.014814814814814815}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.014814814814814815}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.014814814814814815}},")":{"docs":{},";":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}},"f":{"docs":{},"r":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406}}}}}}}}}}}}},";":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}},")":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.015503875968992248}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}},"q":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755}},"q":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.015503875968992248}}},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}},";":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}},"暴":{"docs":{},"力":{"docs":{},"法":{"docs":{},"两":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"h":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"长":{"docs":{},"m":{"docs":{},"，":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"长":{"docs":{},"n":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"m":{"docs":{},")":{"docs":{"28.-implement-strstrkmp-suan-fa.html":{"ref":"28.-implement-strstrkmp-suan-fa.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"超":{"docs":{},"过":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},",":{"docs":{},"那":{"docs":{},"就":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{"29.-divide-two-integers.html":{"ref":"29.-divide-two-integers.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.014705882352941176}},"{":{"docs":{"61.-rotate-list.html":{"ref":"61.-rotate-list.html","tf":0.005263157894736842},"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988},"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.012987012987012988},"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}},"→":{"docs":{"31.-next-permutation.html":{"ref":"31.-next-permutation.html","tf":0.022058823529411766}}},"不":{"docs":{},"管":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"还":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"但":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"明":{"docs":{},"显":{"docs":{},"好":{"docs":{},"很":{"docs":{},"多":{"docs":{},"。":{"docs":{"32.-longest-valid-parentheses.html":{"ref":"32.-longest-valid-parentheses.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"排":{"docs":{},"除":{"docs":{},"另":{"docs":{},"一":{"docs":{},"半":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"找":{"docs":{},"到":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"是":{"docs":{},"否":{"docs":{},"期":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"就":{"docs":{},"进":{"docs":{},"入":{"docs":{},"这":{"docs":{},"一":{"docs":{},"半":{"docs":{},"查":{"docs":{},"找":{"docs":{},"否":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"另":{"docs":{},"一":{"docs":{},"半":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"每":{"docs":{},"次":{"docs":{},"排":{"docs":{},"除":{"docs":{},"一":{"docs":{},"半":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"就":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"33.-search-in-rotated-sorted-array.html":{"ref":"33.-search-in-rotated-sorted-array.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"改":{"docs":{},"了":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"一":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"重":{"docs":{},"复":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{},"在":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"进":{"docs":{},"入":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"将":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"加":{"docs":{},"一":{"docs":{},"。":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"那":{"docs":{},"样":{"docs":{},"不":{"docs":{},"变":{"docs":{"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"u":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"同":{"docs":{},"理":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"将":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},">":{"docs":{},"=":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"改":{"docs":{},"为":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},">":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"会":{"docs":{},"在":{"docs":{},"刚":{"docs":{},"好":{"docs":{},"大":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"重":{"docs":{},"合":{"docs":{},"。":{"docs":{},"我":{"docs":{},"理":{"docs":{},"解":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"也":{"docs":{},"是":{"docs":{},"用":{"docs":{},"了":{"docs":{},"很":{"docs":{},"久":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"看":{"docs":{},"文":{"docs":{},"字":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"会":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"疑":{"docs":{},"惑":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"反":{"docs":{},"复":{"docs":{},"看":{"docs":{},"看":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"自":{"docs":{},"习":{"docs":{},"推":{"docs":{},"敲":{"docs":{},"。":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"2":{"docs":{},"^":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"应":{"docs":{},"该":{"docs":{},"不":{"docs":{},"用":{"docs":{},"那":{"docs":{},"么":{"docs":{},"久":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"后":{"docs":{},"期":{"docs":{},"，":{"docs":{},"很":{"docs":{},"多":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"加":{"docs":{},"入":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"直":{"docs":{},"接":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},"；":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"慢":{"docs":{},"的":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"二":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{},"得":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"，":{"docs":{},"类":{"docs":{},"似":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"法":{"docs":{},"，":{"docs":{},"一":{"docs":{},"共":{"docs":{},"需":{"docs":{},"要":{"docs":{},"执":{"docs":{},"行":{"docs":{},"n":{"docs":{},"!":{"docs":{},"次":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"就":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"!":{"docs":{},")":{"docs":{},".":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"使":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"是":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"首":{"docs":{},"先":{"docs":{},"定":{"docs":{},"好":{"docs":{},"一":{"docs":{},"个":{"docs":{},"中":{"docs":{},"间":{"docs":{},"节":{"docs":{},"点":{"docs":{},"当":{"docs":{},"做":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"比":{"docs":{},"这":{"docs":{},"个":{"docs":{},"值":{"docs":{},"小":{"docs":{},"的":{"docs":{},"当":{"docs":{},"做":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"大":{"docs":{},"的":{"docs":{},"当":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"代":{"docs":{},"码":{"docs":{},"简":{"docs":{},"化":{"docs":{},"很":{"docs":{},"多":{"docs":{},"了":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"单":{"docs":{},"就":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"行":{"docs":{},"，":{"docs":{},"会":{"docs":{},"有":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"1":{"docs":{"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.006024096385542169}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"双":{"docs":{},"重":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{"48.-rotate-image.html":{"ref":"48.-rotate-image.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"操":{"docs":{},"作":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"+":{"docs":{},"n":{"docs":{},")":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"转":{"docs":{},"置":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.008}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"得":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"单":{"docs":{},"纯":{"docs":{},"的":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{},"这":{"docs":{},"其":{"docs":{},"实":{"docs":{},"很":{"docs":{},"像":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"和":{"docs":{},"u":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"是":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"是":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"减":{"docs":{},"一":{"docs":{},"就":{"docs":{},"行":{"docs":{},"了":{"docs":{},"。":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"办":{"docs":{},"法":{"docs":{},"确":{"docs":{},"定":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"是":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"中":{"docs":{},"的":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"也":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"在":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"中":{"docs":{},"只":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"判":{"docs":{},"断":{"docs":{},"分":{"docs":{},"支":{"docs":{},"，":{"docs":{},"会":{"docs":{},"比":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"3":{"docs":{},"个":{"docs":{},"判":{"docs":{},"断":{"docs":{},"分":{"docs":{},"支":{"docs":{},"更":{"docs":{},"加":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"以":{"docs":{},"及":{"docs":{},"快":{"docs":{},"速":{"docs":{"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"ref":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","tf":0.00847457627118644}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"懂":{"docs":{},"意":{"docs":{},"思":{"docs":{},"之":{"docs":{},"后":{"docs":{},"发":{"docs":{},"现":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"即":{"docs":{},"可":{"docs":{"35.-search-insert-position.html":{"ref":"35.-search-insert-position.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"存":{"docs":{},"放":{"docs":{},"之":{"docs":{},"前":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"只":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{},"这":{"docs":{},"也":{"docs":{},"类":{"docs":{},"似":{"docs":{},"一":{"docs":{},"些":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"题":{"docs":{},"目":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"内":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"存":{"docs":{},"数":{"docs":{},"独":{"docs":{},"规":{"docs":{},"则":{"docs":{},"下":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"对":{"docs":{},"后":{"docs":{},"面":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{},"在":{"docs":{},"数":{"docs":{},"独":{"docs":{},"中":{"docs":{},"，":{"docs":{},"行":{"docs":{},"和":{"docs":{},"列":{"docs":{},"以":{"docs":{},"及":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"中":{"docs":{},"不":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"将":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"3":{"docs":{},"个":{"docs":{},"规":{"docs":{},"则":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"思":{"docs":{},"路":{"docs":{},"其":{"docs":{},"实":{"docs":{},"不":{"docs":{},"难":{"docs":{},"得":{"docs":{},"出":{"docs":{},"，":{"docs":{},"难":{"docs":{},"得":{"docs":{},"出":{"docs":{},"的":{"docs":{},"是":{"docs":{},"该":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"中":{"docs":{},"保":{"docs":{},"存":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{},"如":{"docs":{},"何":{"docs":{},"保":{"docs":{},"存":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"84.-largest-rectangle-in-histogram.html":{"ref":"84.-largest-rectangle-in-histogram.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"还":{"docs":{},"有":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"，":{"docs":{},"去":{"docs":{},"看":{"docs":{},"了":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"来":{"docs":{},"做":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"需":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"默":{"docs":{},"认":{"docs":{},"只":{"docs":{},"能":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"但":{"docs":{},"是":{"docs":{},"其":{"docs":{},"实":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"定":{"docs":{},"义":{"docs":{},"好":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"看":{"docs":{},"情":{"docs":{},"况":{"docs":{},"从":{"docs":{},"左":{"docs":{},"右":{"docs":{},"分":{"docs":{},"别":{"docs":{},"将":{"docs":{},"结":{"docs":{},"果":{"docs":{},"放":{"docs":{},"置":{"docs":{},"进":{"docs":{},"去":{"docs":{},"。":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{"36.-valid-sudoku.html":{"ref":"36.-valid-sudoku.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"n":{"docs":{},"²":{"docs":{},"次":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"次":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"86.-partition-list.html":{"ref":"86.-partition-list.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.024691358024691357}}}},"&":{"docs":{},"&":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.012738853503184714},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.024691358024691357}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}},")":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}}}}}},"|":{"docs":{},"|":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357},"40.-combination-sum-ii.html":{"ref":"40.-combination-sum-ii.html","tf":0.012345679012345678}}}},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"世":{"docs":{},"家":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"2":{"docs":{},"^":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"很":{"docs":{},"慢":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"加":{"docs":{},"入":{"docs":{},"了":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"一":{"docs":{},"定":{"docs":{},"程":{"docs":{},"度":{"docs":{},"上":{"docs":{},"加":{"docs":{},"快":{"docs":{},"了":{"docs":{},"运":{"docs":{},"行":{"docs":{},"速":{"docs":{},"度":{"docs":{},"的":{"docs":{},"。":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"归":{"docs":{},"题":{"docs":{},"目":{"docs":{},"本":{"docs":{},"身":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"0":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}},"docs":{}}}}}}}}}}}}},"组":{"docs":{},"合":{"docs":{},"数":{"docs":{},"相":{"docs":{},"加":{"docs":{},"最":{"docs":{},"后":{"docs":{},"和":{"docs":{},"为":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"基":{"docs":{},"本":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{},"集":{"docs":{},"合":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"得":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"和":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"数":{"docs":{},"字":{"docs":{},"相":{"docs":{},"加":{"docs":{},"如":{"docs":{},"果":{"docs":{},"已":{"docs":{},"经":{"docs":{},"大":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"就":{"docs":{},"没":{"docs":{},"必":{"docs":{},"要":{"docs":{},"继":{"docs":{},"续":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"了":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"加":{"docs":{},"入":{"docs":{},"了":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"大":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"进":{"docs":{},"入":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"之":{"docs":{},"前":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"满":{"docs":{},"足":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"满":{"docs":{},"足":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"进":{"docs":{},"入":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"39.-combination-sum.html":{"ref":"39.-combination-sum.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"需":{"docs":{},"要":{"docs":{},"放":{"docs":{},"置":{"docs":{},"k":{"docs":{},"个":{"docs":{},"值":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"值":{"docs":{},"只":{"docs":{},"能":{"docs":{},"比":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"小":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"重":{"docs":{},"复":{"docs":{},"。":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"不":{"docs":{},"是":{"docs":{},"太":{"docs":{},"好":{"docs":{},"分":{"docs":{},"析":{"docs":{},"，":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"一":{"docs":{},"般":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"2":{"docs":{},"^":{"docs":{},"n":{"docs":{},")":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"例":{"docs":{},"题":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{"77.-combinations.html":{"ref":"77.-combinations.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}},"得":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"缺":{"docs":{},"失":{"docs":{},"的":{"docs":{},"正":{"docs":{},"数":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"可":{"docs":{},"以":{"docs":{},"很":{"docs":{},"好":{"docs":{},"地":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"下":{"docs":{},"标":{"docs":{},"对":{"docs":{},"应":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"将":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"数":{"docs":{},"填":{"docs":{},"入":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"当":{"docs":{},"中":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"再":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"缺":{"docs":{},"失":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"41.-first-missing-positive.html":{"ref":"41.-first-missing-positive.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"排":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"算":{"docs":{},"法":{"docs":{},"课":{"docs":{},"将":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"例":{"docs":{},"题":{"docs":{},"。":{"docs":{},"直":{"docs":{},"接":{"docs":{},"每":{"docs":{},"次":{"docs":{},"交":{"docs":{},"换":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"情":{"docs":{},"况":{"docs":{},"都":{"docs":{},"交":{"docs":{},"换":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"解":{"docs":{},"释":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"交":{"docs":{},"换":{"docs":{},"到":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"组":{"docs":{},"合":{"docs":{},"数":{"docs":{},"相":{"docs":{},"加":{"docs":{},"得":{"docs":{},"到":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"很":{"docs":{},"像":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"，":{"docs":{},"加":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"区":{"docs":{},"分":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"加":{"docs":{},"入":{"docs":{},"新":{"docs":{},"组":{"docs":{},"合":{"docs":{},"。":{"docs":{"46.-permutations.html":{"ref":"46.-permutations.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"2":{"docs":{},"^":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"可":{"docs":{},"以":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"出":{"docs":{},"现":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"两":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"分":{"docs":{},"支":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"2":{"docs":{},"^":{"docs":{},"n":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"子":{"docs":{},"集":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"题":{"docs":{},"相":{"docs":{},"比":{"docs":{},"，":{"docs":{},"多":{"docs":{},"了":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"在":{"docs":{},"计":{"docs":{},"算":{"docs":{},"子":{"docs":{},"集":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"处":{"docs":{},"理":{"docs":{},"重":{"docs":{},"复":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"和":{"docs":{},"第":{"docs":{},"一":{"docs":{},"题":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"。":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"一":{"docs":{},"次":{"docs":{},"次":{"docs":{},"将":{"docs":{},"新":{"docs":{},"数":{"docs":{},"字":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"到":{"docs":{},"之":{"docs":{},"前":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{},"。":{"docs":{"90.-subsets-ii.html":{"ref":"90.-subsets-ii.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"有":{"docs":{},"个":{"docs":{},"性":{"docs":{},"质":{"docs":{},"就":{"docs":{},"是":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"直":{"docs":{},"接":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"保":{"docs":{},"存":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"就":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"浅":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"有":{"docs":{},"找":{"docs":{},"的":{"docs":{},"极":{"docs":{},"值":{"docs":{},"的":{"docs":{},"性":{"docs":{},"质":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"接":{"docs":{},"水":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"异":{"docs":{},"曲":{"docs":{},"同":{"docs":{},"工":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"结":{"docs":{},"题":{"docs":{},"。":{"docs":{},"哪":{"docs":{},"边":{"docs":{},"短":{"docs":{},"，":{"docs":{},"动":{"docs":{},"哪":{"docs":{},"边":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"两":{"docs":{},"指":{"docs":{},"针":{"docs":{},"重":{"docs":{},"合":{"docs":{},"退":{"docs":{},"出":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{},"中":{"docs":{},"间":{"docs":{},"维":{"docs":{},"护":{"docs":{},"左":{"docs":{},"右":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"存":{"docs":{},"水":{"docs":{},"量":{"docs":{},"等":{"docs":{},"于":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"减":{"docs":{},"去":{"docs":{},"当":{"docs":{},"前":{"docs":{},"值":{"docs":{},"。":{"docs":{"42.-trapping-rain-water.html":{"ref":"42.-trapping-rain-water.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"55.-jump-game.html":{"ref":"55.-jump-game.html","tf":0.011363636363636364}}}}}},"旋":{"docs":{},"转":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"题":{"docs":{},"类":{"docs":{},"似":{"docs":{},"解":{"docs":{},"答":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"移":{"docs":{},"步":{"docs":{},"到":{"docs":{},"s":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"一":{"docs":{},"下":{"docs":{"107.-binary-tree-level-order-traversal-ii.html":{"ref":"107.-binary-tree-level-order-traversal-ii.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.00684931506849315}}}}}}}}},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"—":{"docs":{},"—":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"!":{"docs":{},")":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"会":{"docs":{},"比":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"慢":{"docs":{},"很":{"docs":{},"多":{"docs":{},"，":{"docs":{},"原":{"docs":{},"因":{"docs":{},"就":{"docs":{},"在":{"docs":{},"于":{"docs":{},"这":{"docs":{},"里":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"没":{"docs":{},"用":{"docs":{},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"递":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"会":{"docs":{},"复":{"docs":{},"制":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"开":{"docs":{},"销":{"docs":{},"会":{"docs":{},"很":{"docs":{},"大":{"docs":{},"。":{"docs":{"47.-permutations-ii.html":{"ref":"47.-permutations-ii.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"更":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"已":{"docs":{},"经":{"docs":{},"直":{"docs":{},"接":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"了":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"出":{"docs":{},"中":{"docs":{},"间":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"交":{"docs":{},"叉":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"合":{"docs":{},"并":{"docs":{},"。":{"docs":{},"前":{"docs":{},"后":{"docs":{},"没":{"docs":{},"有":{"docs":{},"交":{"docs":{},"叉":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"变":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"插":{"docs":{},"入":{"docs":{},"。":{"docs":{"57.-insert-interval.html":{"ref":"57.-insert-interval.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"甚":{"docs":{},"至":{"docs":{},"比":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{"83.-remove-duplicates-from-sorted-list.html":{"ref":"83.-remove-duplicates-from-sorted-list.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"换":{"docs":{},"汤":{"docs":{},"不":{"docs":{},"换":{"docs":{},"药":{"docs":{},"。":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"是":{"docs":{},"路":{"docs":{},"线":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"。":{"docs":{"64.-minimum-path-sum.html":{"ref":"64.-minimum-path-sum.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"题":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"简":{"docs":{},"化":{"docs":{},"了":{"docs":{},"一":{"docs":{},"点":{"docs":{},"。":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"需":{"docs":{},"要":{"docs":{},"输":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"保":{"docs":{},"存":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"开":{"docs":{},"始":{"docs":{},"和":{"docs":{},"结":{"docs":{},"束":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"来":{"docs":{},"映":{"docs":{},"射":{"docs":{},"他":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"只":{"docs":{},"要":{"docs":{},"树":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"固":{"docs":{},"定":{"docs":{},"好":{"docs":{},"，":{"docs":{},"能":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"也":{"docs":{},"就":{"docs":{},"出":{"docs":{},"来":{"docs":{},"了":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"结":{"docs":{},"果":{"docs":{"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"加":{"docs":{},"法":{"docs":{},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"进":{"docs":{},"位":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"，":{"docs":{},"两":{"docs":{},"数":{"docs":{},"相":{"docs":{},"加":{"docs":{},"再":{"docs":{},"加":{"docs":{},"上":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"。":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"是":{"docs":{},"这":{"docs":{},"一":{"docs":{},"位":{"docs":{},"，":{"docs":{},"改":{"docs":{},"变":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"注":{"docs":{},"意":{"docs":{},"开":{"docs":{},"头":{"docs":{},"的":{"0":{"docs":{},"需":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"?":{"docs":{"44.-wildcard-matching.html":{"ref":"44.-wildcard-matching.html","tf":0.006369426751592357}}},"假":{"docs":{},"定":{"docs":{},"有":{"docs":{},"n":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"平":{"docs":{},"均":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"m":{"docs":{},"，":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"排":{"docs":{},"序":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"比":{"docs":{},"较":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"需":{"docs":{},"要":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"保":{"docs":{},"存":{"docs":{},"之":{"docs":{},"前":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"*":{"docs":{},"n":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"49.-group-anagrams.html":{"ref":"49.-group-anagrams.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"求":{"2":{"docs":{},"的":{"1":{"0":{"0":{"docs":{},"次":{"docs":{},"方":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"直":{"docs":{},"接":{"docs":{},"乘":{"1":{"0":{"0":{"docs":{},"次":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"没":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"。":{"docs":{},"完":{"docs":{},"全":{"docs":{},"可":{"docs":{},"以":{"docs":{},"求":{"4":{"docs":{},"的":{"5":{"0":{"docs":{},"次":{"docs":{},"方":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"1":{"6":{"docs":{},"的":{"2":{"5":{"docs":{},"次":{"docs":{},"方":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"每":{"docs":{},"次":{"docs":{},"能":{"docs":{},"减":{"docs":{},"少":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"量":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"就":{"docs":{},"是":{"docs":{},"还":{"docs":{},"有":{"docs":{},"负":{"docs":{},"数":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"负":{"docs":{},"数":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"将":{"docs":{},"x":{"docs":{},"化":{"docs":{},"为":{"1":{"docs":{},"/":{"docs":{},"x":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"n":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"正":{"docs":{},"数":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"，":{"docs":{},"一":{"docs":{},"种":{"docs":{},"最":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"就":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{},"最":{"docs":{},"后":{"docs":{},"直":{"docs":{},"接":{"docs":{},"将":{"docs":{},"n":{"docs":{"50.-pow-x-n.html":{"ref":"50.-pow-x-n.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"出":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"求":{"docs":{},"解":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"保":{"docs":{},"存":{"docs":{},"节":{"docs":{},"点":{"docs":{},"高":{"docs":{},"度":{"docs":{},"可":{"docs":{},"以":{"docs":{},"最":{"docs":{},"左":{"docs":{},"到":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"再":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"保":{"docs":{},"存":{"docs":{},"节":{"docs":{},"点":{"docs":{},"高":{"docs":{},"度":{"docs":{},"最":{"docs":{},"右":{"docs":{},"可":{"docs":{},"以":{"docs":{},"到":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"还":{"docs":{},"有":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"保":{"docs":{},"存":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"以":{"docs":{},"为":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"慢":{"docs":{},"慢":{"docs":{},"加":{"docs":{},"高":{"docs":{},"维":{"docs":{},"度":{"docs":{},"。":{"docs":{},"起":{"docs":{},"始":{"docs":{},"时":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"为":{"docs":{},"s":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"经":{"docs":{},"典":{"docs":{},"的":{"docs":{},"n":{"docs":{},"皇":{"docs":{},"后":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"放":{"docs":{},"之":{"docs":{},"前":{"docs":{},"首":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"这":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"是":{"docs":{},"否":{"docs":{},"合":{"docs":{},"法":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"合":{"docs":{},"法":{"docs":{},"，":{"docs":{},"放":{"docs":{},"入":{"docs":{},"这":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"合":{"docs":{},"法":{"docs":{},"判":{"docs":{},"断":{"docs":{},"下":{"docs":{},"个":{"docs":{},"能":{"docs":{},"放":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"能":{"docs":{},"放":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"。":{"docs":{"51.-n-queens.html":{"ref":"51.-n-queens.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"能":{"docs":{},"合":{"docs":{},"并":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"范":{"docs":{},"围":{"docs":{},"有":{"docs":{},"重":{"docs":{},"合":{"docs":{},"。":{"docs":{},"重":{"docs":{},"合":{"docs":{},"的":{"docs":{},"话":{"docs":{},"存":{"docs":{},"在":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"是":{"docs":{},"左":{"docs":{},"边":{"docs":{},"重":{"docs":{},"合":{"docs":{},"，":{"docs":{},"一":{"docs":{},"种":{"docs":{},"是":{"docs":{},"右":{"docs":{},"边":{"docs":{},"重":{"docs":{},"合":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"同":{"docs":{},"时":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"两":{"docs":{},"个":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"情":{"docs":{},"况":{"docs":{},"会":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"很":{"docs":{},"多":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"首":{"docs":{},"先":{"docs":{},"按":{"docs":{},"照":{"docs":{},"做":{"docs":{},"范":{"docs":{},"围":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"消":{"docs":{},"除":{"docs":{},"左":{"docs":{},"边":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"一":{"docs":{},"直":{"docs":{},"看":{"docs":{},"右":{"docs":{},"边":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"与":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"重":{"docs":{},"合":{"docs":{},"，":{"docs":{},"合":{"docs":{},"并":{"docs":{},"两":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"继":{"docs":{},"续":{"docs":{},"看":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"重":{"docs":{},"合":{"docs":{},"，":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"56.-merge-intervals.html":{"ref":"56.-merge-intervals.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"_":{"2":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}},"docs":{}}},"k":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{"60.-permutation-sequence.html":{"ref":"60.-permutation-sequence.html","tf":0.013333333333333334}}}}}}},"需":{"docs":{},"要":{"docs":{},"填":{"docs":{},"满":{"docs":{},"n":{"docs":{},"*":{"docs":{},"n":{"docs":{},"个":{"docs":{},"格":{"docs":{},"子":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"填":{"docs":{},"格":{"docs":{},"子":{"docs":{},"移":{"docs":{},"动":{"docs":{},"时":{"docs":{},"间":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{"59.-spiral-matrix-ii.html":{"ref":"59.-spiral-matrix-ii.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"维":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{"62.-unique-paths.html":{"ref":"62.-unique-paths.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"可":{"docs":{},"以":{"docs":{},"排":{"docs":{},"除":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"g":{"docs":{},"x":{"docs":{},")":{"docs":{"69.-sqrt-x.html":{"ref":"69.-sqrt-x.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"问":{"docs":{},"题":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"还":{"docs":{},"是":{"docs":{},"要":{"docs":{},"知":{"docs":{},"道":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"。":{"docs":{},"毕":{"docs":{},"竟":{"docs":{},"如":{"docs":{},"果":{"docs":{},"节":{"docs":{},"点":{"docs":{},"很":{"docs":{},"多":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"多":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"栈":{"docs":{},"开":{"docs":{},"销":{"docs":{},"会":{"docs":{},"很":{"docs":{},"大":{"docs":{},"。":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"掌":{"docs":{},"握":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"不":{"docs":{},"是":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"定":{"docs":{},"义":{"docs":{},"是":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"高":{"docs":{},"度":{"docs":{},"差":{"docs":{},"要":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"1":{"docs":{},".":{"docs":{},"于":{"docs":{},"是":{"docs":{},"这":{"docs":{},"题":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"类":{"docs":{},"似":{"docs":{},"求":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"高":{"docs":{},"度":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"之":{"docs":{},"前":{"docs":{},"也":{"docs":{},"做":{"docs":{},"过":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"高":{"docs":{},"度":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"求":{"docs":{},"出":{"docs":{},"高":{"docs":{},"度":{"docs":{},"之":{"docs":{},"后":{"docs":{},"加":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"判":{"docs":{},"断":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"的":{"docs":{},"如":{"docs":{},"何":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"求":{"docs":{},"高":{"docs":{},"度":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"面":{"docs":{},"临":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"一":{"docs":{},"种":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"是":{"docs":{},"把":{"docs":{},"求":{"docs":{},"高":{"docs":{},"度":{"docs":{},"的":{"docs":{},"照":{"docs":{},"搬":{"docs":{},"过":{"docs":{},"来":{"docs":{},"，":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"全":{"docs":{},"局":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"，":{"docs":{},"全":{"docs":{},"局":{"docs":{},"变":{"docs":{},"量":{"docs":{},"为":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"这":{"docs":{},"里":{"docs":{},"用":{"docs":{},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},".":{"docs":{},"由":{"docs":{},"于":{"docs":{},"题":{"docs":{},"目":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"这":{"docs":{},"么":{"docs":{},"大":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"和":{"docs":{},"任":{"docs":{},"何":{"docs":{},"子":{"docs":{},"树":{"docs":{},"组":{"docs":{},"合":{"docs":{},"都":{"docs":{},"是":{"docs":{},"不":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"的":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"会":{"docs":{},"传":{"docs":{},"递":{"docs":{},"到":{"docs":{},"调":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"来":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"还":{"docs":{},"是":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"比":{"docs":{},"于":{"docs":{},"上":{"docs":{},"题":{"docs":{},"加":{"docs":{},"入":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"还":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{"63.-unique-paths-ii.html":{"ref":"63.-unique-paths-ii.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}}}}}},"当":{"docs":{},"于":{"docs":{},"对":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"性":{"docs":{},"处":{"docs":{},"理":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"67.-add-binary.html":{"ref":"67.-add-binary.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"拉":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"相":{"docs":{},"对":{"docs":{},"于":{"docs":{},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"减":{"docs":{},"少":{"docs":{},"了":{"docs":{},"线":{"docs":{},"性":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"从":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"减":{"docs":{},"到":{"docs":{},"了":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"说":{"docs":{},"是":{"docs":{},"爬":{"docs":{},"楼":{"docs":{},"梯":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"拉":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"。":{"docs":{},"当":{"docs":{},"前":{"docs":{},"值":{"docs":{},"等":{"docs":{},"于":{"docs":{},"前":{"docs":{},"两":{"docs":{},"个":{"docs":{},"的":{"docs":{},"值":{"docs":{},"相":{"docs":{},"加":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"保":{"docs":{},"存":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"保":{"docs":{},"存":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"70.-climbing-stairs.html":{"ref":"70.-climbing-stairs.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"则":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},"=":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},")":{"docs":{},",":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"它":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"重":{"docs":{},"新":{"docs":{},"设":{"docs":{},"为":{"docs":{},"空":{"docs":{},"（":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"树":{"docs":{},"的":{"docs":{},"形":{"docs":{},"状":{"docs":{},"）":{"docs":{},"。":{"docs":{},"输":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"更":{"docs":{},"新":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"。":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"空":{"docs":{},"，":{"docs":{},"将":{"docs":{},"它":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"更":{"docs":{},"新":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"。":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"在":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"下":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"输":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"作":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"做":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"目":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"会":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"会":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{},"最":{"docs":{},"浅":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"用":{"docs":{},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"降":{"docs":{},"低":{"docs":{},"很":{"docs":{},"多":{"docs":{},"的":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"应":{"docs":{},"该":{"docs":{},"也":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"一":{"docs":{},"天":{"docs":{},"的":{"docs":{},"价":{"docs":{},"格":{"docs":{},"比":{"docs":{},"今":{"docs":{},"天":{"docs":{},"高":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"直":{"docs":{},"接":{"docs":{},"把":{"docs":{},"利":{"docs":{},"润":{"docs":{},"加":{"docs":{},"上":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"之":{"docs":{},"后":{"docs":{},"价":{"docs":{},"格":{"docs":{},"持":{"docs":{},"续":{"docs":{},"走":{"docs":{},"高":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"先":{"docs":{},"不":{"docs":{},"加":{"docs":{},"利":{"docs":{},"润":{"docs":{},"，":{"docs":{},"一":{"docs":{},"直":{"docs":{},"往":{"docs":{},"后":{"docs":{},"看":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"最":{"docs":{},"高":{"docs":{},"的":{"docs":{},"价":{"docs":{},"格":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"最":{"docs":{},"高":{"docs":{},"的":{"docs":{},"价":{"docs":{},"格":{"docs":{},"减":{"docs":{},"去":{"docs":{},"最":{"docs":{},"低":{"docs":{},"的":{"docs":{},"价":{"docs":{},"格":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"利":{"docs":{},"润":{"docs":{},"增":{"docs":{},"益":{"docs":{},"。":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"加":{"docs":{},"记":{"docs":{},"忆":{"docs":{},"模":{"docs":{},"式":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"就":{"docs":{},"跟":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"加":{"docs":{},"了":{"docs":{},"记":{"docs":{},"忆":{"docs":{},"模":{"docs":{},"式":{"docs":{},"，":{"docs":{},"算":{"docs":{},"法":{"docs":{},"快":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"这":{"docs":{},"里":{"docs":{},"不":{"docs":{},"好":{"docs":{},"分":{"docs":{},"析":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"处":{"docs":{},"理":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"之":{"docs":{},"前":{"docs":{},"也":{"docs":{},"总":{"docs":{},"结":{"docs":{},"了":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"题":{"docs":{},"目":{"docs":{},"的":{"docs":{},"几":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"字":{"docs":{},"典":{"docs":{},"树":{"docs":{},"等":{"docs":{},"等":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"看":{"docs":{},"到":{"docs":{},"题":{"docs":{},"目":{"docs":{},"找":{"docs":{},"不":{"docs":{},"到":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"做":{"docs":{},"过":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"，":{"docs":{},"就":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"几":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"试":{"docs":{},"试":{"docs":{},"。":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"这":{"docs":{},"题":{"docs":{},"其":{"docs":{},"实":{"docs":{},"和":{"docs":{},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"串":{"docs":{},"问":{"docs":{},"题":{"docs":{},"很":{"docs":{},"像":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"得":{"docs":{},"到":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"知":{"docs":{},"道":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},")":{"docs":{},",":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},")":{"docs":{},"三":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{"72.-edit-distance.html":{"ref":"72.-edit-distance.html","tf":0.007751937984496124}}},"docs":{}}}}},"是":{"docs":{},"s":{"1":{"docs":{},"长":{"docs":{},"m":{"docs":{},"，":{"docs":{},"s":{"2":{"docs":{},"长":{"docs":{},"n":{"docs":{},"，":{"docs":{},"会":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"*":{"docs":{},"n":{"docs":{},"的":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},",":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"*":{"docs":{},"n":{"docs":{},")":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}},"能":{"docs":{},"否":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"的":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"标":{"docs":{},"志":{"0":{"docs":{},"，":{"1":{"docs":{},"的":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"交":{"docs":{},"换":{"docs":{},"到":{"0":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"交":{"docs":{},"换":{"docs":{},"到":{"1":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{"75.-sort-colors.html":{"ref":"75.-sort-colors.html","tf":0.009433962264150943}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"产":{"docs":{},"生":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"做":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"题":{"docs":{},"目":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"需":{"docs":{},"要":{"docs":{},"求":{"docs":{},"连":{"docs":{},"续":{"docs":{},"序":{"docs":{},"列":{"docs":{},"满":{"docs":{},"足":{"docs":{},"一":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"都":{"docs":{},"能":{"docs":{},"用":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"前":{"docs":{},"一":{"docs":{},"后":{"docs":{},"指":{"docs":{},"针":{"docs":{},"代":{"docs":{},"表":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"。":{"docs":{"76.-minimum-window-substring.html":{"ref":"76.-minimum-window-substring.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"似":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"得":{"docs":{},"到":{"docs":{},"组":{"docs":{},"合":{"docs":{},"，":{"docs":{},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"得":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"组":{"docs":{},"合":{"docs":{},"。":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"改":{"docs":{},"变":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"将":{"docs":{},"中":{"docs":{},"间":{"docs":{},"结":{"docs":{},"果":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"到":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"在":{"docs":{},"进":{"docs":{},"入":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"在":{"docs":{},"递":{"docs":{},"归":{"docs":{},"基":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"能":{"docs":{},"到":{"docs":{},"达":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{"78.-subsets.html":{"ref":"78.-subsets.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.00980392156862745}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"安":{"docs":{},"放":{"docs":{},"数":{"docs":{},"字":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"也":{"docs":{},"很":{"docs":{},"像":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"构":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"列":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"只":{"docs":{},"是":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"列":{"docs":{},"举":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"用":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"多":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"的":{"docs":{},"一":{"docs":{},"点":{"docs":{},"是":{"docs":{},"，":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"记":{"docs":{},"录":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"之":{"docs":{},"前":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"多":{"docs":{},"少":{"docs":{},"次":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"次":{"docs":{},"安":{"docs":{},"放":{"docs":{},"就":{"docs":{},"不":{"docs":{},"安":{"docs":{},"放":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"很":{"docs":{},"多":{"docs":{},"重":{"docs":{},"复":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"很":{"docs":{},"多":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"最":{"docs":{},"后":{"docs":{},"会":{"docs":{},"汇":{"docs":{},"聚":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"用":{"docs":{},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"方":{"docs":{},"法":{"docs":{},"保":{"docs":{},"存":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"会":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"午":{"docs":{},"上":{"docs":{},"课":{"docs":{},"忽":{"docs":{},"然":{"docs":{},"想":{"docs":{},"通":{"docs":{},"了":{"docs":{},"中":{"docs":{},"午":{"docs":{},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"我":{"docs":{},"中":{"docs":{},"午":{"docs":{},"出":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"^":{"docs":{},"=":{"1":{"docs":{},".":{"docs":{},"大":{"docs":{},"家":{"docs":{},"应":{"docs":{},"该":{"docs":{},"都":{"docs":{},"知":{"docs":{},"道":{"docs":{},"，":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"是":{"1":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"的":{"docs":{},"，":{"docs":{},"有":{"8":{"docs":{},"位":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"数":{"docs":{},"字":{"1":{"docs":{},"是":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"异":{"docs":{},"或":{"docs":{},"之":{"docs":{},"后":{"docs":{},"只":{"docs":{},"有":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"位":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"。":{"docs":{},"只":{"docs":{},"改":{"docs":{},"变":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"位":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"导":{"docs":{},"致":{"docs":{},"异":{"docs":{},"或":{"docs":{},"之":{"docs":{},"后":{"docs":{},"和":{"docs":{},"其":{"docs":{},"他":{"docs":{},"字":{"docs":{},"符":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"都":{"docs":{},"类":{"docs":{},"似":{"docs":{},"一":{"docs":{},"种":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"法":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"从":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"开":{"docs":{},"始":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"对":{"docs":{},"的":{"docs":{},"，":{"docs":{},"就":{"docs":{},"从":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"4":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"继":{"docs":{},"续":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"层":{"docs":{},"都":{"docs":{},"有":{"4":{"docs":{},"个":{"docs":{},"分":{"docs":{},"量":{"docs":{},"。":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"到":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"我":{"docs":{},"这":{"docs":{},"里":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"完":{"docs":{},"，":{"docs":{},"我":{"docs":{},"去":{"docs":{},"我":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"我":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"能":{"docs":{},"再":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"这":{"docs":{},"个":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"了":{"docs":{},"。":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"想":{"docs":{},"通":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"将":{"docs":{},"代":{"docs":{},"码":{"docs":{},"改":{"docs":{},"为":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"^":{"docs":{},"=":{"2":{"5":{"5":{"docs":{},"就":{"docs":{},"稳":{"docs":{},"稳":{"docs":{},"的":{"docs":{},"过":{"docs":{},"了":{"docs":{},"。":{"docs":{},"（":{"2":{"5":{"5":{"docs":{},"=":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"docs":{},"）":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"下":{"docs":{},"面":{"6":{"docs":{},"项":{"docs":{},"相":{"docs":{},"加":{"docs":{"1223.-dice-roll-simulation.html":{"ref":"1223.-dice-roll-simulation.html","tf":0.005434782608695652}}}}}},"docs":{}}}}}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"用":{"docs":{},"标":{"docs":{},"志":{"docs":{},"，":{"docs":{},"显":{"docs":{},"示":{"docs":{},"这":{"docs":{},"里":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"了":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"完":{"docs":{},"之":{"docs":{},"后":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"0":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"之":{"docs":{},"后":{"docs":{},"肯":{"docs":{},"的":{"docs":{},"和":{"docs":{},"他":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"不":{"docs":{},"了":{"docs":{},"了":{"docs":{},"。":{"docs":{"79.-word-search.html":{"ref":"79.-word-search.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"大":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"3":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"对":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{"85.-maximal-rectangle.html":{"ref":"85.-maximal-rectangle.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"本":{"docs":{},"来":{"docs":{},"是":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"变":{"docs":{},"体":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"有":{"docs":{},"个":{"docs":{},"对":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"的":{"docs":{},"预":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"会":{"docs":{},"到":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"81.-search-in-rotated-sorted-array-ii.html":{"ref":"81.-search-in-rotated-sorted-array-ii.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"质":{"docs":{},"是":{"docs":{},"树":{"docs":{},"的":{"docs":{},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"每":{"docs":{},"一":{"docs":{},"层":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"。":{"docs":{},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"来":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{},"得":{"docs":{},"到":{"docs":{},"每":{"docs":{},"一":{"docs":{},"层":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"对":{"docs":{},"称":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"这":{"docs":{},"题":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"个":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"采":{"docs":{},"取":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"策":{"docs":{},"略":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"完":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"先":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"左":{"docs":{},"及":{"docs":{},"节":{"docs":{},"点":{"docs":{},"再":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"先":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"右":{"docs":{},"再":{"docs":{},"左":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"拿":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"刚":{"docs":{},"好":{"docs":{},"都":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"判":{"docs":{},"断":{"docs":{},"它":{"docs":{},"们":{"docs":{},"是":{"docs":{},"否":{"docs":{},"一":{"docs":{},"样":{"docs":{},"就":{"docs":{},"行":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"继":{"docs":{},"续":{"docs":{},"运":{"docs":{},"行":{"docs":{},"。":{"docs":{"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"又":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"做":{"docs":{},"链":{"docs":{},"表":{"docs":{},"题":{"docs":{},"一":{"docs":{},"样":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"解":{"docs":{},"决":{"docs":{"82.-remove-duplicates-from-sorted-list-ii.html":{"ref":"82.-remove-duplicates-from-sorted-list-ii.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"\\":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.07407407407407407},"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291},"95.-unique-binary-search-trees-ii.html":{"ref":"95.-unique-binary-search-trees-ii.html","tf":0.030120481927710843},"96.-unique-binary-search-trees.html":{"ref":"96.-unique-binary-search-trees.html","tf":0.060240963855421686},"98.-validate-binary-search-tree.html":{"ref":"98.-validate-binary-search-tree.html","tf":0.02040816326530612},"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.025157232704402517},"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.037037037037037035},"101.-symmetric-tree.html":{"ref":"101.-symmetric-tree.html","tf":0.044444444444444446},"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.015503875968992248},"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.007547169811320755},"104.-maximum-depth-of-binary-tree.html":{"ref":"104.-maximum-depth-of-binary-tree.html","tf":0.0196078431372549},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.01694915254237288},"108.-convert-sorted-array-to-binary-search-tree.html":{"ref":"108.-convert-sorted-array-to-binary-search-tree.html","tf":0.007751937984496124},"110.-balanced-binary-tree.html":{"ref":"110.-balanced-binary-tree.html","tf":0.036231884057971016},"111.-minimum-depth-of-binary-tree.html":{"ref":"111.-minimum-depth-of-binary-tree.html","tf":0.014492753623188406},"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.030303030303030304},"113.-path-sum-ii.html":{"ref":"113.-path-sum-ii.html","tf":0.0273972602739726},"114.-flatten-binary-tree-to-linked-list.html":{"ref":"114.-flatten-binary-tree-to-linked-list.html","tf":0.06557377049180328},"124.-Binary-Tree-Maximum-Path-Sum.html":{"ref":"124.-Binary-Tree-Maximum-Path-Sum.html","tf":0.021739130434782608}}},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"左":{"docs":{},"边":{"docs":{},"和":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"左":{"docs":{},"边":{"docs":{},"是":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"右":{"docs":{},"边":{"docs":{},"和":{"docs":{},"右":{"docs":{},"边":{"docs":{},"是":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"。":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"，":{"docs":{},"左":{"docs":{},"右":{"docs":{},"，":{"docs":{},"右":{"docs":{},"左":{"docs":{},"是":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"话":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},"加":{"docs":{},"快":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"包":{"docs":{},"含":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"这":{"docs":{},"里":{"docs":{},"用":{"docs":{},"了":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"能":{"docs":{},"剪":{"docs":{},"去":{"docs":{},"很":{"docs":{},"多":{"docs":{},"分":{"docs":{},"支":{"docs":{},"，":{"docs":{},"是":{"docs":{},"值":{"docs":{},"得":{"docs":{},"的":{"docs":{},"。":{"docs":{"87.-scramble-string.html":{"ref":"87.-scramble-string.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"合":{"docs":{},"并":{"docs":{},"两":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"中":{"docs":{},"必":{"docs":{},"不":{"docs":{},"可":{"docs":{},"少":{"docs":{},"的":{"docs":{},"一":{"docs":{},"步":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"做":{"docs":{},"好":{"docs":{},"这":{"docs":{},"一":{"docs":{},"步":{"docs":{},"，":{"docs":{},"速":{"docs":{},"度":{"docs":{},"快":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"有":{"docs":{},"点":{"docs":{},"难":{"docs":{},"度":{"docs":{},"的":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"将":{"docs":{},"前":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"数":{"docs":{},"组":{"docs":{},"复":{"docs":{},"制":{"docs":{},"，":{"docs":{},"后":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"将":{"docs":{},"后":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"数":{"docs":{},"组":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"，":{"docs":{},"前":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"保":{"docs":{},"存":{"docs":{},"下":{"docs":{},"来":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"利":{"docs":{},"用":{"docs":{},"前":{"docs":{},"面":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"能":{"docs":{},"不":{"docs":{},"改":{"docs":{},"变":{"docs":{},"就":{"docs":{},"不":{"docs":{},"改":{"docs":{},"变":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"后":{"docs":{},"往":{"docs":{},"前":{"docs":{},"合":{"docs":{},"并":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"已":{"docs":{},"经":{"docs":{},"用":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"就":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"改":{"docs":{},"变":{"docs":{},"。":{"docs":{"88.-merge-sorted-array.html":{"ref":"88.-merge-sorted-array.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"≤":{"docs":{"92.-reverse-linked-list-ii.html":{"ref":"92.-reverse-linked-list-ii.html","tf":0.024}}},"步":{"docs":{},"骤":{"docs":{},"是":{"docs":{},"：":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}},"递":{"docs":{},"归":{"docs":{},"写":{"docs":{},"法":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"访":{"docs":{},"问":{"docs":{},"就":{"docs":{},"行":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"写":{"docs":{},"法":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"首":{"docs":{},"先":{"docs":{},"要":{"docs":{},"明":{"docs":{},"白":{"docs":{},"我":{"docs":{},"们":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"先":{"docs":{},"左":{"docs":{},"，":{"docs":{},"后":{"docs":{},"中":{"docs":{},"再":{"docs":{},"右":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"保":{"docs":{},"存":{"docs":{},"中":{"docs":{},"间":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"没":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"将":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"一":{"docs":{},"直":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"进":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"顶":{"docs":{},"上":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"了":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"把":{"docs":{},"它":{"docs":{},"当":{"docs":{},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"运":{"docs":{},"行":{"docs":{},"一":{"docs":{},"遍":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"分":{"docs":{},"析":{"docs":{},"和":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"上":{"docs":{},"面":{"3":{"docs":{},"中":{"docs":{},"方":{"docs":{},"法":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"越":{"docs":{},"来":{"docs":{},"越":{"docs":{},"好":{"docs":{},"的":{"docs":{},"。":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"对":{"docs":{},"于":{"docs":{},"递":{"docs":{},"归":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"了":{"docs":{},"函":{"docs":{},"数":{"docs":{},"栈":{"docs":{},"开":{"docs":{},"销":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"空":{"docs":{},"间":{"docs":{},"用":{"docs":{},"的":{"docs":{},"少":{"docs":{},"一":{"docs":{},"点":{"docs":{},"。":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"对":{"docs":{},"于":{"docs":{},"上":{"docs":{},"面":{"docs":{},"两":{"docs":{},"中":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"只":{"docs":{},"用":{"docs":{},"了":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"空":{"docs":{},"间":{"docs":{},"是":{"docs":{},"用":{"docs":{},"的":{"docs":{},"最":{"docs":{},"少":{"docs":{},"的":{"docs":{},"。":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"以":{"docs":{},"上":{"1":{"docs":{},"、":{"2":{"docs":{},"直":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{"94.-binary-tree-inorder-traversal.html":{"ref":"94.-binary-tree-inorder-traversal.html","tf":0.005291005291005291}}}}}}}}}}}},"docs":{}}},"docs":{}}}}},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"得":{"docs":{},"出":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"c":{"docs":{},"和":{"docs":{},"d":{"docs":{},"b":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"a":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},"b":{"docs":{},"c":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{"97.-interleaving-string.html":{"ref":"97.-interleaving-string.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"知":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"错":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"找":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"错":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"就":{"docs":{},"行":{"docs":{},"。":{"docs":{},"还":{"docs":{},"是":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"不":{"docs":{},"是":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"增":{"docs":{},"长":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"记":{"docs":{},"录":{"docs":{},"下":{"docs":{},"来":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"交":{"docs":{},"换":{"docs":{},"两":{"docs":{},"个":{"docs":{},"的":{"docs":{},"值":{"docs":{"99.-recover-binary-search-tree.html":{"ref":"99.-recover-binary-search-tree.html","tf":0.006289308176100629}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"树":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"分":{"docs":{},"别":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"。":{"docs":{"100.-same-tree.html":{"ref":"100.-same-tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"102.-binary-tree-level-order-traversal.html":{"ref":"102.-binary-tree-level-order-traversal.html","tf":0.007751937984496124}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"还":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"103.-binary-tree-zigzag-level-order-traversal.html":{"ref":"103.-binary-tree-zigzag-level-order-traversal.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"112.-path-sum.html":{"ref":"112.-path-sum.html","tf":0.007575757575757576}}}}}}}}}}}}}}}},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"转":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"利":{"docs":{},"用":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"就":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"性":{"docs":{},"质":{"docs":{},"。":{"docs":{},"找":{"docs":{},"到":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"去":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"位":{"docs":{},"置":{"docs":{},"左":{"docs":{},"边":{"docs":{},"就":{"docs":{},"是":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"右":{"docs":{},"边":{"docs":{},"是":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"于":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"去":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"他":{"docs":{},"们":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"于":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"ref":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"得":{"docs":{},"到":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"本":{"docs":{},"质":{"docs":{},"和":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"没":{"docs":{},"区":{"docs":{},"别":{"docs":{},"。":{"docs":{},"只":{"docs":{},"是":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"最":{"docs":{},"后":{"docs":{},"面":{"docs":{},"。":{"docs":{},"将":{"docs":{},"前":{"docs":{},"一":{"docs":{},"题":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"修":{"docs":{},"改":{"docs":{},"下":{"docs":{},"即":{"docs":{},"可":{"docs":{"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html":{"ref":"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"^":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.033707865168539325}},"^":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.033707865168539325}},"^":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.016853932584269662}},"^":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.011235955056179775}}}}}},"做":{"docs":{},"多":{"docs":{},"了":{"docs":{},"题":{"docs":{},"目":{"docs":{},"之":{"docs":{},"后":{"docs":{},"会":{"docs":{},"有":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"，":{"docs":{},"这":{"docs":{},"题":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"解":{"docs":{},"决":{"docs":{},"没":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"就":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"问":{"docs":{},"题":{"docs":{},"想":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"已":{"docs":{},"经":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"，":{"docs":{},"s":{"docs":{},"串":{"docs":{},"加":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"t":{"docs":{},"串":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"没":{"docs":{},"有":{"docs":{},"事":{"docs":{},"情":{"docs":{},"发":{"docs":{},"生":{"docs":{},"，":{"docs":{},"总":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"数":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"没":{"docs":{},"加":{"docs":{},"入":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"s":{"docs":{},"串":{"docs":{},"和":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"t":{"docs":{},"串":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"加":{"docs":{},"上":{"docs":{},"之":{"docs":{},"前":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"始":{"docs":{},"版":{"docs":{},"本":{"docs":{},"是":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{},"。":{"docs":{},"优":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"降":{"docs":{},"到":{"docs":{},"了":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"如":{"docs":{},"此":{"docs":{},"，":{"docs":{},"其":{"docs":{},"时":{"docs":{},"间":{"docs":{},"也":{"docs":{},"会":{"docs":{},"降":{"docs":{},"低":{"docs":{"115.-distinct-subsequences.html":{"ref":"115.-distinct-subsequences.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"帕":{"docs":{},"斯":{"docs":{},"卡":{"docs":{},"三":{"docs":{},"角":{"docs":{},"形":{"docs":{},"，":{"docs":{},"三":{"docs":{},"角":{"docs":{},"形":{"docs":{},"面":{"docs":{},"积":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{},"的":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"点":{"docs":{},"都":{"docs":{},"要":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{"118.-pascals-triangle.html":{"ref":"118.-pascals-triangle.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"时":{"docs":{},"间":{"docs":{},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"求":{"docs":{},"三":{"docs":{},"角":{"docs":{},"形":{"docs":{},"问":{"docs":{},"题":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{"120.-triangle.html":{"ref":"120.-triangle.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"能":{"docs":{},"买":{"docs":{},"一":{"docs":{},"次":{"docs":{},"商":{"docs":{},"品":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"交":{"docs":{},"易":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"第":{"docs":{},"一":{"docs":{},"天":{"docs":{},"开":{"docs":{},"始":{"docs":{},"买":{"docs":{},"商":{"docs":{},"品":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"天":{"docs":{},"必":{"docs":{},"须":{"docs":{},"买":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"次":{"docs":{},"机":{"docs":{},"会":{"docs":{},"。":{"docs":{},"到":{"docs":{},"了":{"docs":{},"第":{"docs":{},"二":{"docs":{},"天":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"第":{"docs":{},"二":{"docs":{},"天":{"docs":{},"比":{"docs":{},"第":{"docs":{},"一":{"docs":{},"天":{"docs":{},"贵":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"得":{"docs":{},"到":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"第":{"docs":{},"二":{"docs":{},"天":{"docs":{},"比":{"docs":{},"第":{"docs":{},"一":{"docs":{},"天":{"docs":{},"便":{"docs":{},"宜":{"docs":{},"，":{"docs":{},"那":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"第":{"docs":{},"二":{"docs":{},"天":{"docs":{},"再":{"docs":{},"买":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"转":{"docs":{},"化":{"docs":{},"成":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"记":{"docs":{},"录":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"当":{"docs":{},"做":{"docs":{},"我":{"docs":{},"们":{"docs":{},"购":{"docs":{},"买":{"docs":{},"的":{"docs":{},"价":{"docs":{},"格":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"用":{"docs":{},"当":{"docs":{},"前":{"docs":{},"值":{"docs":{},"减":{"docs":{},"去":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"ref":"121.-Best-Time-to-Buy-and-Sell-Stock.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"ref":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}},"碰":{"docs":{},"到":{"docs":{},"树":{"docs":{},"以":{"docs":{},"及":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"题":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"观":{"docs":{},"察":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{},",":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"那":{"docs":{},"基":{"docs":{},"本":{"docs":{},"上":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"首":{"docs":{},"先":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"去":{"docs":{},"想":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"行":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"便":{"docs":{},"利":{"docs":{},"数":{"docs":{},"组":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"作":{"docs":{},"为":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"变":{"docs":{},"成":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"右":{"docs":{},"边":{"docs":{},"为":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"就":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{},"递":{"docs":{},"归":{"docs":{},"思":{"docs":{},"想":{"docs":{},"一":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"就":{"docs":{},"问":{"docs":{},"题":{"docs":{},"不":{"docs":{},"大":{"docs":{},"了":{"docs":{"654.-maximum-binary-tree.html":{"ref":"654.-maximum-binary-tree.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"机":{"docs":{},"器":{"docs":{},"人":{"docs":{},"从":{"docs":{},"原":{"docs":{},"点":{"docs":{},"出":{"docs":{},"发":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"判":{"docs":{},"断":{"docs":{},"能":{"docs":{},"否":{"docs":{},"到":{"docs":{},"达":{"docs":{},"原":{"docs":{},"点":{"docs":{},"，":{"docs":{},"一":{"docs":{},"共":{"4":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"统":{"docs":{},"计":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"比":{"docs":{},"较":{"docs":{},"上":{"docs":{},"下":{"docs":{},"是":{"docs":{},"否":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"左":{"docs":{},"右":{"docs":{},"是":{"docs":{},"否":{"docs":{},"一":{"docs":{},"样":{"docs":{},"即":{"docs":{},"可":{"docs":{"657.-robot-reaturn-to-origin.html":{"ref":"657.-robot-reaturn-to-origin.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"length":8025},"corpusTokens":["!=","\"\"","\"\".","\"\";","\"((()))\",","\"(()\"","\"(()())\",","\"(())()\",","\"()\"","\"()(())\",","\"()()\"","\"()()()\"","\"()[]{}\"","\"([)]\"","\"(]\"","\")()())\"","\"*\"","\"*a*b\"","\".*\"","\"...q\",","\"..q.\"],","\".q..\"]","\"1\"","\"100\"","\"1010\",","\"10101\"","\"1011\"","\"11\",","\"12\"","\"123\"","\"132\"","\"213\"","\"226\"","\"23\"","\"231\"","\"2314\"","\"255.255.111.35\"]","\"25525511135\"","\"312\"","\"321\"","\"?a\"","\"a\"","\"a*\"","\"a*c?b\"","\"aa\"","\"aa\".","\"aaaaa\",","\"aab\"","\"aab\".","\"aabcc\",","\"aadbbbaccc\"","\"aadbbcbcac\"","\"ab\"","\"aba\"","\"abc\"","\"abc\",","\"abcabcbb\"","\"abcb\",","\"abcced\",","\"abcde\"","\"abcde\",","\"acdcb\"","\"ace\"","\"adceb\"","\"adjacent\"","\"adobecodebanc\",","\"ae\",","\"aec\"","\"af\",","\"at\",","\"ate\",","\"b\",","\"bab\"","\"babad\"","\"babgbag\",","\"bag\"","\"banc\"","\"bat\"],","\"bb\"","\"bba\"","\"bbbbb\"","\"bbf\"","\"bd\",","\"be\",","\"bf\",","\"bz\"","\"c*a*b\"","\"caebd\"","\"cb\"","\"cbbd\"","\"cd\",","\"ce\",","\"cf\"].","\"dbbca\",","\"dce\".","\"eat\"","\"execution\"","\"facing\"","\"fl\"","\"gr\"","\"great\",","\"great\".","\"great\":","\"hello\",","\"horse\",","\"intention\",","\"l\"","\"ll\"","\"mis*is*p*.\"","\"mississippi\"","\"nat\",","\"pahnaplsiigyir\"","\"paypalishiring\"","\"paypalishiring\",","\"pinalsigyahrpi\"","\"pwke\"","\"pwwkew\"","\"q...\",","\"r\"","\"rabbbit\",","\"rabbit\"","\"rgeat\"","\"rgeat\".","\"rgtae\"","\"rgtae\".","\"ros\"","\"see\",","\"tan\",","\"tea\",","\"vf\"","\"wke\",","\"zero","\"{[]}\"","&&","&candidates,","&combination,","&res)","&res,","''","'('","'(',","')',","'*'","'*'.","'.'","'.'.","'0')","'0')+c;","'0')+int(b[i]","'?'","'['","']',","'a'","'a',","'a'.","'b'","'b'.","'c')","'c',","'e')","'finish'","'h'","'i'","'n'","'q'","'r')","'start'","'t')","'u')","'x')","'z'","'{',","'}',","(!target)","(*)","(.)\".","(0,","(1","(1,1)","(12).","(2","(2,2)","(22","(5","(also","(binari","(blue","(bst)","(bst).","(can","(candidates)","(clockwise).","(contain","(down).","(head=begin);","(i","(i,","(i.e.,","(ie,","(includ","(ins.empty())","(insert","(int","(just","(k","(left),","(m","(mark","(merg","(not","(nums[k]","(nums[l]","(p),","(partial","(price","(rabb,rab)","(rabb,rabb).","(rabbb,rabb)","(remov","(replac","(right),","(root","(s)","(s2.size()+1,false));","(size","(t.size()+1,0);","(target),","(the","(up),","(well","(without","(xn).","(you",")","){","*","**so","*.","*/","*left,*right;","*left;","*next;","*right;","+","++i)","++i;",",",".","...","...,","/","/**","//","//board[i][j]='\\0';","//convert","//cout","//coutleft=build(nums,low,mid);","//first","//low_bound","//morri","//next[0]=","//res.push_back(null);","//the","//thi","//upper_bound","//use","//之前的代码","//判断第一列是否有0","//利用bst的中序遍历性质来解决问题","//快慢指针","//最原始的暴力法","//此题代码","//用一个数组保存","//类似上一题，直接用回溯法解决问题","//迭代写法","//递归写法","0","0'","0's,","0)","0),","0).","0);","0,","0.","0.25","0.25000","01","0;","0?","0位置，那么之后的所有位置又可以递归调用函数，得到后面位置的所有排列。第一位置补上，就是所有排列了","1","1'","1's,","1)","1)!个。同理可以退出，如果需要找第k个排列，第一个字符我们是可以确定的。然后利用递归的思路，一直将数字推出。","1);","1){","1,","1,0}};","1,1]","1,2,1,","1,2,1]","1,2,3","1,2,31,1,5","1,3,23,2,1","1,5,1","1,j,pos+1)||","1,j=n","1,pos+1)","1,res=m+n","1,right+1);","1,size);","1,sizeof(cache));","1.","1/22","1/4","10","10,","10,9,20,null,null,15,7]","10,null,5],","10.","100);","100.","100.0","1000.","101.","102.","1024.00000","103.","104.","105.","106.","107.","108.","10^9","10生成bst。首先利用5当中间节点的时候，1","11","11).","11,","11.","110.","111.","112.","113.","114.","115.","118.","120","120.","121","121.","122.","1223.","123","123.","124.","13","14.","15","15,","15.","15],","16,","16.3sum","17.","18.","181","19.","1:","1:].","1;","1;j=y+1;","1]","1])","1],","1].","1]:0);","1];","1]==t[j","1]=t","1},{","1};","1→3→1→1→1","1。然后定义一个curleft和curright，每当当前节点为0的时候，就要改变curleft和currgiht，当节点为1的时候，改变right和left数组。具体行为可以看代码理解。","1即可。这样int_min就会变int_max","1的时候，这种情况要单独考虑下","1，就直接返回0。","2","2's,","2's.","2)","2,","2,1,","2.","2.00000,","2.10000,","2.82842...,","20","20.","2019.","2019/10/16","20],","21","21.","2147483649;","22,","22.","23.","231","24.","26","26),","27.","28.","29.","2:","2;","2;i>=0;","2;i>=1;","2]","2]){","2]相比，如果大于的话，那么当前肯定要加，但是如果等于的话，那肯定就是前面已经放置了两个相同的数，就可以不用再写了。","2d","2。然后再找到中间夹着的字符是如何分布的。","2展示的那样，一次交易即可。那么我们还是以第一题（一次交易得到最大值），为基础解此题。","3","3)","3),","3,","3,0,5,9],","3,4,","3,9,","3.","30","30,","31.","32","32.","321","33.","34","34,","34.","342","35.","36","36.","39.","3:","3sum","3x3","3个字符的情况。","4","4)","4),","4,","4.","40.","41.","42","42.","44.","45.","46.","465","47.","48.","49","49.","4:","4],","4sum","4个字符，如果都是代表3个字符。那么每次遍历的通量就是3个，如果输入digit","4当左子树的情况。我们可以用动态规划的方法来避免重复计算。","4要当左子树，然后用6当中间节点的时候，还是会碰到1","5","5),","5,","5,4],","5.","50.","50]","51.","52.","53.","54.","55.","56.","57.","59.","5:","5],","6","6),","6).","6,","6.","60.","61.","62.","63.","64.","654.","657.","659.","67.","69.","7","7,","7,10,11]","7.","70.","72.","73.","74.","75.","76.","77.","78.","79.","7],","8","8'","8,","8,10],","8.","80.","807.","81.","82.","83.","84.","85.","86.","87.","88.","8],","9","9,","9,11],","9.","9.26100","90","90.","91.","92.","93.","94.","95.","96.","97.","98.","99.","9],","9x9","9x9.",":",";","=","==","=root",">",">0",">1",">11",">2",">2,",">3",">3.",">4",">4,",">5",">5,",">5.",">6",">=",">left)",">left)&&issametree(p",">left),maxdepth(root",">left);",">left){",">left,q",">left,sum)||haspathsum(root",">left;",">left==null&&root",">left==null);",">left==null){",">left=help(nums,left,ma",">left=le;",">left=null;",">next",">next)",">next);",">next){",">next,(l1",">next,l2",">next,l2);",">next;",">next==null)",">next=addtwonumbers(l1",">next=deleteduplicates(head);",">next=deleteduplicates(next);",">next=head;",">next=mergetwolists(l1",">next=mergetwolists(l1,l2",">next=mov",">next=move;",">next=null;",">next=pr",">next=pro.top();",">next=second",">next=swappairs(tmp",">next=tou",">next=tou1",">null",">null,",">right!=root){",">right&&prev",">right)",">right))+1;",">right);",">right){",">right,q",">right,sum);",">right;",">right==null)&&(root",">right==null){",">right=build(nums,mid+1,high);",">right=build(preorder,inorder,prelow+1+leftsize,prehigh,inroot+1,inhigh);",">right=help(nums,ma+1,right);",">right=null;",">right=ri;",">right=root",">right=root;",">rollmax=rollmax;",">val!=right",">val)",">val)){",">val);",">val){",">val+=max(l,r);",">val+add)%10);",">val+add)/10);",">val+l+r;",">val+l2",">val,root",">val;",">val==head",">val==now",">val==q",">val=second",">val=tmp;",">val>=x){",">val>l2",">val>root",">valval){",">valval;","?","[","[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]","[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],","[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],","[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],","[\"..q.\",","[\".q..\",","[\"1\",\"0\",\"0\",\"1\",\"0\"]","[\"1\",\"0\",\"1\",\"0\",\"0\"],","[\"1\",\"0\",\"1\",\"1\",\"1\"],","[\"1\",\"1\",\"1\",\"1\",\"1\"],","[\"255.255.11.135\",","[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],","[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],","[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],","[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],","[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],","[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],","[\"ad\",","[\"ate\",\"eat\",\"tea\"],","[\"bat\"]","[\"dog\",\"racecar\",\"car\"]","[\"eat\",","[\"flower\",\"flow\",\"flight\"]","[\"nat\",\"tan\"],","['a','b','c','e'],","['a','d','e','e']","['s','f','c','s'],","[0,","[0,0,0,0],","[0,0,0]","[0,0,0],","[0,0,1,1,1,1,2,3,3],","[0,0,1,1,2,2]","[0,0,1,2,2,5,6]","[0,1,0,2,1,0,1,3,2,1,2,1]","[0,1,0,2,1,0,1,3,2,1,2,1].","[0,1,0],","[0,1,2,0],","[0,1,2,2,3,0,4,2],","[0,1,2,4,5,6,7]","[0,3,1,0]","[0,4,5,0],","[1,","[1,0,1]","[1,0,1],","[1,1,1,1,1,1]","[1,1,1,2,2,3]","[1,1,1,2,2,3],","[1,1,1]","[1,1,1],","[1,1,2,2,2,3]","[1,1,2]","[1,1,2],","[1,1],","[1,2,0]","[1,2,1],","[1,2,2,3,3,null,null,4,4]:","[1,2,2,3,4,4,3]","[1,2,2,3,5,6]","[1,2,2,null,3,null,3]","[1,2,2]","[1,2,2],","[1,2,3,...,n]","[1,2,3,0,0,0],","[1,2,3,3,4,4,5,5]","[1,2,3,3,4,5]","[1,2,3,4,4,5]","[1,2,3,4,5]","[1,2,3,4,8,12,11,10,9,5,6,7]","[1,2,3,6,9,8,7,4,5]","[1,2,3]","[1,2,3],","[1,2],","[1,3,1,5]","[1,3,1],","[1,3,2]","[1,3,2],","[1,3,3,1],","[1,3,null,null,2]","[1,3]","[1,3],","[1,4,6,4,1]","[1,4]","[1,4],","[1,5,1],","[1,6].","[1,8,6,2,5,4,8,3,7]","[1,null,2,3]","[1,null,2,null,3]","[1,null,2]","[1,null,3,2],","[10,","[12,","[13,","[14,","[15,13,","[15,14,12,16]","[15,7]","[16,","[1],","[2,","[2,0,2,1,1,0]","[2,1,1]","[2,1,3]","[2,1,3],","[2,1,4,null,null,3]","[2,1,5,6,2,3]","[2,1,5,6,2,3].","[2,2,2,2],","[2,2,3]","[2,2],","[2,3,1,1,4]","[2,3,1],","[2,3,3],","[2,3,5],","[2,3,6,7],","[2,3],","[2,4],","[2,5,6,0,0,1,2]).","[2,5,6,0,0,1,2],","[2,5,6],","[2,5]","[2,6]","[20,9],","[23,","[2],","[3,1,2],","[3,1,4,null,null,2]","[3,1,null,null,2]","[3,1,null,null,2],","[3,2,1,0,4]","[3,2,1]","[3,2,2,3],","[3,2,null,1],","[3,3,5,0,0,3,1,4]","[3,4,","[3,4,5,2],","[3,4]","[3,4],","[3,5]","[3,5],[6,7],[8,10].","[3,9,20,15,7]","[3,9,20,null,null,15,7],","[3,9,20,null,null,15,7]:","[3],","[4,","[4,1,8,3]","[4,2,1]","[4,5,6,7,0,1,2]).","[4,5,6,7,0,1,2],","[4,5,6],","[4,5]","[4,8]","[5,","[5,1,4,null,null,3,6]","[5,4,11,2],","[5,7,7,8,8,10],","[5,8,4,5]","[6,5,7],","[7,1,5,3,6,4]","[7,4,1],","[7,6,4,3,1]","[7,8,9,11,12]","[7,8,9]","[7],","[8,5,2],","[9,10,11,12]","[9,20],","[9,3,15,20,7]","[9,6,3]","[[1,2],[3,10],[12,16]]","[[1,2],[3,5],[6,7],[8,10],[12,16]],","[[1,3],[2,6],[8,10],[15,18]]","[[1,3],[6,9]],","[[1,4],[4,5]]","[[1,5],[6,9]]","[[1,5]]","[[1,6],[8,10],[15,18]]","[]","[](interv","[−231,","\\","]","],","]:nums2[j","];","]=","]=='q')","][j","^","^^","^^^","^^^^","_k_th","_n_2","a)","a,","a.start","a1,","a2,","a=1;a","abov","above.","accord","ad","add","add=0)","addbinary(str","addit","address","addtwonumbers(l1,l2,0);","addtwonumbers(listnode*","adjac","adjacent,","affect","again).","again.","ai)","ai).","al=a.size(),bl=b.size();","algorigthm","algorihtm","algorithm","algorithm'","algorithm.html","algorthm","alloc","along","also,","altern","although","alway","amongst","anagram","analysi","analyz","anlysi","anoth","answer","answer.","appear","approach,","april","arbitrary.","area","area,","area.","around","arrang","array","array,","array.","array:","array?","array，这题在数组中加入了重复的数字，导致会出现一些问题。比如left和right是一样的数，甚至是，left和mid和right都是一样的数，这就不好区分两个区间。首先使用一个循环处理，如果left和right一样，将left++。这样就能去除所有边界一样的情况。除去之后，就和前面没有重复数组是一样的处理情况了","arriv","as:","ascend","ask","assum","attack","axi","b","b)","b){return","b,","b1=int_min,b2=int_min,s1=0,s2=0;","b1=max(b1,","b2=max(b2,s1","babgbag","backward","balanc","balanced.","bar","base_index;","be","be?","becom","becomes:","befor","beforehand.","begin","begin)","begin;","begin=0,end=0,head=0,length=int_max;","below","below).","below,","below.","below:","best","better","between","between).","beyond","binari","bit","blue","blue,","blue.","bo=false;","bo=true;","bo?i:","board","board)","board,","board[i][j]='\\0';","board[i][j]=t;","board[i][j]^=255;","bonu","bool","both","bottom","bottom.","box","box,","bracket","brackets.","break;","bst","bst'","bst's:","bst.","bst:","build","build(nums,0,nums.size());","build(preorder,inorder,0,preorder.size(),0,inorder.size());","build(vector&","buildtree(vector&","buttons)","buy","c","c'","c:t)","c=0;","c=1;","c==c?以及aabc和dbbca是否匹配aadbbcbca，或者是a==c?以及aabcc和dbbc是否匹配aadbbcbca。上面两中情况任何一种成立，这里的匹配都可以算成功。所以这里动态规划保存之前的结果，这次匹配使用前面的结果解决问题。","cache[5002][7][16];","cache[pos][number][per];","calcul","caller","caller.","candid","candidates.end());","candidates.size()","candidates[i","candidates[i]","candidates[i],","candidates[i];","canjump(vector&","caret","case,","case.","cell","cell,","center).","ch:moves){","ch:s){","chang","changed.","char","charact","character.","characters.","check","chessboard","child","child'","children","children,","children.","choos","chosen","clarification:","class","climb","climbstairs(int","close","closest","cmp{","code","code中有一个循环，循环中进行的操作只有查找和插入hash，时间都是o(1)，所以最后时间复杂度是o(n)","collect","color","column","column.","columns),","combin","combination,","combination.pop_back();","combination.push_back(candidates[i]);","combination;","combinations.","combinationsum(candidates,","combinationsum(std::vector","combinationsum2(candidates,","combinationsum2(std::vector","combine(int","come","common","complet","complex","complexity.","complexity?","comput","conbin(res,digits,0,\"\");","conbin(vector&","configur","confus","connections.","conquer","consecut","consecutively,","consid","consist","constant","constraint","constraints:","construct","constructmaximumbinarytree(vector&","contain","container,","contigu","continu","continue;","contribut","convers","convert","convert(str","coordin","copy)","corner","corner,","corner:","correct","correspond","coud","count","count++;","count=0;","count=int(a[i]","count=t.size();","cout","cover","cur;","cur=cur","cur=head","curright=j","cut,tail;","cut[num]++;","d","day","dd=labs(dividend);","deal","decim","decod","default","defin","definit","degre","delet","deleteduplicates(head);","deleteduplicates(listnode*","depth","depth.","describ","descripit","descripiton","descript","desctipt","design","determin","devis","dfs，每层有4个分量，时间复杂度还是挺高的，但是不好分析。我这里就不分析了","di=labs(divisor);","diagram","dice","die","die,","diesimulator(int","differ","digit","digit.","digits)","digits,","digits,int","directli","directly.","display","distanc","distinct","disturb","divid","divide(int","dividend","dividend,","divis","divisor","divisor)","divisor,","divisor.","doesn't","done,","done.","doubl","down","dp","dp(0,0,0,n);","dp(int","dp(m,1);","dp(n+1,0);","dp(nums.size(),0);","dp(s.size()+1,vector(p.size()+1,false));","dp(s.size()+1,vector(t.size()+1));","dp(word2.size()+2);","dp[0]=1;","dp[0]=nums[0];","dp[0][0]=true;","dp[1]=1;","dp[j]+=dp[j","dp[t.size()];","drawn","duplic","duplicates)","duplicates,","duplicates.","dure","e","e)","each","eat","edit","effici","element","element,","element.","elements.","elev","else{","empti","encod","end","end(0)","end(e)","end,","end,int","end;","endpoint","enent","engag","enough","entir","environ","equal","error。所以这里用数组保存之前的结果。整个动态规划的状态有3个维度，一是前面出现的次数，二是前一个数字，三是当前防止的轮数。","etc.","exact","exactli","exampl","example,","example:","example:given","examples.","except","exect","execut","exent","exist","exist(vector>&","exists,","explanation:","express","extra","f(1,1,1),f(1,2,1),f(1,3,1),f(1,4,1),f(1,5,1),f(1,6,1).","fals","false.","false;","false。如果所有的跳完，return","farthest","figur","fill","filled)","filled,","final","find","findmax(treenode*","finish","first","first,","first=null;","first=pre;","firstmissingpositive(vector&","five","fix","flatten","flatten(treenode*","follow","follow:","follows:","font","for(auto","for(auto&","for(int","for(treenode*","form","formed)","forward","forward.","found","foursum(vector&","fr=qu.front();","fromleft(matrix[0].size(),0);","fromright(matrix[0].size(),matrix[0].size());","fromright[j]=matrix[0].size()","fromright[j]=min(fromright[j],curright);","function","function,","g","game","game2类似。这里不限制你跳跃的次数，我们只需要每次记录能达到的最远距离即可。每次循环开始的时候更新最大值。如果更新之后的最大值和当前值是一样的话，说明只能跳到这里了，return","gener","genera(1,n,n);","genera(int","generate(int","generatematrix(int","generateparenthesis(int","generatetrees(int","getnext(next,needle);","give","given","go","goal","gr","great","greater","grid","grid)","grid.","grids.","group","groupanagrams(vector&","guarante","h","hand","haspathsum(root","haspathsum(treenode*","haystack","haystack,","haystack.","head","head)","head,","head.","head;","head=1,last=0,res=1;","head=head","head=tou1;","height","height(matrix[0].size(),0);","height)","heights)","heights.push_back(0);","help(board,word,i","help(board,word,i+1,j,pos+1)||","help(board,word,i,j","help(board,word,i,j+1,pos+1)||","help(nums,0,nums.size()","help(res,\"\",n,0);","help(res,tmp+'(',left","help(res,tmp+')',left,right","help(res,tmp,nums,0);","help(vector&nums,int","help(vector&res,str","help(vector>&","help(vector>&res,vector&tmp,vector&nums,int","helper(res,tmp,n,k,1);","helper(res,tmp,sum","helper(res,tmp,sum,root);","helper(vector>&","here","here,","high){","histogram","histogram'","histogram.","hold","horizont","hors","i);","i){","i){i为0","i++;","i+1);","i,","i,int","i.","i.e.","i;","i=0,j=","i=0,j=height.size()","i=0;","i=0;i","i=0;i&","i=0;i({strs[i]});","i=0;i0&&nums[i]","i=0;i0?left++:right","i=0;i=0&&j>=0){","i=0;i=0&&rightres){","i=0;i=0;","i=0;i=heights[st.top()]){","i=0;i=s.size())","i=0;i>","i=0;i>&","i=0;i>&board,","i=0;ileft){","i=0;inext(needle.size(),","i=1;i","i=1;i0;","i=1;i0?dp[i","i=1;itmp=res[start];","i=2;i","i=3;i","i=atol(s.c_str());","i=inlow;ileft=build(preorder,inorder,prelow+1,prelow+1+leftsize,inlow,inroot);","i=left+1;inums[i]?ma:i;","i=m","i=matrix.size()","i=pos;i","i=pos;i>","i=start;i","i=tmp.size()","i=triangle.size()","i=x","i>=0&&nums1[i]>nums2[j]?nums1[i","i]和p[0","ident","if(","if(add==0)","if(al=0;i","if(bo){","if(cache[pos][number][per]!=","if(ch=='('){","if(ch==')'){","if(ch==']'){","if(ch=='d'){","if(ch=='l'){","if(ch=='r'){","if(ch=='u'){","if(ch=='}'){","if(count==1||count==3){","if(count==2||root==null)","if(count>=2){","if(cut[n]","if(digits.size()==0)","if(dividend==int_min&&divisor==","if(first!=null&&pr","if(first==null&&pr","if(fr==null)","if(fr==pos){","if(haystack.size()==0){","if(head&&head","if(head==null)","if(head==null||head","if(height.size()==0)","if(high==low)","if(i!=0&&i!=numrow","if(i==j","if(i=board.size()||j>=board[0].size()||board[i][j]=='\\0'||word[pos]!=board[i][j])","if(i=board.size()||j>=board[0].size()||word[pos]!=board[i][j])","if(isbalan(root)==int_max)","if(isleaf(fr))","if(j+step2","if(k==0)","if(l1","if(l1==null)","if(l1==null){","if(l2==null)","if(l2==null){","if(left","if(left){","if(left==0&&right==0){","if(left==null&&right==null)","if(left==null||right==null)","if(left==right){","if(left>=0&&left","if(left>right)","if(lefth==int_max||righth==int_max||abs(lefth","if(lefttoright){","if(length>end","if(list)","if(lists.size()==0)","if(lr.empty()||lr.top()=='l'){","if(lr.empty()||lr.top()=='r'){","if(lval+l+r>res)","if(ma.find(start*size+end)!=ma.end()){","if(map[s[begin++]]++>=0)","if(matrix.size()==0||matrix[0].size()==0)","if(matrix[i][j]","if(matrix[i][j]=='0'){","if(n","if(n==0)","if(n==1)","if(nc==0)","if(needle.size()==0)","if(nr==0)","if(num!=val)","if(numrows==0)","if(numrows==1)","if(nums.size()","if(nums.size()==0)","if(nums.size()sum)","if(p&&q&&(p","if(p==null&&q==null)","if(pos==digits.size()){","if(pos==n)","if(pos==nums.size())","if(pos==tmp.size()){","if(pos==word.size())","if(posnums[po","if(prelow==prehigh)","if(prev","if(q.empty())","if(q1.empty())","if(q2.empty())","if(res[i","if(right){","if(root","if(root)","if(root==null)","if(root==null){","if(s.size()==0)","if(s.size()>10||(s.size()==10&&s>\"2147483647\"))","if(s1.size()+s2.size()!=s3.size())","if(s[0]=='0')","if(s[i","if(size==1)","if(st.empty()){","if(st.empty()||st.top()!='(')","if(st.empty()||st.top()!='[')","if(st.empty()||st.top()!='{')","if(st2.empty()){","if(start>end){","if(strs.size()==0)","if(strs.size()==1)","if(sum)","if(sum==root","if(t","if(t==tmp){","if(tmp","if(tmp.size()==k){","if(tmp.size()==nums.size()","if(tmp.size()==nums.size()){","if(tmp==null)","if(tou1","if(tq==null){","if(tq==pos){","if(ud.empty()||ud.top()=='d'){","if(ud.empty()||ud.top()=='u'){","if(x","if(x\"2147483647\");","if(x=x/mid)","if:","ii","iii","imag","image!","image.","implement","imposs","inclusive,","inclusive.","index","index,","index.","index=0;","indexed)","indexof().","indic","inent","inhigh){","initi","inlow,int","inord","inorder(root","inorder(root);","inorder(treenode*","inorder)","inorder,int","inordertraversal(treenode*","input","input:","inroot;","ins)","ins.end(),","insert","insert(vector&","instanc","int","int_max;","integ","integer,","integer.","integers,","integers.","intent","interleav","intern","interv","interval()","interval(int","interval.","intervals,","intervals.","interview.","introduc","invalid.","ip","irrelevant.","is:","isbalan(treenode*","isbalanced(treenode*","isinterleave(str","isleaf(treenode*","ismatch(str","ispalindrome(int","ispossible(vector&","issametree(p","issametree(treenode*","isscramble(str","issymmetric(treenode*","isvalid(str","isvalidbst(treenode*","isvalidsudoku(vector>&","it.","iter","iteratively.","iteratively?","ith","itself","itself.","j","j)","j){","j,","j,int","j=","j=0;","j=0;j","j]的匹配结果。每一个状态转移的时候，一定要分析全要考虑的前一个状态。这一题中就*号很特殊，他可以是一个也可以是零个也可以是多个。分析到*号的时候，需要考虑的前一个状态有点多。","java'","judg","judgecircle(str","jump","jump(vector&","jumps.","k","k)","k,","k,int","k;","k=0;k","k=i;k","k=k%size;","k=size","key","key.","kmp最关键的是构建next数组，然后就很好匹配了。","kmp算法，求出next数组时间复杂度是o(n),匹配时间复杂度是o(m)，m>n。最后时间复杂度是o(m)","known","l","l,int","l1","l1,","l1,listnode*","l1;","l1=new","l2","l2)","l2){","l2,int","l2;","l2=new","l;","l=maxtosum(root","l=mid+1;","label","large,","larger","largest","largestrectanglearea(vector&","lass","last","later,","le:left){","lead","leaf","leav","left","left(null),","left);","left++;","left,","left,int","left,right;","left.","left;","left=0,right=","left=0,right=nums.size()","left=0,right=nums.size(),mid;","left=0,right=nums.size();","left=0,right=res.size()","left=0;","left=0;int","left==x/left?left:left","left=genera(start,i","left=i;right=i+1;","left=mid+1;","left=pos[s[i]];","left=qu.front();","lefth=isbalan(root","leftmax=height[left];","lefttoright=!lefttoright;","lefttoright=true;","legibility)","len","length","length,","length.","length==int_max?\"\":s.substr(head,length);","length=end","lengthoflongestsubstring(str","less","letter","lettercombinations(str","letters)","letters.","level","level).","levelorder(treenode*","lexicograph","library'","like:","limit","line","line:","lines,","link","list","list'","list,","list.","list:","list:lists){","listnod","listnode(","listnode((l1","listnode(add);","listnode(int","listnode*","listnode*tmp=head","lists)","lists.","lm=0,rb=0,size=s.size();","lm=left;rb=right;","locat","long","longest","longestcommonprefix(vector&","longestpalindrome(str","longestvalidparentheses(str","look","low)>>1);","low,int","lower_bound(int","lowercas","lowercase.","lowest","lr.empty()&&ud.empty();","lr.pop();","lr.push(ch);","lr;","m","m)","m,","m,word2","m:ma){","m=1;","ma","ma;","ma=findmax(root","ma=left;","ma=max(ma,dp[i]);","ma=nums[0];","ma[8]={\"abc\",\"def\",\"ghi\",\"jkl\",\"mno\",\"pqrs\",\"tuv\",\"wxyz\"};","ma[start*size+end];","ma[start*size+end]=res;","made","magnitud","make","mani","map","map(128,0);","map.first","map.second","map>","map[c]++;","mapping:","marco","mark","mark(nums.size(),false);","mark){","match","matrix","matrix)","matrix,","matrix.","matrix看algorithm","matter","matter.","max","max(lefth,righth)+1;","max(maxdepth(root","maxarea(vector&","maxdepth(treenode*","maxim","maximalrectangle(vector>&","maximum","maxpathsum(treenode*","maxprofit(vector&","maxrive=0;","maxsubarray(vector&","maxtosum(root);","maxtosum(treenode*","mean","memory.","memset(cache,","mention","merg","merge(vector&","mergeklists(vector&","mergetwolists(listnode*","messag","method","mid;","mid=low+((high","middl","mindepth(treenode*","mindistance(str","minim","minimum","minimumtotal(vector>&","minpathsum(vector>&","minwindow(str","miprice);","miprice=int_max;","miprice=min(miprice,price);","mirror","miss","mistake.","mod","mod=1000000000+7;","modif","modifi","modulo","more","move","move.","move=tmp","movement","moves)","moves,","moves.","moves[i]","move{{0,1},{1,0},{0,","much","multipl","multiplication,","mypow(doubl","mysqrt(int","n","n!","n)","n),","n).","n){","n,","n,int","n.","n:nums){","n=matrix.size();","n?","nc=matrix[0].size();","nearest","necessarili","necessary).","need","needl","needle)","neg","negative.","neighboring.","never","new","newhead","newhead=new","newinterv","newinterval)","next","next(null)","next=head","next=next","nextpermutation(vector&","node","node'","node.","nodes'","nodes,","non","none)","not).","not.","not:","note","note:","note:bonu","note:y","now","now;","now=head;","nr=0;nc=","nr=matrix.size();","nstep{n,n","nstep{nc,nr","nth","null;","num","num,","num:nums)","num:nums){","num=int(digits[pos]","number","number)","number,int","number.","numbers,","numbers.","numdecodings(str","numdistinct(str","numrow","numrows)","numrows);","numrows){","numrows,","nums)","nums,","nums,int","nums,vector>&","nums.end());","nums.size(),","nums1","nums1,","nums1[r","nums2","nums2,","nums2.","nums[0]","nums[1]","nums[i]","nums[k","nums[k]","nums[k])","nums[l]);","nums[l].","nums[pos++]=num;","nums[res++]=num;","numtrees(int","n}次。循环需要时间复杂度是o(n平方)，最后算法的时间复杂度是o(n平方)。","n×n","n个数排列有n!种情况，如果数字是1","n，最后时间复杂度o(m*n)","n，那么1开头的排列会有(n","o(1)","o(log","o(n)","o(n).","o(n)，但是适用于数字比较少的情况。这里一共就3个数字，是比较适合的。","object","obstacl","obstaclegrid)","obtain","occur,","occurr","on","onc","once,","once.","one.","open","oper","operator()(const","operator.","order","order).","order,","order.","origin","origin,","other.","otherwis","otherwise,","out","output","output:","overflows.","overlap","overlapping.","overlaps,","overwrit","p","p)","p);","p,","p:prices){","pair","palindrom","palindrome.","parent","parenthes","parentheses,","parentheses.","part","partial","partial).","partit","partition(listnode*","partitions.","pascal'","pass","pass.","pass?","pass解决问题，时间复杂度o(n).hashmap插入操作时间也是o(1)。","path","path'","path.","pathsum(treenode*","pattern","per(nums,res,0,nums.size());","per(nums,res,tmp,mark);","per(vector&","per,int","permit","permut","permutation,","permutations.","permute(vector&","permuteunique(vector&","phone","pivot","place","place,","place.","placement,","places,","place。于是我将第一行和第一列定义为标志位，从2行2列开始遍历，如果为0，将为0的那行和列的第一位设置为0标志位。之后再次遍历一遍第一行和第一列，将有标志位的那一行或者一列置为零","plane.","pleas","po","point","porblem","pos(256,","pos(256,0);","pos(s1.size()+1,vector","pos){","pos,int","pos,str","pos;","pos=0;","pos=new","pos[0][0]=1;","pos[s[i]]=i;","pos[s[last]]++;","pos_1=0,pos_2=0;","posit","position.","possibl","possible,","postord","pow(x,","power","pre","pre=","pre=head;","pre=new","pre=newhead;","pre=pr","pre=root;","preced","prefix","prefix,","prehigh,int","prelow,int","preorder","preorder,","preserv","pretti","prev","prev=null;","prev=prev","prev=root","previou","price","price.","price:prices){","prices)","prices.push_back(int_min);","print","priority_queue,cmp>","private:","pro.pop();","pro.push(list);","pro.push(tmp","pro;","problem","problem,","problem.","produc","profit","profit.","properties:","public:","purpos","push进vector，访问到下一个时，当前interval就是下一个interv","puzzl","puzzle.","q)","q.pop();","q.push(pos);","q.push(root);","q.push(root);q.push(tmp);","q.push(t","q.push(tmp);","q.push(tq","q1,q2;","q1.pop();","q1.push(root);","q1.push(tmp","q2.pop();","q2.push(tmp","q;","qu.pop();","qu.push(fr","qu.push(left","qu.push(pos);","qu.push(right","qu.push(root","qu.push(root);","qu;","queen","queens'","question","queue","quotient","r","r,int","r=maxtosum(root","r=mid;","rabb","rabbbit","rain","raining.","rais","random","rang","range:","range语句，得到nums所有的数字。然后和nums[po","re","reach","read","readme.md","rearrang","recov","recovertree(treenode*","rectangl","recurs","recursion(nums,","recursion(vector","recursively.","red,","reference,","reference.","regular","rel","remain","remov","removeduplicates(nums);","removeduplicates(vector&","removeelement(nums,","removeelement(vector&","removenthfromend(listnode*","repeat","repetition.","replac","repres","represent","represent.","requir","res(10);","res(2,","res(n+1);","res(n,vector(n,0));","res(nr*nc);","res);","res){","res++;","res,","res,int","res,str","res,vector","res,vector&tmp,int","res,vector&tmp,vector&","res.push_back(combination);","res.push_back(m.second);","res.push_back(num);","res.push_back(nums);","res.push_back(root","res.push_back(root);","res.push_back(s[j]);","res.push_back(tmp);","res.push_back(ve);","res.push_back(x%10);","res.push_back({nums[0]});","res:res;","res;","res=\"\";","res=0;","res=1;","res=int_min;","res=max(res,i","res=max(res,pric","res=max(res,tmp);","res=new","res=nums.size();","res=right","res=root","res=string(max(al,bl)+1,'0');","res={{}};","res[0]=1;res[1]=1;","res[1]=1;res[2]=2;","res[i+1]='1';","res[right]=x%10;","reset","respect","respectively.","restor","restoreipaddresses(str","result","return","return:","return;","returned.","revers","reverse(int","reverse(nums.begin()","reversebetween(listnode*","rg","rgeat","rgtae","ri:right){","right","right(null)","right){","right++;","right++;left","right,","right.","right:","right=genera(i+1,end,size);","right=height.size()","right=mid;","right=nums.size()","right=qu.front();","righth)>1)","righth=isbalan(root","rightmax=height[right];","ro","robot","robot'","roll","roll.","rollmax","rollmax)","rollmax.length","rollmax;","rollmax[i](1","rolls.","root","root)","root){","root,","root.","root;","root=new","root=prev","root=root","root=st.top();","root=todo.top();todo.pop();","rors","rose","rotat","rotate(vector>&","rotateright(listnode*","rotation.","row","row.","row=false,col=false;","rows,","rows:","rules.","rules:","run","runtim","s","s)","s,","s.","s1","s1,","s1.","s1=max(s1,b1+p);","s2","s2)","s2,","s2.","s2;","s2=max(s2,b2+p);","s3","s3)","s3,","s;","same","scrambl","search","search(vector&","search.","searchinsert(vector&","searchmatrix(vector>&","searchrange(vector&","second","second=null;","second=root;","second=second","second=tmp;","section)","sell","sequenc","sequence).","sequence,","sequence.","sequenti","set","set).","setzeroes(vector>&","seven","shade","share","shortest","shown","sign","signature.","similarly,","simul","singl","singli","size","size){","size++;","size=1;","size=needle.size()","size=nums.size();","size是n","slant","smallest","solut","solution,","solution?","solv","solvable.","solvenqueens(int","sort","sort(ins.begin(),","sort(nums.begin(),nums.end());","sort.","sortcolors(vector&","sortedarraytobst(vector&","sort。将所有的字符串sort一下，排序之后相等的字符串，就可以认定为一个group。","space","space,","space.","space?","specif","spiral","spiralorder(vector>&","splice","split","sqrt(int","sqrt(x)","squar","st.empty();","st.pop();","st.push(ch);","st.push(i);","st.push(root);","st1.pop();","st1.push(0);","st1.push(tmp);","st1;","st2.pop();","st2.push(ch);","st2;","st;","stack","stair","start","start(0),","start(s),","start,int","start;","start=1;","startpos=","std::sort(candidates.begin(),","std::vector","step","step2=step;","step=0;","step=numrows*2","steps.","stock","stock),","store","straight","string","string&word,int","string).","string,","string.","string?","strings,","strings.","strs)","strs[0];","strstr()","strstr().","strstr(string","struct","structur","structure.","sub","subarray","subsequ","subsequences.md","subset","subsets(vector&","subsets.","subsetswithdup(vector&","substr","substring,","substring.","subtl","subtre","such","sudoku","sum","sum)","sum,","sum,treenode*","sum.","sum;","sum=nums[0]+nums[1]+nums[2];","sum一个意思，只是这里需要得到路径上的所有值。这就只能使用回溯法解决问题了。","sum中第二个方法，左右指针法。现在回顾一下two","sum为基础来解决这题。这里要求3个数加起来为0，也就是两个数加起来为零减去另一个数，这样就成了two","sum了，首先sort一下数组，这样，之后two","sum双指针法，首先sort数组，然后左右向中间逼近。这里面也用到了一中额外条件，就是数组已经有序，如果和小于target，就将小的变大一点，也就是left++，反之大的减小。","sum和four","sum的基础，但是这里需要返回的是原来数组的下标值，而不是数字本身。所以这里用这种方法得不到答案","sum的时候能直接用左右指针逼近需求值。记得考虑如何识别一样的结果，这里题目要求不能有重复结果。","support","suppos","swap","swap(nums[k],","swappairs(listnode*","symbol","symmetr","symmetric:","t","t(n,'.');","t)","t,","t.","t.back(),so","t=board[i][j];","t=q.front();","t=st.top();st.pop();","ta","tae","tail","tail=head;","tail=tail","take","target","target)","target,","target.","tarversal但是leetcode可能是有bug，代码是正确的但是最后得不到合理的结果。","telephon","th","thank","there?","therefor","therefore,","think","this:","those","thought","three","threesum(vector&","threesumclosest(vector&","through","time","time.","times).","times,","times.","tmp","tmp(1,1);","tmp){","tmp+=2;","tmp+=st1.top();","tmp,int","tmp,vector&","tmp.clear();","tmp.pop_back();","tmp.push_back(1);","tmp.push_back(nums[i]);","tmp.push_back(nums[left]);","tmp.push_back(nums[right]);","tmp.push_back(root","tmp.push_back(tq","tmp;","tmp=1;","tmp=di,","tmp=first","tmp=new","tmp=pre","tmp=q1.top();","tmp=q2.top();","tmp=res;","tmp=st1.top();","tmp=tmp","tmp[i]+=tmp[i","tmp{};","todo.push(root);","todo;","togeth","together.","top","top.","top?","total","tou1","tou1=new","tou1=tou1","tou2","tou2=new","tou2=tou2","tou=tou2;","toward","tq=q.front();","transact","transactions.","trap","trap(vector&","trapped.","travers","travers(root","travers(root);","travers(treenode*","traversal，只需要o(1)的空间，时间复杂度还是控制在o(n)。极大的减少了空间。这里主要是利用了叶子节点大量的空指针。前面问题使用栈来辅助解决，是因为访问到后续节点的时候，不能够再回到根节点，这里用叶子节点的指针，指向后继节点，方便回到前面。","tree","tree,","tree.","tree:","treenod","treenode(","treenode(i);","treenode(int","treenode(int_min);","treenode(nums[left]);","treenode(nums[ma]);","treenode(preorder[prelow]);","treenode*","trees)","trees,","trees.","tri","triangl","triangle)","triangle,","triangle.","triplet","triplets.","trivial,","true","true,","true.","true;","truncat","truncated,","twice","twice.","two","twosum(vector&","type","u","ud.pop();","ud.push(ch);","ud;","uniqu","uniquepaths(int","uniquepathswithobstacles(vector>&","unit","unit.","unknown","unlimit","unordered_map","unordered_map>","unordered_set","unsort","up","up:","updat","uppper_bound(int","up要求能不能不用string结题。于是又开始想如何不用string，其实在c++中string的结构和vector很像，动态数组vector也很适合存储数字中的所有位。","us","val","val(x),","val)","val);","val,","val;","valid","valid.","valu","value.","values.","ve(1);","ve.clear();","ve.push_back(tmp","ve.resize(q.size());","ve;","ve[i]=t","ve[ve.size()","vector","vector&","vector(p.size()+1,false);","vector>","vectorres(s.size()+1);","vector{};","version","vertic","void","want","want.","water","water.","way","way。","way就可以加上前两次的decod","way，如果当前的数字不等于0，就能加上前一个次的decod","well","well.","what.","whether","while(","while(!pro.empty()){","while(!q.empty()){","while(!q1.empty()){","while(!q2.empty()){","while(!qu.empty()){","while(count==0){","while(dd>=di){","while(end0)","while(head","while(head&&head","while(i","while(i&next,string&needle){","while(i>=0&&j","while(i>=0&&jtarget)","while(index","while(j>=0){","while(k","while(l=x)","while(left","while(left=target)","while(left>=0&&rightres){","while(leftnums[mid]&&target=nums[left]&&target","while(leftsum)","while(lefttarget)","while(lx)","while(n","while(next&&next","while(nstep[pos%2]){","while(nstep[step%2]){","while(prev","while(root","while(root){","while(root||!st.empty()){","while(root||!todo.empty()){","while(tail","while(tmp0^divisor>0?","while(tou1","while(true){","while(x){","white","white,","why?","width","wildcard","window","window,","within","without","word","word)","word,","word1","word1,","word2","word2)","word2,","word2.","word:","write","written","x","x)","x).","x){","x,","x.","x/=10;","x中查找是否有满足mid*mid=x的情况","y","z","z,","z.","zero","zero,","zero.","zigzag","zigzaglevelorder(treenode*","zigzag层次遍历，分析之后得知，可以用两个栈来辅助遍历。参差遍历本来是用一个队列就行。但是这个用两个栈，然后定义一个bool变量指定现在是左到右还是右到左，分别用一个栈辅助遍历。最后处理方式和层次遍历一样","{","{null};","{}","{};","||","}","}//上面是递归基","};","}els","}else{","→","−","≤","一个循环左右指针逼近，时间复杂度o(n)。","一个循环线性处理一个字符串，时间复杂度o(n)。","一个循环遍历数组，时间是o(n)，最开始拿到题目的时候直接类比成了括号匹配，就动手做了。其实括号匹配比这个多了一点位置上的限制，而这里只要统计数字即可。直接定义4个变量会更快，直接用4个寄存器存count，最后比较。","一次循环使用以为数组保存最后结果，复杂度时间o(n)","一次遍历出结果，时间复杂度是o(n)","一次遍历处理数组，时间复杂度o(n),使用一维数组保存结果，空间复杂度o(n)","一次遍历就可以得到答案，时间复杂度o(n)","一次遍历数组，时间复杂度o(n)","一次遍历数组，时间复杂度o(n)。没有用额外空间存储数据，空间复杂度是o(1)。符合要求","一次遍历解决问题，使用栈来辅助解决。对于数组，如果碰到顺序递增，就将当前数字压入栈中，如果当前height小于栈顶值，就将栈顶值弹出，并计算以弹出值为高度的矩形面积大小。这里关键是如何去计算矩形的宽，根据我们之前的算法，可以知道，当前栈顶的值肯定代表的是当前访问过的，剩下的最大值，因为比他更大的值在之前肯定被弹出计算了，那么，可以用当前index减去当前栈顶代表的index，就能表示矩形的宽了。","一次遍历解决问题，时间复杂度o(n)","一次遍历解决问题，第一步能走到的地方就是nums[0]，每到一个地方，确定当前位置能走到的最大值。在一步走完之后，确定下一个最大能走到的范围。","一次遍历解决，时间复杂度o(n)","一次遍历，时间复杂度o(n)","上面介绍的是回溯的情况，其实可以不需要回溯。因为肯定有4个地方需要我们放置数字，我们只需要3个循环，每个循环处理1","上面代码是9个月前写的。但是还不知道auto情有可原，毕竟是做到后面几题才慢慢用起来的。但是循环里的处理感觉太不简洁了，看着很难受。所以改成了现在的代码，虽然时间复杂度是一样的，但是代码更加易读，看着舒服","下午上课忽然想通了中午异或的问题，我中午出问题的代码是board[i][j]^=1.大家应该都知道，char是1个字节的，有8位，但是数字1是0000001，所以异或之后只有最后一位会改变。只改变最后一位的话，很容易导致异或之后和其他字符相同。","不管是使用两个栈还是一个栈，时间复杂度都是o(n),但是一个栈的方法明显好很多。","两个间隔能合并，就是两个范围有重合。重合的话存在两种情况，第一种是左边重合，一种是右边重合。但是如果程序中同时考虑两个的话，情况会复杂很多。所以首先按照做范围排序，消除左边影响。然后一直看右边，如果当前interval与前一个interval重合，合并两个interval。然后继续看下一个，如果两个不重合，将当前interv","之前也提到了，碰到链表题并且返回值是链表的情况下，可以首先考虑能否用递归解题。这题正好可以。和之前链表加法很相似，可能还简单一点","之前又题目做过合并两个有序链表的，这里是k个。可以借助归并排序的思路，每个两两合并，合并到最后就可以了。也可以用堆的来做。用最小堆，每次从堆中取出最小的链表，然后将这个链表的下一个值重新加入到堆中。在c++中，可以用stl自带的heap类算法做这题，也可以用直接用优先队列来做这题。","之前我一直搞不清这几个二分查找的本质区别和如何去写。这个我总结出了规律，对于lower_bound，要找到第一个target，在mid>=target的时候，将right=mid，最后一次查找的时候，right就会是第一个target。左开右闭表示法，最后当left和right差1的时候，mid肯定等于left，所以最后left会赋值给right+1。left和right会在第一个target处重合。","之前的值。处理一个数据的时候首先在hash表中对比以下，如果存在就返回。这种方法在之后很多能一次便利出结果的解答里都会出现，用一个hash表保存前面遍历的状态，之后拿到状态再来对比。","也是一次遍历数组，时间复杂度o(n)","二分查找，每次可以排除一半的数字。时间复杂度o(lgx)","二叉树层次遍历，使用queue辅助解决，必须掌握的题目","二叉树的中序遍历问题。这种问题用递归的方法是很简单的。但是还是要知道迭代的写法。毕竟如果节点很多的话，那么多递归函数，栈开销会很大。","二叉树问题，判断是否不是平衡二叉树。平衡二叉树定义是左右子树高度差要小于等于1.于是这题变成了类似求二叉树高度的问题。之前也做过二叉树高度问题，直接递归解决。这里只需要在求出高度之后加入一个判断。如果不是平衡的如何处理。求高度的函数，返回值必须是int而不是bool，这就是我们面临的问题。一种解决方案是把求高度的照搬过来，加一个全局变量，如果不平衡，全局变量为false。我们这里用另一种方法，如果不平衡，返回int_max.由于题目中不存在这么大的二叉树，所以int_max和任何子树组合都是不平衡的，最后int_max会传递到调用函数，最后判断是否为int_max来觉得返回true还是fals","二维动态规划，遍历一个二维数组。最后时间复杂度o(n²)","于是开始找规律，发现除了第一行和最后一行。中间每行都是两个纵向字符中夹着一个。首先找纵向字符的规律，每一行两个纵向字符位置差是，numrows*2","以之前的two","以第一个字符串为基准，从第一个字符开始，对比所有字符串。出现不一样的就返回，都是一样的就加入到返回值后面。","但是链表找第倒数第几个节点有个小技巧，就是前后指针。比如这里的倒数第n个节点，我们首先让前指针先走n步，然后后指针和前指针一起行动。当前指针到终点的时候，后指针这时候正好在倒数第n个节点。这样就能实现一边遍历就能删除节点。","使用hash表存放之前访问过的信息，可以保证每个位置只访问一次。这也类似一些一维数组题目，需要我们在o(n)时间复杂度内解决问题。这里需要保存数独规则下，当前位置对后面位置的影响。在数独中，行和列以及block中不能出现一样的数字。每次将访问的数字3个规则保存到hash表中，这种思路其实不难得出，难得出的是该如果在hash表中保存信息。如何保存可以看代码。","使用两个栈的方法肯定还有优化的地方，去看了discuss之后，发现可以直接使用一个队列来做。最后遍历的结果需保存在一个vector中，我们默认只能push_back但是其实可以先定义好vector，最后看情况从左右分别将结果放置进去。","使用栈，一次遍历得到结果，时间复杂度o(n)","假定有n个字符串，每个字符串平均长度是m，对每个字符排序时间复杂度是o(nlgn),两个字符串比较时间复杂度是o(n)，然后需要定义一个hashmap保存之前遍历的字符串的结果。最后时间复杂度是o(m*nlgn)","做多了题目之后会有感觉，这题用动态规划解决没问题。首先就用动态规划问题想。如果两个字符串已经匹配完毕，s串加入一个新字符，如果这个字符和t串最后一个字符不匹配。没有事情发生，总匹配数依然是没加入之前的结果。如果匹配，就是之前的s串和去掉最后一个字符的t串匹配的结果加上之前匹配结果。","其中：(horse,ro)代表增加一个，(hors,ros)代表减少一个，(hors,ro)代表替换操作，我们使用二维数组解决此题。但是这题可以优化到只用一维数组，这里只给出一维数组的解答。","其实和之前动态规划问题得到数组中的值有的像，此位置的值等于上两个位置的值相加。可以用二维数组解决，但是这里是可以优化到只用一维数组。每次重复使用即可。","其实整个算法的逻辑是不需要判断size==1的，也就是第一行。但是如果不判断的话，就会在循环中一直判断并且调用push_back到res中，会及其耗时间。加上第一个判断之后，整个代码运行时会快很多的。","其实是一道典型的回溯法问题。首先第一个位置放一个字符，然后进如下一个函数，运行完回溯之后，放两个字符。然后是3个。中间判断非法情况，如果长度大于1并且第一个字符是'0',显然不行。如果转化为数字之后，数值大于255，显然也是不行的。如果所有情况都满足，最后将结果push到res中。","其实是二分查考的变种，一个有序数组，rotate之后数组一半还是顺序的。二分查找只要确定一半是否满足","典型的动态规划问题，从底部出发向上遍历。每次选择两个子节点中最小的那一个，并且将它加到自己当前值上。重复操作，知道到根节点。","典型的动态规划问题，当前数字如果可以和前面数字组合成为一个合法的字符，当前decod","典型的动态规划问题，达到一个点的所有方案，是其上一个点和左边点的方案之和。因为我到这个点可以有两种情况走过来，一种是从上面往下走，一种是从左边往右走。","典型的回溯法，没有任何需要剪枝的地方，直接深度优先遍历所有的结果，并保存。","典型的计数排序，计数排序时间复杂度是","典型的递归解决二叉树问题","函数中进行的都是o(1)的操作，主要需要分析函数运行了多少次。分析了很久，得出时间变化满足很复杂，这里就不分析了","分析一次example4的二维数组是如何构造的","分析可以知道，价格走向只有上面两种，要不是一直递增，要不就是下降。这样就可以归纳成一般情况，写出代码.注意写成一般情况下时，要注意最后的状态，这里最后push一个int_min，就能处理所有情况","初始化是t.size())。如果size为0，就可以将当前状态加入到结果。并且移动头指针，逼近尾指针。","初次拿到这题想到的方法肯定是，首先判断正负，然后按位处理。每次取模得到个位，将得到的个位加到存储的结果中。这种想法是没有问题，但是我觉得用字符串翻转更加易懂，并且需要考虑的条件比较少。首先判断正负，然后将数字转化为字符串。之后调用翻转函数。最后将翻转过的字符串变回数字，这时候要注意的是，首先处理末尾的0，这时候会被翻转到首位，然后考虑如果现在字符串大于int_max,也就是2^31","删除倒数第n个链表中的节点。链表不像数组，不能直接按index访问。所有人第一次做这种题肯定是想先遍历一遍得出长度，然后在删除倒数第n个。","判断是否scramble，可以用递归的方式进行。如果一个字符串的左边和另一个字符串的左边是scramble，右边和右边是scramble。或者是，左右，右左是scramble字符串的话。那么这两个字符串就是scramble字符串。可以通过剪枝加快判断，首先判断两个字符串是否包含同样的字符，两个字符串中包含的字符不一样，就可以直接返回。虽然这里用了o(n)的时间，但是能剪去很多分支，是值得的。","利用动态规划来解决斐波拉契数列问题，时间复杂度o(n)，第二种方法相对于第一种方法减少了线性数组的开销，空间复杂度从o(n)减到了o(1)。","前序遍历和中序遍历转二叉树，首先利用前序遍历第一个值就是当前根节点的性质。找到根节点，只有去中序遍历中找到根节点对应的位置，位置左边就是左子树右边是右子树。然后对于左右子树，得到他们的大小，去前序遍历中找到他们对应的位置。然后对于左右子树，递归解决。","原始版本是二维数组版本，遍历二维数组即可，时间复杂度o(n²)。优化后的版本使用一维数组，空间复杂度降到了o(n),不仅如此，其时间也会降低","又是链表问题，并且直接返回一个链表。和之前做链表题一样直接用递归的形式解决","只能买一次商品，一次交易。那么我们从第一天开始买商品，第一天必须买，因为只有一次机会。到了第二天的时候，如果第二天比第一天贵，我们就得到利润。如果第二天比第一天便宜，那我们就第二天再买。这里转化成代码的意思就是，我们遍历数组的过程，每次都记录最小值，当做我们购买的价格，每次都用当前值减去最小值，就是我们的利润。","可以借助之前只能买一次的思想，只是这里是能买很多次。只要有利润，我们都加上。","可以看到其实就是将链表倒数第k个位置截断，然后拼接到前面。知道这个意思之后，就只需要考虑如果k大于size的问题了。如果k等于size，链表长度不变，这就很明显，我们可以令k=k%size。最后截断链表即可","可能讲述的还是不清晰，建议先做简单的动态规划解法字符串匹配问题。比如最长公共子序列等问题，再来做这题会清晰很多。","合并两个有序数组，这也是归并排序中必不可少的一步，如何做好这一步，速度快并且不溢出，还是有点难度的。我们归并排序的时候，一般是将前半部分数组复制，后半部分数组保存。但是这里是将后半部分数组赋值，前半部分保存下来。我们需要尽可能的利用前面保存的数据，能不改变就不改变。所以我们从后往前合并。如果nums2已经用完了，这时候，nums1前面的数据就能直接使用了，而不需要改变。","同样还有一种快慢指针，多用于求链表中点的。快慢指针都是从head点出发，一个每次走两步一个每次走一步，当快指针到tail节点的时候，慢指针正好在中点。","后序遍历和中序遍历得到二叉树本质和上一题没区别。只是后序遍历的根节点出现在最后面。将前一题的算法修改下即可","和上一题一样，甚至比上一题简单，使用递归解决","和上一题一样，这里更简单的是，已经直接排好序了。所以，我们只需要找出中间可能有交叉的interval。然后合并。前后没有交叉的interval，就不变，直接插入。","和上一题时间复杂度应该是一样的——o(n!)。但是最后时间会比上一个算法慢很多，原因就在于这里函数参数num没用引用传递。每次参数传递的时候，会复制所有的数字，时间开销会很大。","和上一题没什么不同，动态规划换汤不换药。上一题是路线的数量，这里是找到最小值。","和上题一个类型，简化了一点。上一题需要输出所有的结果，这里不需要结果，只需要数字。对于上一题，我们保存一棵树开始和结束的位置。来映射他的结果，但是这里不需要，因为只要树的size固定好，能生成的所有的tree的数量也就出来了。这里使用一个数组保存结果","和之前jump","和之前一个接水的题目异曲同工，使用左右指针结题。哪边短，动哪边，最后两指针重合退出循环。中间维护左右相应的最大值，存水量等于最大值减去当前值。","和之前层次遍历一样，最后得到结果的时候reverse一下","和之前旋转矩阵题类似解答，可以移步到spiral","和之前的path","和十进制加法没什么不同，都是定义一个进位标志位，两数相加再加上标志位。得到的结果就是这一位，改变标志位。最后注意开头的0需要删除","回归题目本身，这里我们在0","回溯法世家复杂度是o(2^n),很慢，但是这里加入了剪枝策略，还是一定程度上加快了运行速度的。","在一次交易的基础上，在第一次交易的结果上，我们减去当前价格，也就是减去第二次购买的成本。每次遍历都计算此值，得到最大值，也就是第二次购买的最便宜的时候。","在整个算法中，to_string时间复杂度是o(n),reverse函数时间复杂度是o(n)，最后atol函数函数的时间复杂度也是o(n).算法中其他部分时间复杂度是o(1)。所以最后时间复杂度是o(n)。其实感觉直接用数学方法，每位处理可能比这个快一点，但是用字符串操作数字翻转问题还是很舒服的。","复杂度时间和之前求三角形问题一样，都是o(n²)","如果下一天的价格比今天高，我们直接把利润加上。但是如果之后价格持续走高，我们先不加利润，一直往后看，直到最高的价格，我们用最高的价格减去最低的价格，这是利润增益。","如果不加记忆模式，时间复杂度就跟回溯法是一样的，但是加了记忆模式，算法快了很多，时间复杂度这里不好分析","如果两个字符不相等，则(horse,ros)=min((horse,ro),min((hors,ros),(hors,ro)))+1;","如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空（恢复树的形状）。输出当前节点。当前节点更新为当前节点的右孩子。","如果前驱节点的右孩子为空，将它的右孩子设置为当前节点。当前节点更新为当前节点的左孩子。","如果当前节点的左孩子不为空，在当前节点的左子树中找到当前节点在中序遍历下的前驱节点。","如果当前节点的左孩子为空，则输出当前节点并将其右孩子作为当前节点。","如果用深度优先搜索做这个题目，最后时间复杂度会是o(n)，因为会遍历所有节点，最后得到最浅的叶子节点。但是用广度优先搜索，只要找到第一个叶子节点就会返回，所以时间复杂度是降低很多的，不过应该也是o(n)","字符串处理操作。之前也总结了字符串题目的几种方法。动态规划，字符串匹配的一些算法，字典树等等。如果看到题目找不到思路，没有做过类似的，就使用这几种方法试试。","字符串问题，这题其实和最长公共子串问题很像，使用二维数组保存结果，动态规划解决问题。","定义了一个二维数组，如果s的长度为m，p的长度为n。二维数组就是一个m*n的矩形。算法需要遍历这个二维数组，循环中时间复杂度为o(1)，最后时间复杂度是o(mn)","对二维矩阵操作，双重循环。最后时间复杂度是o(n²)","对于up_bound同理，只要将mid>=target改为mid>target即可。这样就会在刚好大于target的地方重合。我理解这两个二分查找也是用了很久时间，看文字肯定会有很多疑惑，可以反复看看代码，自习推敲。","对于一个二叉树来说，最好使用递归解决问题。这里返回值是一系列的二叉树。对于一个range，我们可以首先定好一个中间节点当做二叉树的根节点，然后比这个值小的当做左子树，大的当右子树。这里我们就可以将代码简化很多了。但是单就这样做还是不行，会有大量的重复计算，比如1","对于第一个算法：回溯法时间复杂度是o(2^n)，但是这里应该不用那么久，遍历到后期，很多数中的数组都已经被加入，只需要直接continue；所以，这个算法还是不慢的","对于第二个算法：得出所有的排列，类似枚举法，一共需要执行n!次。每次时间复杂度是o(1)。最后时间复杂度就是o(n!).","对所有的节点遍历一遍得出结果，时间复杂度o(n)","对每个数操作一次，时间复杂度o(m+n)","对链表进行一次遍历，转置，循环中操作都是o(1)，最后时间复杂度o(n)","就可以排除另一半。我们找到有序的一半之后，判断target是否期中，如果是就进入这一半查找否则进入另一半。这样每次排除一半，时间复杂度就是o(nlgn)","就改了上一题一个条件，不能重复使用。在回溯进入下一个的函数的时候，将pos加一。而不是上一题那样不变","已知bst中有两个数字是错的，那么我们就找到两个错的位置就行。还是中序遍历，找到不是顺序增长的两个位置。记录下来，最后交换两个的值","帕斯卡三角形，三角形面积是o(n²)的，每个点都要计算，最后时间复杂度o(n²)","开始拿到这个题的时候，想法是直接构造一个二维数组，按照zigzag顺序把字符串存入其中。但是这种方法太慢了，也太占用空间了，很多地方都没有存数据。","开始算法得到链表的size，时间复杂度o(n)。然后找到倒数第k个节点，最后","很简单的题，时间复杂度o(n)","得到合法的bst，bst有个性质就是中序遍历结果是一个有序数组。所以我们直接中序遍历，每次保存前一个值，如果前一个值大于等于当前遍历的值，那么就不是一个合法的bst，否则就是合法的bst","得到子集问题，和之前的第一题相比，多了重复数字，在计算子集的时候，需要处理重复情况。这里可以用和第一题类似的回溯法。也可以一次次将新数字push_back到之前得到的结果中，得到新的子集。","得到所有排列问题，也是我们算法课将回溯法的一个例题。直接每次交换两个数字，将所有情况都交换一遍，就是所有排列。其实也可以用递归的思想解释问题。首先将一个数字交换到index","得到所有排列，和之前组合数相加得到target很像。这里直接使用回溯法，加上一个位置数组，区分是否已经加入新组合。","得到所有的子集问题，回溯法时间复杂度o(2^n)。每个数字可以出现一个也可以不出现，每个数字都会进行两次计算，两个分支。最后得到2^n","得到最浅的叶子节点的深度，直接用广度优先搜索即可，广度优先搜索有找的极值的性质","得到第一个缺失的正数，由于不需要考虑负数，这里可以很好地用数组下标对应相应的数。一次遍历将相应的数填入对应的下标当中。最后再次遍历数组，找到第一个缺失的数。","思路很简单，都类似一种暴力搜索法，直接从每个节点都开始搜索，如果是当前节点是对的，就从这个节点的4个方向继续搜索。使用dfs搜索，每一层都有4个分量。唯一需要注意的就是不能搜索到重复的值，也就是我这里搜索完，我去我右边的节点，我右边的节点不能再搜索这个原来的节点了。","我们只需要判断，如果两个字符串当前index上两个字符相等，则(horse,ros)=(hors,ro)","我们通过枚举法是可以直接枚举出所有排列的，但是这样太慢，并且排列直接明显有自己的规律。查询维基百科可以知道下一个排列的定义","我对这个题其实一点都不陌生。大一第一个学习，算法设计课，就有这个题目。说实话，就用死方法肯定能做出来，只是很多冗余代码，很多条件判断。我记得我当时用4个bool变量确定行动方向。最后4个int定义行动的长度。我第一次做这个题好像也是这么做的。但是我第三次做题我觉得我不可能还用这中办法。于是我看了discuss，发现确实有很好地办法。用一个step定义当前行动的次数，step模4就能得出行动的当前方向。step模2就能得到是左右移动还是上下移动。左右移动一次，下一次左右移动就要减一。再定义一个移动的次数，保存能够左右移动和上下移动的次数。这种算法就省去了很多的条件判断","我描述肯定不是很好懂，可以看看这个网站的例子:https://subetter.com/algorithm/kmp","我是如何做leetcod","我第一遍做leetcode的时候，做了一些简单题，觉得就算做不出也能看懂别人的思路，就开始看不起简单题。慢慢的，后面只做hard级别的题目，但是hard级别确实很难，需要很久时间。做了很多题目之后，发现自己前面做的已经忘了。","我第一遍做的算法：","我这里是用优先队列来做的","我首先自己写了一个双栈的代码，一个记录之前匹配好的括号的值，一个是记录左右括号括号的。但是后面看了discuss发现其实用一个栈就行，每次直接一次匹配完当前合法的，也就是右括号没多的情况。如果右括号多了，就改变一下start","所以想通之后，直接将代码改为board[i][j]^=255就稳稳的过了。（255=11111111）","所以，所有的结果可以看成是下面6项相加","找出有相同字符，顺序不一样的所有字符串，然后返回他们的集合。这里有一种最简单的办法确定","找到第一个target和最后一个target，需要时间复杂度是o(lgn)。其实就是二分查找，但是不是单纯的二分查找。需要找到第一个和最后一个。这其实很像stl函数中的lower_bound和up_bound。但是upper_bound是找到一个不是target的值。我们只需要将upper_bound最后的索引减一就行了。","括号匹配问题在上数据结构课上也是会讲的。没学过数据结构之前可能很难相出用栈来做这题，学完之后就很显然了。其实栈的用处很大，在之后很多地方也会用到。线性处理一组数据的时候，如果需要满足某些条件，可以考虑一下能否用栈解决。这题就是线性处理一个字符串，并且需要满足一些条件。最近的一个括会肯定要和最近出现的一个括首匹配。用一个栈保存最近出现的括首即可","括号匹配问题就是用栈解决，这里其实也存在括号匹配，所以首先考虑用栈解决。这题比括号匹配需要多考虑的一个点就是如果右括号多了的话，需要重新开始记录，因为后面的肯定和前面的括号不能连在一起了。所以这里需要特殊考虑。","括号生成，首先需要知道合法的括号序列是哪样的。一个右括号前必须有一个左括号。由于题目中都是小括号号，所以这里还不用考虑其他问题。这种题显然是回溯法解决，也可以说是递归。但是不是单纯的生成所有组合，而是有条件的生成。在生成了一个左括号的情况下，才能生成一个右括号。","排序需要o(nlgn)时间复杂度，算法中有两个循环，外层循环执行n次，内层循环执行(n","时间复杂度o(n),对于所有节点，最多访问节点两次，访问总次数是2n，所以最后时间复杂度o(n)","时间复杂度o(n),对于每个节点都只访问一次。","时间复杂度o(n),就是遍历问题，遍历所有节点之后会得到结果","时间复杂度o(n),遍历的时间，空间复杂度o(n)，使用一个栈保存数据。其实可以用之前的morri","时间复杂度o(n)的，递归肯定是比迭代方法慢一点的，但是两种方法时间复杂度是一样的。之后有时间来实现以下迭代版本的把。","时间复杂度o(n²)","时间复杂度前两个算法其实都是一样的，都是o(n)。但是字符串的算法更快。我认为是由于每次vector调用push_back后扩容导致。于是想了一下能否提前知道vector的size。防止在运行时分配内存，想到input都是int类型，int_max只有10位，所以定义一个大小为10的数组足够了。改进了一下，发现效果不是很明显，因为大小为10的话，其实内存分配所消耗的资源也不是很多。但是之后很多题目，如果能减少vector或者unordered_map的内存加倍操作，也就是提前resize好大小，很多题目会快很多。","时间复杂度和上两题一样,o(n²)","时间复杂度就是o(3^n)","时间复杂度就是o(n),遍历一遍树。","时间复杂度应该是o(n)遍历到所有节点，最后生成一个树","时间复杂度是o(2^n),对于每一个数，都能选择是放入或者不放入最后数组","时间应该可以认为是o(n)，遍历一个链表。","暴力法两个循环，heystack字符串长m，needle字符串长n，时间复杂度是o(nm)","最后这里需要仔细想清楚这里的思想以及代码里是如何进行的。不然很难理解，我个人也是第三次做这个题了，也都需要仔细回味","最坏情况下，所有字符都是一样的，每次都会进入子循环，时间复杂度是o(n平方)","最坏情况下，时间复杂度是o(n).最佳情况下，时间复杂度是o(1)","最大连续子数组和，典型的动态规划问题。如果现在给出大小为3的数字，分别为1，2，3。他们的结果是6这时候，如果数组最后加入一个数字4，结果会变为10。这个例子说明，可以用之前的结果来简化求解现在结果的过程。这也是动态规划的思想。这里还有一种情况，就是如果当前和为负值的情况，这时候不能用前面的负值，应该使用当前值直接表示。","最好情况下，所有字符都不一样，每次不会进入子循环，时间复杂度是o(n)","最开始拿到这题，发现，这不是跟第7题很类似吗。直接int2string，使用string来判断就是个很简单的题了。不到一分钟写完之后，发现description里的follow","最简单的一种方法是，两次遍历出结果，第一次遍历得到所有数的count，第二次遍历对数组赋值。","最简单的方法肯定是定义一个矩阵，然后将这个矩阵转置之后赋值给这个矩阵。但是这样需要o(n²)空间题目也明显要求了我们空间复杂度维持在o(1)内。我们必须在本来的数组上操作。如果只能这么操作的话，肯定就是使用swap函数，交换值。我们可以对称的改变矩阵，对于旋转90度，我们只需要首先按照竖直中线对称，再按照对角线对称就能得到结果。","有一个大循环，循环中进行3次遍历。相当于对二维数组进行遍历，时间复杂度o(n²)","有一种方法就是用标志，显示这里已经被搜索了，每次搜索完之后将当前字符设置为0。那么之后肯的和他匹配不了了。","本来是二分查找的变体，时间复杂度应该是o(lgn)，但是这里有个对left和right的预处理，最坏情况下，时间复杂度会到o(n)。","本质是树的层次遍历，判断每一层是否是对称的。层次遍历需要用到队列来辅助解决。得到每一层所有的值。最后遍历判断是否对称。但是对于这题，还有个技巧。对于左右子树，采取不同的策略。对于左子树，每次访问完之后，先push左及节点再push右节点。右子树，先push右再左。这样，每次从队列中拿两个节点出来，这两个节点就刚好都是对称节点。我们判断它们是否一样就行，然后继续运行。","机器人从原点出发，最后判断能否到达原点，一共4个操作，将所有的操作统计起来，最后比较上下是否一样，左右是否一样即可","树问题，递归解决，首先判断当前节点问题，然后对左右子树分别进行同样的计算。","正则表达式问题，两个字符串匹配。碰到字符串问题，一般都是动态规划问题，或者是字符串匹配的一些专门的算法，比如kmp这种。还有就是很多字符串，如果想要找到前缀重合之类的问题，就是trie字典树。正则表达式问题就是典型的动态规划解决的题目。使用一个二维数组保存每一个状态，横纵坐标ij表示s[0","步骤是：","每个函数正常情况下都能分出4个分支，每个分支中时间复杂度是线性的。最后时间复杂度不好定义。但是整个运行时间复杂度还是挺高的","每个数字代表3","每次在中序遍历中找到根节点的位置，一般情况下需要o(n)时间。那总时间可以表达为t(n)=2t(n/2)+o(n)，这个表达式用主定理分析可知为t(n)=o(nlgn)","每次将次数降低一半，时间复杂度o(lgn)","求2的100次方，如果直接乘100次，其实没有必要。完全可以求4的50次方，然后16的25次方。这样每次能减少一半的计算量。这里的问题就是还有负数。如果是负数的话，首先将x化为1/x。然后将n转化为正数。最后，一种最特殊的情况就是如果数字是int_min,最后直接将n","求出矩阵中的最大矩形，可以利用动态规划的思路求解。首先定义一个left数组，保存节点高度可以最左到哪个节点，再定义一个right数组，保存节点高度最右可以到哪个节点。然后还有height数组，保存当前节点的高度。最后我们从以为矩阵开始，慢慢加高维度。起始时，left数组初始化为0，right数组初始化为s","注意会有一种情况超过int_max,那就是int_min/","滑动窗口时间复杂度o(n),只需要一次遍历数组，最后产生结果。","滑动窗口问题，做了很多题目之后，碰到最后需要求连续序列满足一种情况的时候，一般都能用滑动窗口，也就是一前一后指针代表窗口。","然后去看了一下discuss，真的是发现每次看都会发现很意想不到的算法。比如中序遍历，这里就可以用morri","然后在上面得到第二次最低成本的情况下，得到第二次的最高利润，每遍历到一个数都记录。","然后开始第二遍，这次我每个题目都会去做。很多easy的题，做到第一档速度其实也不是很容易。但是很多题当你把你的算法从o(n平方)优化到o(n)时，你会感觉到自己的进步。并且很多easy的题目是很多难题的基础。这一遍，我做了300多题，题数到了600多，每次碰到好题也会做做笔记，这样之后感觉自己做题能力提升很快。","然而我看我第二次做的记录，发现第二次的方法更好(大概律是看discuss的)，每次不是记录出现的次数，而是记录字符的位置，每次碰到重复的可以直接跳转到相应的位置，而不是一次次慢慢走。","状态转移方程得出：对于aabcc和dbbca匹配aadbbcbcac问题。我们只需要找到","现在已经做了300多道题了，之前一直在本地用word记录心得，现在在这里用gitbook记录。正好也借着这个机会第三次从头开始再做一遍，就当是复习了。","现在是第三遍，做第三遍的原因一是做了300多题了，该回头复习一下了。二是找到了gitbook这个很好的平台可以记录自己的","用递归的思想去解题的话，首先想好每一个递归节点是如何设计的，然后设计好递归基处理结束清况。其实很类似数学归纳法。对于链表相加问题，将每个函数看成累加器的中的一个寄存器就行。每个节点的输入是两个数，还有前一个节点的进位。相加得到当前节点的值，将进位传给下一个函数。","直接代码实现","直接用遍历找回文串就行。遍历一次字符串，对每个字符串，将它当作一个回文串的中间，向两边扩散。比较得到最大值","直接递归解决，每次进入子节点的时候，将sum值减去当前节点的值，最后判断如果是叶子节点并且当前值为0，就返回true，否则返回fals","相当于对树进行了一次遍历，时间复杂度o(n)","相比于search","相比于上题加入了一些处理，但是时间复杂度还是o(n²)","看懂意思之后发现直接使用low_bound即可","碰到树以及链表的题，首先观察返回值，如果返回值是一个treenode*,也就是一个根节点。那基本上可以用递归解决。这里首先用递归的思想去想是否可行，首先便利数组找到最大值作为根节点。根节点左边的数组变成左子树，右边为右子树。对于左右子树，使用一样的解法就能得到答案。递归思想一相同，之后就问题不大了","第一次做这个题的时候，我也不是很清楚如何去计算一个数开根号。之后看了discuss了解到可以用二分查找。（感觉很多题都可以用二分查找，在一个大范围中找一个数，然后可以找到排除一半数的条件，条件很难找，需要仔细体会）。我记得我前几周做了一个contest也是用二分查找，当时做出来之后很惊讶。","第一次做这个题目的时候，我首先在行上做二分查找，然后再找到的列上在来一次二分查找。这样时间复杂度是o(lgn)，也不是很慢。但是其实这个题目就是需要一种二维的二分查找。二分查找的核心是，通过一次比较，能排除一部分数字。","第一次想这题，没看清是连续的数字。导致分析了很久也没结果。知道是连续的数字之后，就很好办了。可以直接用hashmap保存数字出现的次数，以及保存3个以上链表的末尾节点，每次访问到数字，首先查看链表后面末尾节点是否有值，有的话直接加一。如果没有，就将这个数字后面两个数字和这个组合起来，然后加入到将这个链表末尾节点加入hashmap，如果不能进行上面两个操作，说明这里有问题","第一种方法有两个循环每个循环运行n次，时间复杂度o(n平方)","第三次做的时候，发现第二次的解答有可以优化的地方。在外层循环遍历到大于0的数的时候，就可以直接返回结果了。时间从96ms提升到了88ms。","第三次做题真的就很有经验了，看到链表题并且返回的是一个链表直接递归解决。这题不递归肯定也能做，也不是很难，但是递归能省好多事","第三次参加比赛了，当时又止步在第三题。第三题当时其实想到用记忆化保存的方法解决问题，但是最后没有想通状态转移的过程。于是之后参考了discuss里大神的逻辑，然后自己写出代码","第三种方法使用hash表解答。code中用的是unordered_map。一定要注意在c++中unordered_map和map之间的区别，前一个底层是hash表，后一个底层是红黑树。如果需要o(1)的插入，查找。需要使用unordered_map。","第三种方法是利用hash表一遍遍历得到解答，使用hash表保存target","第三遍做这个题了，首先看到题目就觉得应该用快慢指针做。定义一个快指针，每次让快指针先走，快指针每走一步记录走过的字符。如果出现快指针走过的字符之前出现过一次，就让慢指针走。慢指针每走一步，擦除一个记录，如果擦出的刚好是快指针当前的字符，慢指针停止，又轮到快指针走。快指针每走一步计算一次快慢指针之差，最后返回最大的差值就行。","第二种方法就是先排序，然后使用左右指针逼近，求得结果。这种方法也是之后three","第二种方法这里没有给出代码，根据算法思想，首先排序之后再左右指针。排序最快的时间复杂度是o(nlgn)，左右指针便利时间复杂度是o(n)，最后时间复杂度是o(nlgn)","第二遍做的算法：","算法一次遍历链表，时间复杂度o(n)","算法中有两个for循环，循环中进行的操作是o(1)的，最后时间复杂度是o(n²)","算法中有两个循环，执行n²次，每次执行时间复杂度o(n)，最后时间复杂度o(n²)","算法遍历一次数组，时间复杂度o(n)。","类似一个安放数字问题，也很像回溯法构建一个排列的问题。只是回溯法需要列举出所有的情况，但是这里只需要返回最后的数字。所以就可以不用回溯的过程。这里需要多考虑的一点是，存在一个限制数组，rollmax。这里就需要记录当前数字之前出现了多少次，如果超过了限制，那么这次安放就不安放这个数字。这里的算法中，会出现很多重复计算的过程，很多前面的数字最后会汇聚到一个节点，如果不用记忆化方法保存之前的数据，肯定会tim","类似上一题得到组合，只不过这里需要得到所有大小的组合。只需要改变回溯法中，将中间结果push到res的位置，在进入下一个函数的时候就push，而不是在递归基的时候，这样就能到达遍历的效果。","类似遍历问题，时间复杂度o(n)","线性处理两个字符串，最后时间复杂度o(n)","组合数相加最后和为target，基本需要遍历所有集合。使用回溯法得到所有的集合，判断和是否为target。由于数字相加如果已经大于target，就没必要继续遍历了。所以加入了剪枝策略，首先sort数组，为了先遍历小数字后遍历大数字。然后在进入下一个函数之前判断是否满足剪枝策略，如果满足，就不进入函数。","组合问题需要放置k个值，每个值只能比后面的小，不能重复。时间复杂度不是太好分析，有很多种情况。但是回溯法时间复杂度一般都是o(2^n)","组合问题，典型的回溯法例题，使用回溯法解决","经典的n皇后问题。使用回溯法解决问题，每次放之前首先判断这个位置是否合法，如果合法，放入这位置。如果不合法判断下个能放的位置。最后如果没有能放的位置的时候，就回溯。","综合来看还是第二种方法更好","能否一次遍历出结果呢？是可以的，使用两个标志位标志0，1的结尾。遍历数组，如果为0，swap交换到0的末尾，如果为1，swap交换到1的末尾","虽然函数中是双重循环，但是子循环的步数很大。整个算法只需要遍历一遍字符串即可，时间复杂度是o(n)","虽然差算法和好算法，时间复杂度都需要o(n²)。但是这次的算法省去了很多多余中间变量，和条件判断，能够提升程序运行的时间。","虽然循环中间处理比二分查找多很多步骤，但是时间复杂度还是o(1)的。每次排除一半，最后时间复杂度是o(nlgn)","虽然有4个循环，但是时间复杂度不会很大，因为每个循环就进行3次，循环中的操作时间复杂度可以近似看做o(1)。","虽然有个循环，但是每次tmp都是乘2扩展，所以时间复杂度是o(1).","虽然递归函数会在调用栈上消耗很多时间，相比于迭代解题会慢一点。但是递归函数比迭代更容易写，需要考虑的情况会少很多，并且大多数情况下其实慢不了太多。所以链表题和树题建议先考虑递归解法","要得到匹配horse，ros的最小次数。如果我们知道(horse,ro),(hors,ros),(hors,ro)三个字符串的匹配结果。","观察知道，最后所有节点全部在右边展平，我们可以每次将左子树插入到右子树，原来的右子树接在左子树最后面，重复这个操作，直到所有的右子树都展平即可","观察知道，题目需要返回一个相加之后的链表。碰到链表题以及树类题目，尤其是返回一个链表或者树的时候，大概律用递归做会简单很多。","记录位置的方法:只有一个循环，不管什么清况都是运行n次，时间复杂度是o(n)。","记得csapp专门有一门实验就跟这个题目很类似。比如不用哪些符号实现其他的符号啥的。这里就是不用乘除取余数，实现除法。能用的还有加法和减法，除法其实就是看被除数中能减去几个除数。想到这一步就很清晰了，直接诶一直减去除数就行。但是这样有的慢，可以减去除数的倍数，这样会快一点。直接移位最好，就能很快生成2的倍数","设word1","设是s1长m，s2长n，会遍历一个m*n的二维数组,最后时间复杂度o(m*n)","说是爬楼梯，其实就是斐波拉契数列。当前值等于前两个的值相加。可以用动态规划解决，用一个一维数组保存所有结果。也可以直接用两个变量保存之前的两个数的值，而不保存所有的结果。","还是典型的树问题，使用递归解决。","还有一种思路利用异或的特性。异或两次回到原值，那么我们经历一个节点之后只需要将这个节点异或一下，之后回来的时候再异或一下，就能恢复。这种好处是可以不用中间变量来保存中间值，但是坏处就是异或之后的值可能会对之后的程序产生影响，我当时就是用这种思路，结果到倒数第二个样例的时候，失败了。最后换了第一种方法","还有个做题的技巧就是，多做点赞数高的题，要是差评比点赞高，我基本都不会做。这种题不是测试用例恶心，就是题目没有意义。所以有时候我会跳过一两个题目。","这个代码很简单，时间复杂度是o(n)","这个时间复杂度不是很好分析，但是在leetcode中运行时间也很快了，贴个图。","这个算法不好分析，现在假设有k个链表，每个链表大小都是n，并且都是一样的链表。首先建堆需要o(k)时间复杂度(我这题不是交换建堆，是一个个插入的)，每次拿出是o(lgk)，再插入是o(lgk)，进行n*k次最后时间是o(n)+o(lgk)*n*k,所以时间复杂度是o(nklgk).当然这只是大致分析。","这个题目不是很难，但是leetcode限制了我们，希望我们使用o(1)的空间复杂度，然后do","这类题目，无论你算法多么巧妙，时间复杂度都会是o(n²)，但是这里空间复杂度被限制到了o(1)，有很大提升。","这里不需要排序，时间复杂度o(n)","这里两个字符串，使用动态规划处理。一个二维数组实现。首先说一下动态规划的状态转移方程如何理解。","这里我们还是用递归解决。首先解决第一个index上数字的摆放，然后对于后面所有的数字，递归调用函数处理，直到最后一个数字。这里我们如何找到重复的情况呢？我们给第一个index摆放之后，进行第一个index替换的时候，判断，如果这时候，替换的数字和当前数字一样，就不替换，查看下一个数字。这样就能解决一个位置，两次为一个数字的问题了。注意这里不需要回溯，这是和上一题区别最大的地方。","这里时间复杂度不一定比两个二分查找更快，二分查找时间复杂度是o(lgn+lgm),这里时间复杂度最坏情况应该是o(m+n)；","这里是一种递归方法，时间复杂度还不会分析。使用动态规划解决之后时间还是不会太慢的","这里的时间复杂度我也不是太清楚，查了资料，网上有两种说法，我觉得o(n^n)和o(n!)都有道理。","这里需要生成一个平衡bst。平衡bst有很多种表示方法，但是我们只需要生成一种就行，那当然是生成最简单的bst。每次到一个节点时，找到中点，将一个有序数组对分。直到叶节点。这样就能保证最后得到的是平衡二叉树","这里题目有点描述不清楚，这里只有根节点可以连接两个子树，也就是加上子树上计算的结果。但是如果是中间节点，那就只能连接一个子树，选择左子树或者右子树。这里当然是选择最大的一个子树。","这里首先定义一个vector，存储所有字符出现的次数。然后定义一前一后两个指针，后指针走过一个字符的时候，将vector中字符保存的次数减一，如果减一是有效的（能在t字符串中体现），那就将之前保存的size减一(s","这题其实暴力发就能解决，就是单纯的字符串匹配。但是太慢了，历史上也有几位大佬觉得这种方法很慢。并且确实有可以优化的地方，如果是一个人来匹配字符串，当一个成功了很多次之后最后一个字符匹配失败了，他不会前进一位重新来。而是跳过已知的不匹配的情况。","这题可以用3种解法。如果是刚接触算法的，最开始想到的方法肯定是两个循环便利求解。","这题和15题算法基本一模一样","这题和15题算法基本一模一样，就是判断相等改成的找到最相近的，","这题和上一题唯一的区别就是有重复数字。但是这个区别对算法会产生很大的影响。两个一样的数，如果还是用上题的做法，会导致最后的结果多一倍。这里的问题就在于，如果找到重复的情况，然后规避这种情况。","这题和上一题唯一的区别就是，这里在机器人的行动路上放了一些障碍。其实和上题做法没什么区别，当当前走到障碍的时候，直接把这个位置的结果赋值0。这样的好处是，既可以代表这里没有一种方案可以走到，也可以在他右边和下面得到总线路时，加上的是0。","这题很之前的正则表达式很像，其实还简单一点。使用二维数组保存中间结果，动态规划解决问题。可以借鉴前面动态规划题目的解答。这里的?其实和之前的.一样。这里的*比之前的*更加加单","这题思路是，从左上角或者右下角开始。可以思考一下，为什么从这里出发。然后一步步和target比较，并且逼近target","这题我们也定义左右指针，每次都计算容量，最后取最大值。关键是左右指针如何移动。哪边的柱子更小我就移动哪个，因为移动必定导致宽度减小，只有靠高度增高，才有可能提高总容量，所以这样移动不会漏掉最大值","这题是上题的简化版本，最后返回数量即可","这题目其实很简单，怎么样都能做得出。只是有些人做的简单有些人做的复杂。首先用for","递归写法很简单，按顺序访问就行，对于迭代写法，我们首先要明白我们访问的顺序，先左，后中再右。我们使用一个栈保存中间节点，没碰到一个root节点，顺序将左子树一直push进栈，到叶子节点的时候，弹出顶上的节点，这时候就能访问了，然后对于这个节点的右子树，把它当做一个root，继续运行一遍","通过分析和leetcode最后的结果来说，上面3中方法从上到下应该是越来越好的。迭代对于递归来说，减少了函数栈开销，最后空间用的少一点。morris对于上面两中来说，只用了o(1)的空间复杂度，最后空间是用的最少的。","遍历一棵树，时间复杂度o(n)","遍历问题时间复杂度还是一样的，都是o(n)","遍历问题，时间复杂度o(n)","都是二分查找时间复杂度是o(lgn)，stl中的二分查找也是直接用low_bound实现的，low_bound在二分查找中只有两个判断分支，会比传统的3个判断分支更加平衡以及快速","重复以上1、2直到当前节点为空。","需要填满n*n个格子，每次填格子移动时间o(1)，最后时间复杂度o(n²)","题目很简单，判断相等赋值即可，只是看着自己之前写的代码实在太难受，想优化一下。","首先分析如果想装更多的水，我们需要两个柱子隔得越远越好，并且两个柱子中较矮的那根柱子也会决定装水的量。直接暴力法应该是很多人第一次就想到的方法，两个循环，遍历每一种组合。但是这题还有个条件，就是两个隔得越远，更大容量的概率会大很多。其实这里也用到了之前two","首先分析快慢指针，快慢指针最坏情况是所有字符一样，最好情况是所有字符都不同。在输入为n的情况下，最坏情况需要运行2n次，最好情况需要运行n次。最好最坏都是o(n)的时间复杂度。","首先初始化两个头，然后将两个partition，分别加到两个头上，最后将两个partition合并","首先对于下一天价格比今天低的情况，这时候我们肯定要下一天买而不是这一天高价买。也就是把买进的价格改成下一天的。","首先找到待旋转的节点，然后就是一个旋转链表问题了","首先排序，时间复杂度o(nlgn)。然后一个遍历数组，时间复杂度o(n)。最后时间复杂度o(nlgn)。这样看来，排序成了我们的瓶颈，但是也不能这么说，如果没有排序，时间复杂度至少是o(n²)","首先知道这里是最多允许买两次，意思是如果一次可以，那就买一个。就像exampl","首先考虑一般情况，如果两个字符相等了，只需要查看左上角的bool值即可，如果匹配当前也是匹配的。如果是一个点，那也好说，直接按照相等来匹配。关键就是如何匹配*。我们来回顾一下*的定义，首先可以是0个，0个的话，直接查看靠左两个方格的bool值即可，比如c*和空字符比较，也就是第一排前三个。两个空字符肯定是匹配的，值为1，c和空字符肯定不匹配，格子值为0，c*是和空字符匹配的，因为可以是0个c，所以，直接观察左边两个格子的值即可。然后考虑1个的情况，现在可以换一种思想，如果当前行列匹配需要1个字符，那么上一行和当前列匹配肯定是只需要0个字符，如果上一行成功匹配，那么这一行肯定也成功。同理可得1个或者多个匹配的话，只需要看上一个格子是否满足条件即可。"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"README.md","keywords":"","body":"README.md\n现在已经做了300多道题了，之前一直在本地用word记录心得，现在在这里用gitbook记录。正好也借着这个机会第三次从头开始再做一遍，就当是复习了。\n我是如何做leetcode\n我第一遍做leetcode的时候，做了一些简单题，觉得就算做不出也能看懂别人的思路，就开始看不起简单题。慢慢的，后面只做hard级别的题目，但是hard级别确实很难，需要很久时间。做了很多题目之后，发现自己前面做的已经忘了。\n然后开始第二遍，这次我每个题目都会去做。很多easy的题，做到第一档速度其实也不是很容易。但是很多题当你把你的算法从O(n平方)优化到O(n)时，你会感觉到自己的进步。并且很多easy的题目是很多难题的基础。这一遍，我做了300多题，题数到了600多，每次碰到好题也会做做笔记，这样之后感觉自己做题能力提升很快。\n现在是第三遍，做第三遍的原因一是做了300多题了，该回头复习一下了。二是找到了gitbook这个很好的平台可以记录自己的\n还有个做题的技巧就是，多做点赞数高的题，要是差评比点赞高，我基本都不会做。这种题不是测试用例恶心，就是题目没有意义。所以有时候我会跳过一两个题目。\n"},"1.-two-sum.html":{"url":"1.-two-sum.html","title":"1. Two Sum","keywords":"","body":"1. Two Sum\nproblem description\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\nExample\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n\nalgorithm thought\n这题可以用3种解法。如果是刚接触算法的，最开始想到的方法肯定是两个循环便利求解。\n第二种方法就是先排序，然后使用左右指针逼近，求得结果。这种方法也是之后three sum和four sum的基础，但是这里需要返回的是原来数组的下标值，而不是数字本身。所以这里用这种方法得不到答案\n第三种方法是利用hash表一遍遍历得到解答，使用hash表保存target-之前的值。处理一个数据的时候首先在hash表中对比以下，如果存在就返回。这种方法在之后很多能一次便利出结果的解答里都会出现，用一个hash表保存前面遍历的状态，之后拿到状态再来对比。\ncode\n//first\nclass Solution {\npublic:\n    vector twoSum(vector& nums, int target) {\n        for(int i=0;i twoSum(vector& nums, int target) {\n        unordered_map ma;   //the value represented by map.first is target-nums[i]\n                                     //the value represented by map.second is index\n        for(int i=0;i\nalgorithm analysis\n第一种方法有两个循环每个循环运行n次，时间复杂度O(n平方)\n第二种方法这里没有给出代码，根据算法思想，首先排序之后再左右指针。排序最快的时间复杂度是O(nlgn)，左右指针便利时间复杂度是O(n)，最后时间复杂度是O(nlgn)\n第三种方法使用hash表解答。code中用的是unordered_map。一定要注意在c++中unordered_map和map之间的区别，前一个底层是hash表，后一个底层是红黑树。如果需要O(1)的插入，查找。需要使用unordered_map。\ncode中有一个循环，循环中进行的操作只有查找和插入hash，时间都是O(1)，所以最后时间复杂度是O(n)\n"},"2.-add-two-numbers.html":{"url":"2.-add-two-numbers.html","title":"2. Add Two Numbers","keywords":"","body":"2. Add Two Numbers\nproblem description\nYou are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\nexample\nInput: (2 -> 4 -> 3) + (5 -> 6 -> 4)\nOutput: 7 -> 0 -> 8\nExplanation: 342 + 465 = 807.\n\nalgorithm thought\n观察知道，题目需要返回一个相加之后的链表。碰到链表题以及树类题目，尤其是返回一个链表或者树的时候，大概律用递归做会简单很多。\n用递归的思想去解题的话，首先想好每一个递归节点是如何设计的，然后设计好递归基处理结束清况。其实很类似数学归纳法。对于链表相加问题，将每个函数看成累加器的中的一个寄存器就行。每个节点的输入是两个数，还有前一个节点的进位。相加得到当前节点的值，将进位传给下一个函数。\ncode\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2,int add=0) {\n        if(l1==NULL){\n            if(add==0)\n                return l2;\n            l1=new ListNode(add);\n            return addTwoNumbers(l1,l2,0);\n        }else if(l2==NULL){\n            if(add==0)\n                return l1;\n            l2=new ListNode(add);\n            return addTwoNumbers(l1,l2,0);\n        }//上面是递归基\n        ListNode* res=new ListNode((l1->val+l2->val+add)%10);\n        res->next=addTwoNumbers(l1->next,l2->next,(l1->val+l2->val+add)/10);\n        return res;\n    }\n};\n\nalgorthm analysis\n时间应该可以认为是O(n)，遍历一个链表。\n虽然递归函数会在调用栈上消耗很多时间，相比于迭代解题会慢一点。但是递归函数比迭代更容易写，需要考虑的情况会少很多，并且大多数情况下其实慢不了太多。所以链表题和树题建议先考虑递归解法\n"},"3.-longest-substring-without-repeating-characters.html":{"url":"3.-longest-substring-without-repeating-characters.html","title":"3. Longest Substring Without Repeating Characters","keywords":"","body":"3. Longest Substring Without Repeating Characters\nproblem description\nGiven a string, find the length of the longest substring without repeating characters.\nexample\nExample 1:\n\nInput: \"abcabcbb\"\nOutput: 3 \nExplanation: The answer is \"abc\", with the length of 3. \n\nExample 2:\n\nInput: \"bbbbb\"\nOutput: 1\nExplanation: The answer is \"b\", with the length of 1.\n\nExample 3:\n\nInput: \"pwwkew\"\nOutput: 3\nExplanation: The answer is \"wke\", with the length of 3. \n             Note that the answer must be a substring, \"pwke\" is a subsequence and not a substring.\n\nalgorithm thought\n第三遍做这个题了，首先看到题目就觉得应该用快慢指针做。定义一个快指针，每次让快指针先走，快指针每走一步记录走过的字符。如果出现快指针走过的字符之前出现过一次，就让慢指针走。慢指针每走一步，擦除一个记录，如果擦出的刚好是快指针当前的字符，慢指针停止，又轮到快指针走。快指针每走一步计算一次快慢指针之差，最后返回最大的差值就行。\n然而我看我第二次做的记录，发现第二次的方法更好(大概律是看discuss的)，每次不是记录出现的次数，而是记录字符的位置，每次碰到重复的可以直接跳转到相应的位置，而不是一次次慢慢走。\ncode\n//快慢指针\nclass Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        if(s.size()==0)\n            return 0;\n        int head=1,last=0,res=1;\n        vector pos(256,0);\n        pos[s[last]]++;\n        while(head pos(256,-1);\n        int res=0;\n        for(int i=0;ileft){\n                left=pos[s[i]];\n            }\n            pos[s[i]]=i;\n            res=max(res,i-left);\n        }\n        return res;\n    }\n};\n\nalgorithm analysis\n首先分析快慢指针，快慢指针最坏情况是所有字符一样，最好情况是所有字符都不同。在输入为n的情况下，最坏情况需要运行2n次，最好情况需要运行n次。最好最坏都是O(n)的时间复杂度。\n记录位置的方法:只有一个循环，不管什么清况都是运行n次，时间复杂度是O(n)。\n综合来看还是第二种方法更好\n"},"5.-longest-palindromic-substring.html":{"url":"5.-longest-palindromic-substring.html","title":"5. Longest Palindromic Substring","keywords":"","body":"5. Longest Palindromic Substring\nproblem description\nGiven a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.\nexample\nExample 1:\n\nInput: \"babad\"\nOutput: \"bab\"\nNote: \"aba\" is also a valid answer.\n\nExample 2:\n\nInput: \"cbbd\"\nOutput: \"bb\"\n\nalgorithm thought\n直接用遍历找回文串就行。遍历一次字符串，对每个字符串，将它当作一个回文串的中间，向两边扩散。比较得到最大值\ncode\nclass Solution {\npublic:\n    string longestPalindrome(string s) {\n        if(s.size()==0)\n            return \"\";\n        int res=0;\n        int lm=0,rb=0,size=s.size();\n        for(int i=0;i=0&&rightres){\n                    lm=left;rb=right;\n                    res=right-left;\n                }\n                right++;left--;\n            }\n            left=i;right=i+1;\n            while(left>=0&&rightres){\n                    lm=left;rb=right;\n                    res=right-left;\n                }\n                right++;left--;\n            }\n        }\n        //cout\nalgorithm analysis\n最坏情况下，所有字符都是一样的，每次都会进入子循环，时间复杂度是O(n平方)\n最好情况下，所有字符都不一样，每次不会进入子循环，时间复杂度是O(n)\n"},"6.-zigzag-conversion.html":{"url":"6.-zigzag-conversion.html","title":"6. ZigZag Conversion","keywords":"","body":"6. ZigZag Conversion\nproblem description\nThe string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\nP   A   H   N\nA P L S I I G\nY   I   R\n\nAnd then read line by line: \"PAHNAPLSIIGYIR\"\nWrite the code that will take a string and make this conversion given a number of rows:\nstring convert(string s, int numRows);\n\nexample\nExample 1:\nInput: s = \"PAYPALISHIRING\", numRows = 3\nOutput: \"PAHNAPLSIIGYIR\"\n\nExample 2:\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\n\nP     I    N\nA   L S  I G\nY A   H R\nP     I\n\nalgorithm thought\n开始拿到这个题的时候，想法是直接构造一个二维数组，按照zigzag顺序把字符串存入其中。但是这种方法太慢了，也太占用空间了，很多地方都没有存数据。\n于是开始找规律，发现除了第一行和最后一行。中间每行都是两个纵向字符中夹着一个。首先找纵向字符的规律，每一行两个纵向字符位置差是，numRows*2-2。然后再找到中间夹着的字符是如何分布的。\ncode\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        if(numRows==1)\n            return s;\n        string res=\"\";\n        int step=numRows*2-2;\n        int step2=step;\n        for(int i=0;i=s.size())\n                return res;\n            res.push_back(s[j]);\n            while(true){\n                if(i!=0&&i!=numRows-1){\n                    if(j+step2\nalgorithm analysis\n虽然函数中是双重循环，但是子循环的步数很大。整个算法只需要遍历一遍字符串即可，时间复杂度是O(n)\n"},"7.-reverse-integer.html":{"url":"7.-reverse-integer.html","title":"7. Reverse Integer","keywords":"","body":"7. Reverse Integer\nproblem description\nGiven a 32-bit signed integer, reverse digits of an integer.\nExample 1:\nInput: 123\nOutput: 321\n\nExample 2:\nInput: -123\nOutput: -321\n\nExample 3:\nInput: 120\nOutput: 21\n\nNote:\nAssume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.\nalgorithm thought\n初次拿到这题想到的方法肯定是，首先判断正负，然后按位处理。每次取模得到个位，将得到的个位加到存储的结果中。这种想法是没有问题，但是我觉得用字符串翻转更加易懂，并且需要考虑的条件比较少。首先判断正负，然后将数字转化为字符串。之后调用翻转函数。最后将翻转过的字符串变回数字，这时候要注意的是，首先处理末尾的0，这时候会被翻转到首位，然后考虑如果现在字符串大于INT_MAX,也就是2^31-1，就直接返回0。\ncode\nclass Solution {\npublic:\n    int reverse(int x) {\n        bool bo=true;\n        if(x\"2147483647\");\n        if(s.size()>10||(s.size()==10&&s>\"2147483647\"))\n            return 0;\n        i=atol(s.c_str());\n        return bo?i:-i;\n    }\n};\n\nalgorithm analysis\n在整个算法中，to_string时间复杂度是O(n),reverse函数时间复杂度是O(n)，最后atol函数函数的时间复杂度也是O(n).算法中其他部分时间复杂度是O(1)。所以最后时间复杂度是O(n)。其实感觉直接用数学方法，每位处理可能比这个快一点，但是用字符串操作数字翻转问题还是很舒服的。\n"},"9.-palindrome-number.html":{"url":"9.-palindrome-number.html","title":"9. Palindrome Number","keywords":"","body":"9. Palindrome Number\nproblem description\nDetermine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.\nExample 1:\nInput: 121\nOutput: true\n\nExample 2:\nInput: -121\nOutput: false\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n\nExample 3:\nInput: 10\nOutput: false\nExplanation: Reads 01 from right to left. Therefore it is not a palindrome.\n\nFollow up:\nCoud you solve it without converting the integer to a string?\nalgorithm thought\n最开始拿到这题，发现，这不是跟第7题很类似吗。直接int2string，使用string来判断就是个很简单的题了。不到一分钟写完之后，发现description里的follow up要求能不能不用string结题。于是又开始想如何不用string，其实在c++中string的结构和vector很像，动态数组vector也很适合存储数字中的所有位。\ncode\n//convert to string\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x res;\n        while(x){\n            res.push_back(x%10);\n            x/=10;\n        }\n        int left=0,right=res.size()-1;\n        while(left res(10);\n        int left=0,right=-1;\n        while(x){\n            right++;\n            res[right]=x%10;\n            x/=10;\n        }\n        while(left\nalgorithm analysis\n时间复杂度前两个算法其实都是一样的，都是O(n)。但是字符串的算法更快。我认为是由于每次vector调用push_back后扩容导致。于是想了一下能否提前知道vector的size。防止在运行时分配内存，想到input都是int类型，INT_MAX只有10位，所以定义一个大小为10的数组足够了。改进了一下，发现效果不是很明显，因为大小为10的话，其实内存分配所消耗的资源也不是很多。但是之后很多题目，如果能减少vector或者unordered_map的内存加倍操作，也就是提前resize好大小，很多题目会快很多。\n"},"10.-regular-expression-matchinghard.html":{"url":"10.-regular-expression-matchinghard.html","title":"10. Regular Expression Matching","keywords":"","body":"10. Regular Expression Matching\nproblem description\nGiven an input string (s) and a pattern (p), implement regular expression matching with support for '.' and '*'.\n'.' Matches any single character.\n'*' Matches zero or more of the preceding element.\n\nThe matching should cover the entire input string (not partial).\nNote:\n\ns could be empty and contains only lowercase letters a-z.\np could be empty and contains only lowercase letters a-z, and characters like . or *.\n\nExample 1:\nInput:\ns = \"aa\"\np = \"a\"\nOutput: false\nExplanation: \"a\" does not match the entire string \"aa\".\n\nExample 2:\nInput:\ns = \"aa\"\np = \"a*\"\nOutput: true\nExplanation: '*' means zero or more of the preceding element, 'a'. Therefore, by repeating 'a' once, it becomes \"aa\".\n\nExample 3:\nInput:\ns = \"ab\"\np = \".*\"\nOutput: true\nExplanation: \".*\" means \"zero or more (*) of any character (.)\".\n\nExample 4:\nInput:\ns = \"aab\"\np = \"c*a*b\"\nOutput: true\nExplanation: c can be repeated 0 times, a can be repeated 1 time. Therefore, it matches \"aab\".\n\nExample 5:\nInput:\ns = \"mississippi\"\np = \"mis*is*p*.\"\nOutput: false\n\nalgorithm thought\n正则表达式问题，两个字符串匹配。碰到字符串问题，一般都是动态规划问题，或者是字符串匹配的一些专门的算法，比如kmp这种。还有就是很多字符串，如果想要找到前缀重合之类的问题，就是trie字典树。正则表达式问题就是典型的动态规划解决的题目。使用一个二维数组保存每一个状态，横纵坐标ij表示s[0-i]和p[0-j]的匹配结果。每一个状态转移的时候，一定要分析全要考虑的前一个状态。这一题中就*号很特殊，他可以是一个也可以是零个也可以是多个。分析到*号的时候，需要考虑的前一个状态有点多。\n分析一次example4的二维数组是如何构造的\n   '' c  *  a  *  b\n'' 1  0  1  0  1  0\na  0  0  0  1  1  0\na  0  0  0  0  1  0\nb  0  0  0  0  0  1\n\n首先考虑一般情况，如果两个字符相等了，只需要查看左上角的bool值即可，如果匹配当前也是匹配的。如果是一个点，那也好说，直接按照相等来匹配。关键就是如何匹配*。我们来回顾一下*的定义，首先可以是0个，0个的话，直接查看靠左两个方格的bool值即可，比如c*和空字符比较，也就是第一排前三个。两个空字符肯定是匹配的，值为1，c和空字符肯定不匹配，格子值为0，c*是和空字符匹配的，因为可以是0个c，所以，直接观察左边两个格子的值即可。然后考虑1个的情况，现在可以换一种思想，如果当前行列匹配需要1个字符，那么上一行和当前列匹配肯定是只需要0个字符，如果上一行成功匹配，那么这一行肯定也成功。同理可得1个或者多个匹配的话，只需要看上一个格子是否满足条件即可。\n可能讲述的还是不清晰，建议先做简单的动态规划解法字符串匹配问题。比如最长公共子序列等问题，再来做这题会清晰很多。\ncode\nclass Solution {\npublic:\n    bool isMatch(string s, string p) {\n        vector> dp(s.size()+1,vector(p.size()+1,false));\n        dp[0][0]=true;\n\n        for(int i=1;i\nalgorithm analysis\n定义了一个二维数组，如果s的长度为m，p的长度为n。二维数组就是一个m*n的矩形。算法需要遍历这个二维数组，循环中时间复杂度为O(1)，最后时间复杂度是O(mn)\n"},"11.-container-with-most-water.html":{"url":"11.-container-with-most-water.html","title":"11. Container With Most Water","keywords":"","body":"11. Container With Most Water\nproblem description\nGiven n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\nNote: You may not slant the container and n is at least 2.\n\nExample:\nInput: [1,8,6,2,5,4,8,3,7]\nOutput: 49\n\nalgorithm thought\n首先分析如果想装更多的水，我们需要两个柱子隔得越远越好，并且两个柱子中较矮的那根柱子也会决定装水的量。直接暴力法应该是很多人第一次就想到的方法，两个循环，遍历每一种组合。但是这题还有个条件，就是两个隔得越远，更大容量的概率会大很多。其实这里也用到了之前two sum中第二个方法，左右指针法。现在回顾一下two sum双指针法，首先sort数组，然后左右向中间逼近。这里面也用到了一中额外条件，就是数组已经有序，如果和小于target，就将小的变大一点，也就是left++，反之大的减小。\n这题我们也定义左右指针，每次都计算容量，最后取最大值。关键是左右指针如何移动。哪边的柱子更小我就移动哪个，因为移动必定导致宽度减小，只有靠高度增高，才有可能提高总容量，所以这样移动不会漏掉最大值\ncode\nclass Solution {\npublic:\n    int maxArea(vector& height) {\n        int i=0,j=height.size()-1;\n        int res=0;\n        while(i\nalgorithm analysis\n这个代码很简单，时间复杂度是O(n)\n"},"14.-longest-common-prefix.html":{"url":"14.-longest-common-prefix.html","title":"14. Longest Common Prefix","keywords":"","body":"14. Longest Common Prefix\nWrite a function to find the longest common prefix string amongst an array of strings.\nIf there is no common prefix, return an empty string \"\".\nExample 1:\nInput: [\"flower\",\"flow\",\"flight\"]\nOutput: \"fl\"\n\nExample 2:\nInput: [\"dog\",\"racecar\",\"car\"]\nOutput: \"\"\nExplanation: There is no common prefix among the input strings.\n\nNote:\nAll given inputs are in lowercase letters a-z\nalgorithm thought\n以第一个字符串为基准，从第一个字符开始，对比所有字符串。出现不一样的就返回，都是一样的就加入到返回值后面。\ncode\nclass Solution {\npublic:\n    string longestCommonPrefix(vector& strs) {\n        if(strs.size()==1)\n            return strs[0];\n        if(strs.size()==0)\n            return \"\";\n        string res=\"\";\n        for(int i=0;i\nalgorithm analysis\n其实整个算法的逻辑是不需要判断size==1的，也就是第一行。但是如果不判断的话，就会在循环中一直判断并且调用push_back到res中，会及其耗时间。加上第一个判断之后，整个代码运行时会快很多的。\n"},"15.-3sum.html":{"url":"15.-3sum.html","title":"15. 3Sum","keywords":"","body":"15. 3Sum\nproblem description\nGiven an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\nNote:\nThe solution set must not contain duplicate triplets.\nExample:\nGiven array nums = [-1, 0, 1, 2, -1, -4],\n\nA solution set is:\n[\n  [-1, 0, 1],\n  [-1, -1, 2]\n]\n\nalgorithm thought\n以之前的two sum为基础来解决这题。这里要求3个数加起来为0，也就是两个数加起来为零减去另一个数，这样就成了two sum了，首先sort一下数组，这样，之后two sum的时候能直接用左右指针逼近需求值。记得考虑如何识别一样的结果，这里题目要求不能有重复结果。\n第三次做的时候，发现第二次的解答有可以优化的地方。在外层循环遍历到大于0的数的时候，就可以直接返回结果了。时间从96ms提升到了88ms。\ncode\nclass Solution {\npublic:\n    vector> threeSum(vector& nums) {\n        sort(nums.begin(),nums.end());\n        vector> res;\n        for(int i=0;i tmp;\n                        tmp.push_back(nums[left]);\n                        tmp.push_back(nums[right]);\n                        tmp.push_back(nums[i]);\n                        res.push_back(tmp);\n                        while(leftsum)\n                        right--;\n                }\n            }\n        }\n        return res;\n    }\n};\n\nalgorithm analysis\n排序需要O(nlgn)时间复杂度，算法中有两个循环，外层循环执行n次，内层循环执行(n-i){i为0-n}次。循环需要时间复杂度是O(n平方)，最后算法的时间复杂度是O(n平方)。\n"},"16.3sum-closest.html":{"url":"16.3sum-closest.html","title":"16.3Sum Closest","keywords":"","body":"16.3Sum Closest\n这题和15题算法基本一模一样，就是判断相等改成的找到最相近的，\ncode\nclass Solution {\npublic:\n    int threeSumClosest(vector& nums, int target) {\n        sort(nums.begin(),nums.end());\n        int sum=nums[0]+nums[1]+nums[2];\n        for(int i=0;i0?left++:right--;\n                }\n            }\n        }\n\n        return sum;\n    }\n};\n\n"},"17.-letter-combinations-of-a-phone-number.html":{"url":"17.-letter-combinations-of-a-phone-number.html","title":"17. Letter Combinations of a Phone Number","keywords":"","body":"17. Letter Combinations of a Phone Number\nproblem description\nGiven a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.\nA mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.\n\nExample:\nInput: \"23\"\nOutput: [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\", \"cd\", \"ce\", \"cf\"].\n\nNote:\nAlthough the above answer is in lexicographical order, your answer could be in any order you want.\nalgorithm thought\n典型的回溯法，没有任何需要剪枝的地方，直接深度优先遍历所有的结果，并保存。\ncode\nclass Solution {\npublic:\n    string ma[8]={\"abc\",\"def\",\"ghi\",\"jkl\",\"mno\",\"pqrs\",\"tuv\",\"wxyz\"};\n    vector letterCombinations(string digits) {\n        vector res;\n        if(digits.size()==0)\n            return res;\n        conbin(res,digits,0,\"\");\n        return res;\n\n    }\n    void conbin(vector& res,string digits,int pos,string tmp){\n        if(pos==digits.size()){\n            res.push_back(tmp);\n            return;\n        }\n        int num=int(digits[pos]-'0')-2;\n        for(int i=0;i\nalgorithm analysis\n每个数字代表3-4个字符，如果都是代表3个字符。那么每次遍历的通量就是3个，如果输入digits size是n\n时间复杂度就是O(3^n)\n"},"18.-4sum.html":{"url":"18.-4sum.html","title":"18. 4Sum","keywords":"","body":"18. 4Sum\n这题和15题算法基本一模一样\ncode\nclass Solution {\npublic:\n    vector> fourSum(vector& nums, int target) {\n        sort(nums.begin(),nums.end());\n        vector> res;\n        if(nums.size()sum)\n                        right--;\n                    else\n                        left++;\n                    //cout\n"},"19.-remove-nth-node-from-end-of-list.html":{"url":"19.-remove-nth-node-from-end-of-list.html","title":"19. Remove Nth Node From End of List","keywords":"","body":"19. Remove Nth Node From End of List\nproblem description\nGiven a linked list, remove the n-th node from the end of list and return its head.\nExample:\nGiven linked list: 1->2->3->4->5, and n = 2.\n\nAfter removing the second node from the end, the linked list becomes 1->2->3->5.\n\nNote:\nGiven n will always be valid.\nFollow up:\nCould you do this in one pass?\nalgorithm thought\n删除倒数第n个链表中的节点。链表不像数组，不能直接按index访问。所有人第一次做这种题肯定是想先遍历一遍得出长度，然后在删除倒数第n个。\n但是链表找第倒数第几个节点有个小技巧，就是前后指针。比如这里的倒数第n个节点，我们首先让前指针先走n步，然后后指针和前指针一起行动。当前指针到终点的时候，后指针这时候正好在倒数第n个节点。这样就能实现一边遍历就能删除节点。\n同样还有一种快慢指针，多用于求链表中点的。快慢指针都是从head点出发，一个每次走两步一个每次走一步，当快指针到tail节点的时候，慢指针正好在中点。\ncode\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    public:\n    ListNode* removeNthFromEnd(ListNode* head, int n)\n    {\n        ListNode* tmp=new ListNode(-1);\n        tmp->next=head;\n        ListNode* second=tmp;\n        while(--n){\n            head=head->next;\n        }\n        while(head->next){\n            head=head->next;\n            second=second->next;\n        }\n        second->next=second->next->next;\n        return tmp->next;\n    }\n};\n\nalgorithm analysis\n一次遍历，时间复杂度O(n)\n"},"20.-valid-parentheses.html":{"url":"20.-valid-parentheses.html","title":"20. Valid Parentheses","keywords":"","body":"20. Valid Parentheses\nproblem description\nGiven a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\nAn input string is valid if:\n\nOpen brackets must be closed by the same type of brackets.\nOpen brackets must be closed in the correct order.\n\nNote that an empty string is also considered valid.\nExample 1:\nInput: \"()\"\nOutput: true\n\nExample 2:\nInput: \"()[]{}\"\nOutput: true\n\nExample 3:\nInput: \"(]\"\nOutput: false\n\nExample 4:\nInput: \"([)]\"\nOutput: false\n\nExample 5:\nInput: \"{[]}\"\nOutput: true\n\nalgorithm thought\n括号匹配问题在上数据结构课上也是会讲的。没学过数据结构之前可能很难相出用栈来做这题，学完之后就很显然了。其实栈的用处很大，在之后很多地方也会用到。线性处理一组数据的时候，如果需要满足某些条件，可以考虑一下能否用栈解决。这题就是线性处理一个字符串，并且需要满足一些条件。最近的一个括会肯定要和最近出现的一个括首匹配。用一个栈保存最近出现的括首即可\ncode\nclass Solution {\npublic:\n    bool isValid(string s) {\n        stack st;\n        for(auto ch:s){\n            if(ch==']'){\n                if(st.empty()||st.top()!='[')\n                    return false;\n                st.pop();\n            }else if(ch==')'){\n                if(st.empty()||st.top()!='(')\n                    return false;\n                st.pop();\n            }else if(ch=='}'){\n                if(st.empty()||st.top()!='{')\n                    return false;\n                st.pop();\n            }else\n                st.push(ch);\n        }\n        return st.empty();\n    }\n};\n\nalgorithm analysis\n一个循环线性处理一个字符串，时间复杂度O(n)。\n"},"21.-merge-two-sorted-lists.html":{"url":"21.-merge-two-sorted-lists.html","title":"21. Merge Two Sorted Lists","keywords":"","body":"21. Merge Two Sorted Lists\nproblem description\nMerge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.\nExample:\nInput: 1->2->4, 1->3->4\nOutput: 1->1->2->3->4->4\n\nalgorithm thought\n之前也提到了，碰到链表题并且返回值是链表的情况下，可以首先考虑能否用递归解题。这题正好可以。和之前链表加法很相似，可能还简单一点\ncode\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        if(l1==NULL)\n            return l2;\n        else if(l2==NULL)\n            return l1;\n        if(l1->valval){\n            l1->next=mergeTwoLists(l1->next,l2);\n            return l1;\n        }else{\n            l2->next=mergeTwoLists(l1,l2->next);\n            return l2;\n        }\n        return NULL;\n    }\n};\n\nalgorithm analysis\n时间复杂度O(n)的，递归肯定是比迭代方法慢一点的，但是两种方法时间复杂度是一样的。之后有时间来实现以下迭代版本的把。\n"},"22.-generate-parentheses.html":{"url":"22.-generate-parentheses.html","title":"22. Generate Parentheses","keywords":"","body":"22. Generate Parentheses\nproblem description\nGiven n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\nFor example, given n = 3, a solution set is:\n[\n  \"((()))\",\n  \"(()())\",\n  \"(())()\",\n  \"()(())\",\n  \"()()()\"\n]\n\nalgorithm thought\n括号生成，首先需要知道合法的括号序列是哪样的。一个右括号前必须有一个左括号。由于题目中都是小括号号，所以这里还不用考虑其他问题。这种题显然是回溯法解决，也可以说是递归。但是不是单纯的生成所有组合，而是有条件的生成。在生成了一个左括号的情况下，才能生成一个右括号。\ncode\nclass Solution {\npublic:\n    vector generateParenthesis(int n) {\n        if(n==0)\n            return {};\n        vector res;\n        help(res,\"\",n,0);\n        return res;\n    }\n    void help(vector&res,string tmp,int left,int right){\n        if(left==0&&right==0){\n            res.push_back(tmp);\n            return;\n        }\n        if(left){\n            help(res,tmp+'(',left-1,right+1);\n        }\n        if(right){\n            help(res,tmp+')',left,right-1);\n        }\n    }\n};\n\nalgorithm analysis\n函数中进行的都是O(1)的操作，主要需要分析函数运行了多少次。分析了很久，得出时间变化满足很复杂，这里就不分析了\n"},"23.-merge-k-sorted-lists.html":{"url":"23.-merge-k-sorted-lists.html","title":"23. Merge k Sorted Lists","keywords":"","body":"23. Merge k Sorted Lists\nproblem description\nMerge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.\nExample:\nInput:\n[\n  1->4->5,\n  1->3->4,\n  2->6\n]\nOutput: 1->1->2->3->4->4->5->6\n\nalgorithm thought\n之前又题目做过合并两个有序链表的，这里是k个。可以借助归并排序的思路，每个两两合并，合并到最后就可以了。也可以用堆的来做。用最小堆，每次从堆中取出最小的链表，然后将这个链表的下一个值重新加入到堆中。在c++中，可以用stl自带的heap类算法做这题，也可以用直接用优先队列来做这题。\n我这里是用优先队列来做的\ncode\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    struct cmp{\n        bool operator()(const ListNode* l1,ListNode* l2){\n            return l1->val>l2->val;\n        }\n    };\n    ListNode* mergeKLists(vector& lists) {\n        if(lists.size()==0)\n            return NULL;\n        priority_queue,cmp> pro;\n        for(auto list:lists){\n            if(list)\n                pro.push(list);\n        }\n        ListNode* res=new ListNode(-1);\n        ListNode* tmp=res;\n        while(!pro.empty()){\n            tmp->next=pro.top();\n            pro.pop();\n            tmp=tmp->next;\n            if(tmp->next)\n                pro.push(tmp->next);\n        }\n        return res->next;\n    }\n};\n\nalgorithm analysis\n这个算法不好分析，现在假设有k个链表，每个链表大小都是n，并且都是一样的链表。首先建堆需要O(k)时间复杂度(我这题不是交换建堆，是一个个插入的)，每次拿出是O(lgk)，再插入是O(lgk)，进行n*k次最后时间是O(n)+O(lgk)*n*k,所以时间复杂度是O(nklgk).当然这只是大致分析。\n"},"24.-swap-nodes-in-pairs.html":{"url":"24.-swap-nodes-in-pairs.html","title":"24. Swap Nodes in Pairs","keywords":"","body":"24. Swap Nodes in Pairs\nproblem description\nGiven a linked list, swap every two adjacent nodes and return its head.\nYou may not modify the values in the list's nodes, only nodes itself may be changed.\nExample:\nGiven 1->2->3->4, you should return the list as 2->1->4->3.\n\nalgorithm thought\n第三次做题真的就很有经验了，看到链表题并且返回的是一个链表直接递归解决。这题不递归肯定也能做，也不是很难，但是递归能省好多事\ncode\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* swapPairs(ListNode* head) {\n        if(head==NULL||head->next==NULL)\n            return head;\n        ListNode*tmp=head->next;\n        head->next=swapPairs(tmp->next);\n        tmp->next=head;\n        return tmp;\n    }\n};\n\nalgorithm analysis\n很简单的题，时间复杂度O(n)\n"},"27.-remove-element.html":{"url":"27.-remove-element.html","title":"27. Remove Element","keywords":"","body":"27. Remove Element\nproblem description\nGiven an array nums and a value val, remove all instances of that value in-place and return the new length.\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\nThe order of elements can be changed. It doesn't matter what you leave beyond the new length.\nExample 1:\nGiven nums = [3,2,2,3], val = 3,\n\nYour function should return length = 2, with the first two elements of nums being 2.\n\nIt doesn't matter what you leave beyond the returned length.\n\nExample 2:\nGiven nums = [0,1,2,2,3,0,4,2], val = 2,\n\nYour function should return length = 5, with the first five elements of nums containing 0, 1, 3, 0, and 4.\n\nNote that the order of those five elements can be arbitrary.\n\nIt doesn't matter what values are set beyond the returned length.\n\nClarification:\nConfused why the returned value is an integer but your answer is an array?\nNote that the input array is passed in by reference, which means modification to the input array will be known to the caller as well.\nInternally you can think of this:\n// nums is passed in by reference. (i.e., without making a copy)\nint len = removeElement(nums, val);\n\n// any modification to nums in your function would be known by the caller.\n// using the length returned by your function, it prints the first len elements.\nfor (int i = 0; i \nalgorithm thought\n题目很简单，判断相等赋值即可，只是看着自己之前写的代码实在太难受，想优化一下。\ncode\n//之前的代码\nclass Solution {\npublic:\n    int removeElement(vector& nums, int val) {\n        int res=nums.size();\n        int pos=0;\n        for(int i=0;i& nums, int val) {\n        int res=0;\n        for(auto num:nums){\n            if(num!=val)\n                nums[res++]=num;\n        }\n        return res;\n    }\n};\n\nalgorihtm analysis\n上面代码是9个月前写的。但是还不知道auto情有可原，毕竟是做到后面几题才慢慢用起来的。但是循环里的处理感觉太不简洁了，看着很难受。所以改成了现在的代码，虽然时间复杂度是一样的，但是代码更加易读，看着舒服\n"},"28.-implement-strstrkmp-suan-fa.html":{"url":"28.-implement-strstrkmp-suan-fa.html","title":"28. Implement strStr()","summary":"KMP算法","keywords":"","body":"28. Implement strStr()\nproblem description\nImplement strStr().\nReturn the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\nExample 1:\nInput: haystack = \"hello\", needle = \"ll\"\nOutput: 2\n\nExample 2:\nInput: haystack = \"aaaaa\", needle = \"bba\"\nOutput: -1\n\nClarification:\nWhat should we return when needle is an empty string? This is a great question to ask during an interview.\nFor the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C's strstr() and Java's indexOf().\nalgorithm thought\n这题其实暴力发就能解决，就是单纯的字符串匹配。但是太慢了，历史上也有几位大佬觉得这种方法很慢。并且确实有可以优化的地方，如果是一个人来匹配字符串，当一个成功了很多次之后最后一个字符匹配失败了，他不会前进一位重新来。而是跳过已知的不匹配的情况。\n我描述肯定不是很好懂，可以看看这个网站的例子:https://subetter.com/algorithm/kmp-algorithm.html\nkmp最关键的是构建next数组，然后就很好匹配了。\ncode\n//最原始的暴力法\nclass Solution {\npublic:\n    int strStr(string haystack, string needle) {\n        if(needle.size()==0)\n            return 0;\n        if(haystack.size()==0){\n                return -1;\n        }\n        for(int i=0;inext(needle.size(),-1);    \n        getnext(next,needle);\n        int i=0;\n        int j=0;\n        while(i&next,string&needle){\n        int size=needle.size()-1;\n        int i=0;\n        int j=-1;\n        //next[0]=-1;\n        while(i\nalgorithm analysis\n暴力法两个循环，heystack字符串长m，needle字符串长n，时间复杂度是O(nm)\nkmp算法，求出next数组时间复杂度是O(n),匹配时间复杂度是O(m)，m>n。最后时间复杂度是O(m)\n"},"29.-divide-two-integers.html":{"url":"29.-divide-two-integers.html","title":"29. Divide Two Integers","keywords":"","body":"29. Divide Two Integers\nproblem description\nGiven two integers dividend and divisor, divide two integers without using multiplication, division and mod operator.\nReturn the quotient after dividing dividend by divisor.\nThe integer division should truncate toward zero.\nExample 1:\nInput: dividend = 10, divisor = 3\nOutput: 3\n\nExample 2:\nInput: dividend = 7, divisor = -3\nOutput: -2\n\nalgorithm thought\n记得csapp专门有一门实验就跟这个题目很类似。比如不用哪些符号实现其他的符号啥的。这里就是不用乘除取余数，实现除法。能用的还有加法和减法，除法其实就是看被除数中能减去几个除数。想到这一步就很清晰了，直接诶一直减去除数就行。但是这样有的慢，可以减去除数的倍数，这样会快一点。直接移位最好，就能很快生成2的倍数\n注意会有一种情况超过INT_MAX,那就是INT_MIN/-1的时候，这种情况要单独考虑下\ncode\nclass Solution {\npublic:\n    int divide(int dividend, int divisor) {\n        if(dividend==INT_MIN&&divisor==-1)\n            return INT_MAX;\n        long dd=labs(dividend);\n        long di=labs(divisor);\n        long res=0;\n        while(dd>=di){\n            long tmp=di, m=1;\n            while(tmp0^divisor>0?-res:res;\n    }\n};\n\nalgorithm analysis\n虽然有个循环，但是每次tmp都是乘2扩展，所以时间复杂度是O(1).\n"},"31.-next-permutation.html":{"url":"31.-next-permutation.html","title":"31. Next Permutation","keywords":"","body":"31. Next Permutation\nproblem description\nImplement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\nIf such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).\nThe replacement must be in-place and use only constant extra memory.\nHere are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.\n1,2,3 → 1,3,23,2,1 → 1,2,31,1,5 → 1,5,1\nalgorithm thought\n我们通过枚举法是可以直接枚举出所有排列的，但是这样太慢，并且排列直接明显有自己的规律。查询维基百科可以知道下一个排列的定义\n\nFind the largest index k such that nums[k] . If no such index exists, just reverse nums and done.\nFind the largest index l > k such that nums[k] .\nSwap nums[k] and nums[l].\nReverse the sub-array nums[k + 1:].\n\n直接代码实现\ncode\nclass Solution {\npublic:\n    void nextPermutation(vector& nums) {\n        int n = nums.size(), k, l;\n        for (k = n - 2; k >= 0; k--) {\n            if (nums[k]  k; l--) {\n                if (nums[l] > nums[k]) {\n                    break;\n                }\n            } \n            swap(nums[k], nums[l]);\n            reverse(nums.begin() + k + 1, nums.end());\n        }\n    }\n};\n\nalgorithm analysis\n最坏情况下，时间复杂度是O(n).最佳情况下，时间复杂度是O(1)\n"},"32.-longest-valid-parentheses.html":{"url":"32.-longest-valid-parentheses.html","title":"32. Longest Valid Parentheses","keywords":"","body":"32. Longest Valid Parentheses\nproblem description\nGiven a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.\nExample 1:\nInput: \"(()\"\nOutput: 2\nExplanation: The longest valid parentheses substring is \"()\"\n\nExample 2:\nInput: \")()())\"\nOutput: 4\nExplanation: The longest valid parentheses substring is \"()()\"\n\nalgorithm thought\n括号匹配问题就是用栈解决，这里其实也存在括号匹配，所以首先考虑用栈解决。这题比括号匹配需要多考虑的一个点就是如果右括号多了的话，需要重新开始记录，因为后面的肯定和前面的括号不能连在一起了。所以这里需要特殊考虑。\n我首先自己写了一个双栈的代码，一个记录之前匹配好的括号的值，一个是记录左右括号括号的。但是后面看了discuss发现其实用一个栈就行，每次直接一次匹配完当前合法的，也就是右括号没多的情况。如果右括号多了，就改变一下start pos\ncode\n//use two stack\nclass Solution {\npublic:\n    int longestValidParentheses(string s) {\n        stack st1;\n        st1.push(0);\n        stack st2;\n        int res=0;\n        for(auto ch:s){\n            if(ch=='('){\n                st1.push(0);\n                st2.push(ch);\n            }else{\n                if(st2.empty()){\n                    st1.push(0);\n                }else{\n                    st2.pop();\n                    int tmp=st1.top();\n                    st1.pop();\n                    tmp+=2;\n                    tmp+=st1.top();\n                    st1.pop();\n                    res=max(res,tmp);\n                    st1.push(tmp);\n                }\n            }\n        }\n        return res;\n    }\n};\n\n//use one stack\nclass Solution {\npublic:\n    int longestValidParentheses(string s) {\n        stack st;\n        int startpos=-1;\n        int res=0;\n        for(int i=0;i\nalgorithm analysis\n不管是使用两个栈还是一个栈，时间复杂度都是O(n),但是一个栈的方法明显好很多。\n"},"33.-search-in-rotated-sorted-array.html":{"url":"33.-search-in-rotated-sorted-array.html","title":"33. Search in Rotated Sorted Array","keywords":"","body":"33. Search in Rotated Sorted Array\nproblem description\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\n(i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).\nYou are given a target value to search. If found in the array return its index, otherwise return -1.\nYou may assume no duplicate exists in the array.\nYour algorithm's runtime complexity must be in the order of O(log n).\nExample 1:\nInput: nums = [4,5,6,7,0,1,2], target = 0\nOutput: 4\n\nExample 2:\nInput: nums = [4,5,6,7,0,1,2], target = 3\nOutput: -1\n\nalgorithm thought\n其实是二分查考的变种，一个有序数组，rotate之后数组一半还是顺序的。二分查找只要确定一半是否满足 就可以排除另一半。我们找到有序的一半之后，判断target是否期中，如果是就进入这一半查找否则进入另一半。这样每次排除一半，时间复杂度就是O(nlgn)\ncode\nclass Solution {\npublic:\n    int search(vector& nums, int target) {\n        int left=0;int right=nums.size()-1;\n        int mid;\n        while(leftnums[mid]&&target=nums[left]&&target\nalgorithm thought\n虽然循环中间处理比二分查找多很多步骤，但是时间复杂度还是O(1)的。每次排除一半，最后时间复杂度是O(nlgn)\n"},"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html":{"url":"34.-find-first-and-last-position-of-element-in-sorted-array-binary_search-and-and-low_bound-and-and.html","title":"34. Find First and Last Position of Element in Sorted Array","summary":"binary_search&&low_bound&&up_bound","keywords":"","body":"34. Find First and Last Position of Element in Sorted Array\nproblem description\nGiven an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.\nYour algorithm's runtime complexity must be in the order of O(log n).\nIf the target is not found in the array, return [-1, -1].\nExample 1:\nInput: nums = [5,7,7,8,8,10], target = 8\nOutput: [3,4]\n\nExample 2:\nInput: nums = [5,7,7,8,8,10], target = 6\nOutput: [-1,-1]\n\nalgorithm thought\n找到第一个target和最后一个target，需要时间复杂度是O(lgn)。其实就是二分查找，但是不是单纯的二分查找。需要找到第一个和最后一个。这其实很像stl函数中的lower_bound和up_bound。但是upper_bound是找到一个不是target的值。我们只需要将upper_bound最后的索引减一就行了。\n之前我一直搞不清这几个二分查找的本质区别和如何去写。这个我总结出了规律，对于lower_bound，要找到第一个target，在mid>=target的时候，将right=mid，最后一次查找的时候，right就会是第一个target。左开右闭表示法，最后当left和right差1的时候，mid肯定等于left，所以最后left会赋值给right+1。left和right会在第一个target处重合。\n对于up_bound同理，只要将mid>=target改为mid>target即可。这样就会在刚好大于target的地方重合。我理解这两个二分查找也是用了很久时间，看文字肯定会有很多疑惑，可以反复看看代码，自习推敲。\ncode\n//upper_bound\nvoid uppper_bound(int l,int r,int x){\n      while(lx) r=mid;\n        else  l=mid+1;\n    }\n}\n\n//low_bound\nvoid lower_bound(int l,int r,int x){\n      while(l=x) r=mid;\n        else  l=mid+1;\n    }\n}\n\n//此题代码\nclass Solution {\npublic:\n    vector searchRange(vector& nums, int target) {\n        vector res(2,-1);\n        if(nums.size()==0)\n            return res;\n        int left=0,right=nums.size();\n        while(lefttarget)\n                right=mid;\n            else\n                left=mid+1;\n        }\n        left--;\n        if(left>=0&&left\nalgorithm analysis\n都是二分查找时间复杂度是O(lgn)，stl中的二分查找也是直接用low_bound实现的，low_bound在二分查找中只有两个判断分支，会比传统的3个判断分支更加平衡以及快速\n"},"35.-search-insert-position.html":{"url":"35.-search-insert-position.html","title":"35. Search Insert Position","keywords":"","body":"35. Search Insert Position\n看懂意思之后发现直接使用low_bound即可\ncode\nclass Solution {\npublic:\n    int searchInsert(vector& nums, int target) {\n        int left=0,right=nums.size(),mid;\n        while(left=target)\n                right=mid;\n            else\n                left=mid+1;\n        }\n        return left;\n    }\n};\n\n"},"36.-valid-sudoku.html":{"url":"36.-valid-sudoku.html","title":"36. Valid Sudoku","keywords":"","body":"36. Valid Sudoku\nproblem description\nDetermine if a 9x9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:\n\nEach row must contain the digits 1-9 without repetition.\nEach column must contain the digits 1-9 without repetition.\nEach of the 9 3x3 sub-boxes of the grid must contain the digits 1-9 without repetition.\n\nA partially filled sudoku which is valid.\nThe Sudoku board could be partially filled, where empty cells are filled with the character '.'.\nExample 1:\nInput:\n[\n  [\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\n  [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\n  [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\n  [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\n  [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\n  [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n  [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\n  [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\n  [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\n]\nOutput: true\n\nExample 2:\nInput:\n[\n  [\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\n  [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\n  [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\n  [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\n  [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\n  [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n  [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\n  [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\n  [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\n]\nOutput: false\nExplanation: Same as Example 1, except with the 5 in the top left corner being \n    modified to 8. Since there are two 8's in the top left 3x3 sub-box, it is invalid.\n\nNote:\n\nA Sudoku board (partially filled) could be valid but is not necessarily solvable.\nOnly the filled cells need to be validated according to the mentioned rules.\nThe given board contain only digits 1-9 and the character '.'.\nThe given board size is always 9x9.\n\nalgorithm thought\n使用hash表存放之前访问过的信息，可以保证每个位置只访问一次。这也类似一些一维数组题目，需要我们在O(n)时间复杂度内解决问题。这里需要保存数独规则下，当前位置对后面位置的影响。在数独中，行和列以及block中不能出现一样的数字。每次将访问的数字3个规则保存到hash表中，这种思路其实不难得出，难得出的是该如果在hash表中保存信息。如何保存可以看代码。\ncode\nclass Solution {\npublic:\n    bool isValidSudoku(vector>& board) {\n        unordered_set st;\n        for(int i=0;i\nalgorithm analysis\n算法中有两个for循环，循环中进行的操作是O(1)的，最后时间复杂度是O(n²)\n"},"39.-combination-sum.html":{"url":"39.-combination-sum.html","title":"39. Combination Sum","keywords":"","body":"39. Combination Sum\nproblem description\nGiven a set of candidate numbers (candidates) (without duplicates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.\nThe same repeated number may be chosen from candidates unlimited number of times.\nNote:\n\nAll numbers (including target) will be positive integers.\nThe solution set must not contain duplicate combinations.\n\nExample 1:\nInput: candidates = [2,3,6,7], target = 7,\nA solution set is:\n[\n  [7],\n  [2,2,3]\n]\n\nExample 2:\nInput: candidates = [2,3,5], target = 8,\nA solution set is:\n[\n  [2,2,2,2],\n  [2,3,3],\n  [3,5]\n]\n\nalgorithm thought\n组合数相加最后和为target，基本需要遍历所有集合。使用回溯法得到所有的集合，判断和是否为target。由于数字相加如果已经大于target，就没必要继续遍历了。所以加入了剪枝策略，首先sort数组，为了先遍历小数字后遍历大数字。然后在进入下一个函数之前判断是否满足剪枝策略，如果满足，就不进入函数。\ncode\nclass Solution {\npublic:\n    std::vector > combinationSum(std::vector &candidates, int target) {\n         std::sort(candidates.begin(), candidates.end());\n        std::vector > res;\n        std::vector combination;\n        combinationSum(candidates, target, res, combination, 0);\n        return res;\n    }\nprivate:\n    void combinationSum(std::vector &candidates, int target, std::vector > &res, std::vector &combination, int begin) {\n        if (!target) {\n            res.push_back(combination);\n            return;\n        }\n        for (int i = begin; i != candidates.size() && target >= candidates[i]; ++i)\n            if (i == begin || candidates[i] != candidates[i - 1]) {\n                combination.push_back(candidates[i]);\n                combinationSum(candidates, target - candidates[i], res, combination, i);\n                combination.pop_back();\n            }\n    }\n};\n\nalgorithm analysis\n回溯法世家复杂度是O(2^n),很慢，但是这里加入了剪枝策略，还是一定程度上加快了运行速度的。\n"},"40.-combination-sum-ii.html":{"url":"40.-combination-sum-ii.html","title":"40. Combination Sum II","keywords":"","body":"40. Combination Sum II\n就改了上一题一个条件，不能重复使用。在回溯进入下一个的函数的时候，将pos加一。而不是上一题那样不变\ncode\nclass Solution {\npublic:\n    std::vector > combinationSum2(std::vector &candidates, int target) {\n         std::sort(candidates.begin(), candidates.end());\n        std::vector > res;\n        std::vector combination;\n        combinationSum2(candidates, target, res, combination, 0);\n        return res;\n    }\nprivate:\n    void combinationSum2(std::vector &candidates, int target, std::vector > &res, std::vector &combination, int begin) {\n        if (!target) {\n            res.push_back(combination);\n            return;\n        }\n        for (int i = begin; i != candidates.size() && target >= candidates[i]; ++i)\n            if (i == begin || candidates[i] != candidates[i - 1]) {\n                combination.push_back(candidates[i]);\n                combinationSum2(candidates, target - candidates[i], res, combination, i+1);\n                combination.pop_back();\n            }\n    }\n};\n\n"},"41.-first-missing-positive.html":{"url":"41.-first-missing-positive.html","title":"41. First Missing Positive","keywords":"","body":"41. First Missing Positive\nproblem description\nGiven an unsorted integer array, find the smallest missing positive integer.\nExample 1:\nInput: [1,2,0]\nOutput: 3\n\nExample 2:\nInput: [3,4,-1,1]\nOutput: 2\n\nExample 3:\nInput: [7,8,9,11,12]\nOutput: 1\n\nNote:\nYour algorithm should run in O(n) time and uses constant extra space.\nalgorithm thought\n得到第一个缺失的正数，由于不需要考虑负数，这里可以很好地用数组下标对应相应的数。一次遍历将相应的数填入对应的下标当中。最后再次遍历数组，找到第一个缺失的数。\ncode\nclass Solution {\npublic:\n    int firstMissingPositive(vector& nums) {\n        int size=nums.size();\n        for(int i=0;i0&&nums[i]\nalgorithm analysis\n一次遍历数组，时间复杂度O(n)。没有用额外空间存储数据，空间复杂度是O(1)。符合要求\n"},"42.-trapping-rain-water.html":{"url":"42.-trapping-rain-water.html","title":"42. Trapping Rain Water","keywords":"","body":"42. Trapping Rain Water\nproblem description\nGiven n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.\nThe above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!\nExample:\nInput: [0,1,0,2,1,0,1,3,2,1,2,1]\nOutput: 6\n\nalgorithm thought\n和之前一个接水的题目异曲同工，使用左右指针结题。哪边短，动哪边，最后两指针重合退出循环。中间维护左右相应的最大值，存水量等于最大值减去当前值。\ncode\nclass Solution {\npublic:\n    int trap(vector& height) {\n        if(height.size()==0)\n            return 0;\n        int left=0;\n        int right=height.size()-1;\n        int leftmax=height[left];\n        int rightmax=height[right];\n        int res=0;\n        while(left\nalgorithm thought\n一个循环左右指针逼近，时间复杂度O(n)。\n"},"44.-wildcard-matching.html":{"url":"44.-wildcard-matching.html","title":"44. Wildcard Matching","keywords":"","body":"44. Wildcard Matching\nproblem description\nGiven an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*'.\n'?' Matches any single character.\n'*' Matches any sequence of characters (including the empty sequence).\n\nThe matching should cover the entire input string (not partial).\nNote:\n\ns could be empty and contains only lowercase letters a-z.\np could be empty and contains only lowercase letters a-z, and characters like ? or *.\n\nExample 1:\nInput:\ns = \"aa\"\np = \"a\"\nOutput: false\nExplanation: \"a\" does not match the entire string \"aa\".\n\nExample 2:\nInput:\ns = \"aa\"\np = \"*\"\nOutput: true\nExplanation: '*' matches any sequence.\n\nExample 3:\nInput:\ns = \"cb\"\np = \"?a\"\nOutput: false\nExplanation: '?' matches 'c', but the second letter is 'a', which does not match 'b'.\n\nExample 4:\nInput:\ns = \"adceb\"\np = \"*a*b\"\nOutput: true\nExplanation: The first '*' matches the empty sequence, while the second '*' matches the substring \"dce\".\n\nExample 5:\nInput:\ns = \"acdcb\"\np = \"a*c?b\"\nOutput: false\n\nalgorithm thought\n这题很之前的正则表达式很像，其实还简单一点。使用二维数组保存中间结果，动态规划解决问题。可以借鉴前面动态规划题目的解答。这里的?其实和之前的.一样。这里的*比之前的*更加加单\ncode\nclass Solution {\npublic:\n    bool isMatch(string s, string p) {\n        vector(p.size()+1,false);\n        for(int i=1;i\nalgorithm analysis\n时间复杂度O(n²)\n"},"45.-jump-game-ii.html":{"url":"45.-jump-game-ii.html","title":"45. Jump Game II","keywords":"","body":"45. Jump Game II\nproblem description\nGiven an array of non-negative integers, you are initially positioned at the first index of the array.\nEach element in the array represents your maximum jump length at that position.\nYour goal is to reach the last index in the minimum number of jumps.\nExample:\nInput: [2,3,1,1,4]\nOutput: 2\nExplanation: The minimum number of jumps to reach the last index is 2.\n    Jump 1 step from index 0 to 1, then 3 steps to the last index.\n\nNote:\nYou can assume that you can always reach the last index.\nalgorithm thought\n一次遍历解决问题，第一步能走到的地方就是nums[0]，每到一个地方，确定当前位置能走到的最大值。在一步走完之后，确定下一个最大能走到的范围。\ncode\nclass Solution {\npublic:\n    int jump(vector& nums) {\n        if(nums.size()\nalgorithm analysis\n一次遍历数组，时间复杂度O(n)\n"},"46.-permutations.html":{"url":"46.-permutations.html","title":"46. Permutations","keywords":"","body":"46. Permutations\nproblem description\nGiven a collection of distinct integers, return all possible permutations.\nExample:\nInput: [1,2,3]\nOutput:\n[\n  [1,2,3],\n  [1,3,2],\n  [2,1,3],\n  [2,3,1],\n  [3,1,2],\n  [3,2,1]\n]\n\nalgorithm thought\n我第一遍做的算法：\n得到所有排列，和之前组合数相加得到target很像。这里直接使用回溯法，加上一个位置数组，区分是否已经加入新组合。\n第二遍做的算法：\n得到所有排列问题，也是我们算法课将回溯法的一个例题。直接每次交换两个数字，将所有情况都交换一遍，就是所有排列。其实也可以用递归的思想解释问题。首先将一个数字交换到index 0位置，那么之后的所有位置又可以递归调用函数，得到后面位置的所有排列。第一位置补上，就是所有排列了\ncode\n//first time\nclass Solution {\npublic:\n    vector> permute(vector& nums) {\n        vector mark(nums.size(),false);\n        vector> res;\n        vector tmp;\n        per(nums,res,tmp,mark);\n        return res;\n    }\n    void per(vector& nums,vector>& res,vector tmp,vector& mark){\n        if(tmp.size()==nums.size()){\n            res.push_back(tmp);\n            return;\n        }\n        for(int i=0;i> permute(vector& nums) {\n        vector> res;\n        per(nums,res,0,nums.size());\n        return res;\n    }\n    void per(vector& nums,vector>& res,int i,int j){\n        if(i==j-1){\n            res.push_back(nums);\n            return ;\n        }\n        for(int k=i;k\nalgorithm thought\n对于第一个算法：回溯法时间复杂度是O(2^n)，但是这里应该不用那么久，遍历到后期，很多数中的数组都已经被加入，只需要直接continue；所以，这个算法还是不慢的\n对于第二个算法：得出所有的排列，类似枚举法，一共需要执行n!次。每次时间复杂度是O(1)。最后时间复杂度就是O(n!).\n"},"47.-permutations-ii.html":{"url":"47.-permutations-ii.html","title":"47. Permutations II","keywords":"","body":"47. Permutations II\nproblem desctiption\nGiven a collection of numbers that might contain duplicates, return all possible unique permutations.\nExample:\nInput: [1,1,2]\nOutput:\n[\n  [1,1,2],\n  [1,2,1],\n  [2,1,1]\n]\n\nalgorithm thought\n这题和上一题唯一的区别就是有重复数字。但是这个区别对算法会产生很大的影响。两个一样的数，如果还是用上题的做法，会导致最后的结果多一倍。这里的问题就在于，如果找到重复的情况，然后规避这种情况。\n这里我们还是用递归解决。首先解决第一个index上数字的摆放，然后对于后面所有的数字，递归调用函数处理，直到最后一个数字。这里我们如何找到重复的情况呢？我们给第一个index摆放之后，进行第一个index替换的时候，判断，如果这时候，替换的数字和当前数字一样，就不替换，查看下一个数字。这样就能解决一个位置，两次为一个数字的问题了。注意这里不需要回溯，这是和上一题区别最大的地方。\ncode\nclass Solution {\npublic:\n    vector> permuteUnique(vector& nums) {\n        sort(nums.begin(),nums.end());\n        vector> res;\n        recursion(nums, 0, nums.size(), res);\n        return res;\n    }\n    void recursion(vector num, int i, int j, vector > &res) {\n        if (i == j-1) {\n            res.push_back(num);\n            return;\n        }\n        for (int k = i; k \nalgorithm analysis\n和上一题时间复杂度应该是一样的——O(n!)。但是最后时间会比上一个算法慢很多，原因就在于这里函数参数num没用引用传递。每次参数传递的时候，会复制所有的数字，时间开销会很大。\n"},"48.-rotate-image.html":{"url":"48.-rotate-image.html","title":"48. Rotate Image","keywords":"","body":"48. Rotate Image\nproblem description\nYou are given an n x n 2D matrix representing an image.\nRotate the image by 90 degrees (clockwise).\nNote:\nYou have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.\nExample 1:\nGiven input matrix = \n[\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n],\n\nrotate the input matrix in-place such that it becomes:\n[\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n\nExample 2:\nGiven input matrix =\n[\n  [ 5, 1, 9,11],\n  [ 2, 4, 8,10],\n  [13, 3, 6, 7],\n  [15,14,12,16]\n], \n\nrotate the input matrix in-place such that it becomes:\n[\n  [15,13, 2, 5],\n  [14, 3, 4, 1],\n  [12, 6, 8, 9],\n  [16, 7,10,11]\n]\n\nalgorithm thought\n最简单的方法肯定是定义一个矩阵，然后将这个矩阵转置之后赋值给这个矩阵。但是这样需要O(n²)空间题目也明显要求了我们空间复杂度维持在O(1)内。我们必须在本来的数组上操作。如果只能这么操作的话，肯定就是使用swap函数，交换值。我们可以对称的改变矩阵，对于旋转90度，我们只需要首先按照竖直中线对称，再按照对角线对称就能得到结果。\ncode\nclass Solution {\npublic:\n    void rotate(vector>& matrix) {\n        int n=matrix.size();\n        for(int i=0;i\nalgorithm analysis\n对二维矩阵操作，双重循环。最后时间复杂度是O(n²)\n"},"49.-group-anagrams.html":{"url":"49.-group-anagrams.html","title":"49. Group Anagrams","keywords":"","body":"49. Group Anagrams\nproblem description\nGiven an array of strings, group anagrams together.\nExample:\nInput: [\"eat\", \"tea\", \"tan\", \"ate\", \"nat\", \"bat\"],\nOutput:\n[\n  [\"ate\",\"eat\",\"tea\"],\n  [\"nat\",\"tan\"],\n  [\"bat\"]\n]\n\nNote:\n\nAll inputs will be in lowercase.\nThe order of your output does not matter.\n\nalgorithm thought\n找出有相同字符，顺序不一样的所有字符串，然后返回他们的集合。这里有一种最简单的办法确定-sort。将所有的字符串sort一下，排序之后相等的字符串，就可以认定为一个group。\ncode\nclass Solution {\npublic:\n    vector> groupAnagrams(vector& strs) {\n        unordered_map> ma;\n        for(int i=0;i({strs[i]});\n            }\n\n        }\n        vector> res;\n        for(auto& m:ma){\n            res.push_back(m.second);\n        }\n        return res;\n    }\n};\n\nalgorithm analysis\n假定有n个字符串，每个字符串平均长度是m，对每个字符排序时间复杂度是O(nlgn),两个字符串比较时间复杂度是O(n)，然后需要定义一个hashmap保存之前遍历的字符串的结果。最后时间复杂度是O(m*nlgn)\n"},"50.-pow-x-n.html":{"url":"50.-pow-x-n.html","title":"50. Pow(x, n)","keywords":"","body":"50. Pow(x, n)\nproblem description\nImplement pow(x, n), which calculates x raised to the power n (xn).\nExample 1:\nInput: 2.00000, 10\nOutput: 1024.00000\n\nExample 2:\nInput: 2.10000, 3\nOutput: 9.26100\n\nExample 3:\nInput: 2.00000, -2\nOutput: 0.25000\nExplanation: 2-2 = 1/22 = 1/4 = 0.25\n\nNote:\n\n-100.0 x \nn is a 32-bit signed integer, within the range [−231, 231 − 1]\n\nalgorithm thought\n求2的100次方，如果直接乘100次，其实没有必要。完全可以求4的50次方，然后16的25次方。这样每次能减少一半的计算量。这里的问题就是还有负数。如果是负数的话，首先将x化为1/x。然后将n转化为正数。最后，一种最特殊的情况就是如果数字是INT_MIN,最后直接将n-1即可。这样INT_MIN就会变INT_MAX\ncode\nclass Solution {\npublic:\n    double myPow(double x, int n) {\n        if(n==0)\n            return 1;\n        if(n\nalgorithm analysis\n每次将次数降低一半，时间复杂度O(lgn)\n"},"51.-n-queens.html":{"url":"51.-n-queens.html","title":"51. N-Queens","keywords":"","body":"51. N-Queens\nproblem description\nThe n-queens puzzle is the problem of placing n queens on an n×n chessboard such that no two queens attack each other.\n\nGiven an integer n, return all distinct solutions to the n-queens puzzle.\nEach solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space respectively.\nExample:\nInput: 4\nOutput: [\n [\".Q..\",  // Solution 1\n  \"...Q\",\n  \"Q...\",\n  \"..Q.\"],\n\n [\"..Q.\",  // Solution 2\n  \"Q...\",\n  \"...Q\",\n  \".Q..\"]\n]\nExplanation: There exist two distinct solutions to the 4-queens puzzle as shown above.\n\nalgorithm thought\n经典的n皇后问题。使用回溯法解决问题，每次放之前首先判断这个位置是否合法，如果合法，放入这位置。如果不合法判断下个能放的位置。最后如果没有能放的位置的时候，就回溯。\ncode\nclass Solution {\npublic:\n    vector> solveNQueens(int n) {\n        vector> res;\n        string t(n,'.');\n        vector tmp;\n        for(int i=0;i>& res,vector tmp,int pos){\n        if(pos==tmp.size()){\n            res.push_back(tmp);\n            return;\n        }\n        for(int i=0;i res){\n        for(int i=0;i=0&&j>=0){\n            if(res[i--][j--]=='Q')\n                return false;\n        }\n        i=x-1;j=y+1;\n        while(i>=0&&j\nalgorithm analysis\n这里的时间复杂度我也不是太清楚，查了资料，网上有两种说法，我觉得O(n^n)和O(n!)都有道理。\n"},"52.-n-queens-ii.html":{"url":"52.-n-queens-ii.html","title":"52. N-Queens II","keywords":"","body":"52. N-Queens II\n这题是上题的简化版本，最后返回数量即可\n"},"53.-maximum-subarray.html":{"url":"53.-maximum-subarray.html","title":"53. Maximum Subarray","keywords":"","body":"53. Maximum Subarray\nproblem description\nGiven an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.\nExample:\nInput: [-2,1,-3,4,-1,2,1,-5,4],\nOutput: 6\nExplanation: [4,-1,2,1] has the largest sum = 6.\n\nFollow up:\nIf you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle\nalgorithm analysis\n最大连续子数组和，典型的动态规划问题。如果现在给出大小为3的数字，分别为1，2，3。他们的结果是6这时候，如果数组最后加入一个数字4，结果会变为10。这个例子说明，可以用之前的结果来简化求解现在结果的过程。这也是动态规划的思想。这里还有一种情况，就是如果当前和为负值的情况，这时候不能用前面的负值，应该使用当前值直接表示。\ncode\nclass Solution {\npublic:\n    int maxSubArray(vector& nums) {\n        vector dp(nums.size(),0);\n        int ma=nums[0];\n        dp[0]=nums[0];\n        for(int i=1;i0?dp[i-1]:0);\n            ma=max(ma,dp[i]);\n        }\n        return ma;\n    }\n};\n\nalgorithm anlysis\n一次循环使用以为数组保存最后结果，复杂度时间O(n)\n"},"54.-spiral-matrix.html":{"url":"54.-spiral-matrix.html","title":"54. Spiral Matrix","keywords":"","body":"54. Spiral Matrix\nproblem description\nGiven a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.\nExample 1:\nInput:\n[\n [ 1, 2, 3 ],\n [ 4, 5, 6 ],\n [ 7, 8, 9 ]\n]\nOutput: [1,2,3,6,9,8,7,4,5]\n\nExample 2:\nInput:\n[\n  [1, 2, 3, 4],\n  [5, 6, 7, 8],\n  [9,10,11,12]\n]\nOutput: [1,2,3,4,8,12,11,10,9,5,6,7]\n\nalgorithm thought\n我对这个题其实一点都不陌生。大一第一个学习，算法设计课，就有这个题目。说实话，就用死方法肯定能做出来，只是很多冗余代码，很多条件判断。我记得我当时用4个bool变量确定行动方向。最后4个int定义行动的长度。我第一次做这个题好像也是这么做的。但是我第三次做题我觉得我不可能还用这中办法。于是我看了discuss，发现确实有很好地办法。用一个step定义当前行动的次数，step模4就能得出行动的当前方向。step模2就能得到是左右移动还是上下移动。左右移动一次，下一次左右移动就要减一。再定义一个移动的次数，保存能够左右移动和上下移动的次数。这种算法就省去了很多的条件判断\ncode\nclass Solution {\npublic:\n    vector spiralOrder(vector>& matrix) {\n        vector> move{{0,1},{1,0},{0,-1},{-1,0}};\n        int nr=matrix.size(); if(nr==0) return {};\n        int nc=matrix[0].size(); if(nc==0) return {};\n        vector res(nr*nc);\n        int pos=0;\n        vector nstep{nc,nr-1};\n        int step=0;\n        nr=0;nc=-1;\n        while(nstep[step%2]){\n            for(int i=0;i\nalgorithm thought\n虽然差算法和好算法，时间复杂度都需要O(n²)。但是这次的算法省去了很多多余中间变量，和条件判断，能够提升程序运行的时间。\n"},"55.-jump-game.html":{"url":"55.-jump-game.html","title":"55. Jump Game","keywords":"","body":"55. Jump Game\nproblem description\nGiven an array of non-negative integers, you are initially positioned at the first index of the array.\nEach element in the array represents your maximum jump length at that position.\nDetermine if you are able to reach the last index.\nExample 1:\nInput: [2,3,1,1,4]\nOutput: true\nExplanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.\n\nExample 2:\nInput: [3,2,1,0,4]\nOutput: false\nExplanation: You will always arrive at index 3 no matter what. Its maximum\n             jump length is 0, which makes it impossible to reach the last index.\n\nalgorithm thought\n和之前jump game2类似。这里不限制你跳跃的次数，我们只需要每次记录能达到的最远距离即可。每次循环开始的时候更新最大值。如果更新之后的最大值和当前值是一样的话，说明只能跳到这里了，return false。如果所有的跳完，return true\ncode\nclass Solution {\npublic:\n    bool canJump(vector& nums) {\n        int maxrive=0;\n        for(int i=0;i\nalgorithm analysis\n算法遍历一次数组，时间复杂度O(n)。\n"},"56.-merge-intervals.html":{"url":"56.-merge-intervals.html","title":"56. Merge Intervals","keywords":"","body":"56. Merge Intervals\nproblem description\nGiven a collection of intervals, merge all overlapping intervals.\nExample 1:\nInput: [[1,3],[2,6],[8,10],[15,18]]\nOutput: [[1,6],[8,10],[15,18]]\nExplanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].\n\nExample 2:\nInput: [[1,4],[4,5]]\nOutput: [[1,5]]\nExplanation: Intervals [1,4] and [4,5] are considered overlapping.\n\nNOTE: input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.\nalgorithm thought\n两个间隔能合并，就是两个范围有重合。重合的话存在两种情况，第一种是左边重合，一种是右边重合。但是如果程序中同时考虑两个的话，情况会复杂很多。所以首先按照做范围排序，消除左边影响。然后一直看右边，如果当前interval与前一个interval重合，合并两个interval。然后继续看下一个，如果两个不重合，将当前interval push进vector，访问到下一个时，当前interval就是下一个interval\ncode\n/**\n * Definition for an interval.\n * struct Interval {\n *     int start;\n *     int end;\n *     Interval() : start(0), end(0) {}\n *     Interval(int s, int e) : start(s), end(e) {}\n * };\n */\nclass Solution {\npublic:\n    vector merge(vector& ins) {\n    if (ins.empty()) return vector{};\n    vector res;\n    sort(ins.begin(), ins.end(), [](Interval a, Interval b){return a.start \nalgorithm analysis\n首先排序，时间复杂度O(nlgn)。然后一个遍历数组，时间复杂度O(n)。最后时间复杂度O(nlgn)。这样看来，排序成了我们的瓶颈，但是也不能这么说，如果没有排序，时间复杂度至少是O(n²)\n"},"57.-insert-interval.html":{"url":"57.-insert-interval.html","title":"57. Insert Interval","keywords":"","body":"57. Insert Interval\nproblem description\nGiven a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).\nYou may assume that the intervals were initially sorted according to their start times.\nExample 1:\nInput: intervals = [[1,3],[6,9]], newInterval = [2,5]\nOutput: [[1,5],[6,9]]\n\nExample 2:\nInput: intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]\nOutput: [[1,2],[3,10],[12,16]]\nExplanation: Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].\n\nNOTE: input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.\nalgorithm thought\n和上一题一样，这里更简单的是，已经直接排好序了。所以，我们只需要找出中间可能有交叉的interval。然后合并。前后没有交叉的interval，就不变，直接插入。\ncode\n/**\n * Definition for an interval.\n * struct Interval {\n *     int start;\n *     int end;\n *     Interval() : start(0), end(0) {}\n *     Interval(int s, int e) : start(s), end(e) {}\n * };\n */\nclass Solution {\npublic:\n    vector insert(vector& intervals, Interval newInterval) {\n        vector res;\n        int index=0;\n        while(index\nalgorithm analysis\n这里不需要排序，时间复杂度O(n)\n"},"59.-spiral-matrix-ii.html":{"url":"59.-spiral-matrix-ii.html","title":"59. Spiral Matrix II","keywords":"","body":"59. Spiral Matrix II\nproblem description\nGiven a positive integer n, generate a square matrix filled with elements from 1 to _n_2 in spiral order.\nExample:\nInput: 3\nOutput:\n[\n [ 1, 2, 3 ],\n [ 8, 9, 4 ],\n [ 7, 6, 5 ]\n]\n\nalgorithm thought\n和之前旋转矩阵题类似解答，可以移步到Spiral Matrix看algorithm thought\ncode\nclass Solution {\npublic:\n    vector> generateMatrix(int n) {\n        vector> res(n,vector(n,0));\n        vector nstep{n,n-1};\n        vector> move{{0,1},{1,0},{0,-1},{-1,0}};\n        int i=0,j=-1;\n        int pos=0;\n        int tmp=1;\n        while(nstep[pos%2]){\n            for(int k=0;k\nalgorithm analysis\n需要填满n*n个格子，每次填格子移动时间O(1)，最后时间复杂度O(n²)\n"},"60.-permutation-sequence.html":{"url":"60.-permutation-sequence.html","title":"60. Permutation Sequence","keywords":"","body":"60. Permutation Sequence\nproblem description\nThe set [1,2,3,...,n] contains a total of n! unique permutations.\nBy listing and labeling all of the permutations in order, we get the following sequence for n = 3:\n\n\"123\"\n\"132\"\n\"213\"\n\"231\"\n\"312\"\n\"321\"\n\nGiven n and k, return the _k_th permutation sequence.\nNote:\n\nGiven n will be between 1 and 9 inclusive.\nGiven k will be between 1 and n! inclusive.\n\nExample 1:\nInput: n = 3, k = 3\nOutput: \"213\"\n\nExample 2:\nInput: n = 4, k = 9\nOutput: \"2314\"\n\nalgorithm thought\nn个数排列有n!种情况，如果数字是1-n，那么1开头的排列会有(n-1)!个。同理可以退出，如果需要找第k个排列，第一个字符我们是可以确定的。然后利用递归的思路，一直将数字推出。\ncode\n"},"61.-rotate-list.html":{"url":"61.-rotate-list.html","title":"61. Rotate List","keywords":"","body":"61. Rotate List\nproblem description\nGiven a linked list, rotate the list to the right by k places, where k is non-negative.\nExample 1:\nInput: 1->2->3->4->5->NULL, k = 2\nOutput: 4->5->1->2->3->NULL\nExplanation:\nrotate 1 steps to the right: 5->1->2->3->4->NULL\nrotate 2 steps to the right: 4->5->1->2->3->NULL\n\nExample 2:\nInput: 0->1->2->NULL, k = 4\nOutput: 2->0->1->NULL\nExplanation:\nrotate 1 steps to the right: 2->0->1->NULL\nrotate 2 steps to the right: 1->2->0->NULL\nrotate 3 steps to the right: 0->1->2->NULL\nrotate 4 steps to the right: 2->0->1->NULL\n\nalgorithm thought\n可以看到其实就是将链表倒数第k个位置截断，然后拼接到前面。知道这个意思之后，就只需要考虑如果k大于size的问题了。如果k等于size，链表长度不变，这就很明显，我们可以令k=k%size。最后截断链表即可\ncode\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(head==NULL)\n            return head;\n        int size=1;\n        ListNode* tail=head;\n        while(tail->next){\n            size++;\n            tail=tail->next;\n        }\n        if(size==1)\n            return head;\n        k=k%size;\n        if(k==0)\n            return head;\n        k=size-k-1;\n        ListNode* pre=head;\n        ListNode* cur=head->next;\n        while(k--){\n            pre=pre->next;\n            cur=cur->next;\n        }\n        pre->next=NULL;\n        tail->next=head;\n        return cur;\n    }\n};\n\nalgorithm analysis\n开始算法得到链表的size，时间复杂度O(n)。然后找到倒数第k个节点，最后\n"},"62.-unique-paths.html":{"url":"62.-unique-paths.html","title":"62. Unique Paths","keywords":"","body":"62. Unique Paths\nproblem description\nA robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\nHow many possible unique paths are there?\nAbove is a 7 x 3 grid. How many possible unique paths are there?\nNote: m and n will be at most 100.\nExample 1:\nInput: m = 3, n = 2\nOutput: 3\nExplanation:\nFrom the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -> Right -> Down\n2. Right -> Down -> Right\n3. Down -> Right -> Right\n\nalgorithm thought\n典型的动态规划问题，达到一个点的所有方案，是其上一个点和左边点的方案之和。因为我到这个点可以有两种情况走过来，一种是从上面往下走，一种是从左边往右走。\ncode\nclass Solution {\npublic:\n    int uniquePaths(int m, int n) {\n        vector dp(m,1);\n        for(int i=1;i\nalgorithm analysis\n二维动态规划，遍历一个二维数组。最后时间复杂度O(n²)\n"},"63.-unique-paths-ii.html":{"url":"63.-unique-paths-ii.html","title":"63. Unique Paths II","keywords":"","body":"63. Unique Paths II\nproblem description\nA robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\nNow consider if some obstacles are added to the grids. How many unique paths would there be?\n\nAn obstacle and empty space is marked as 1 and 0 respectively in the grid.\nNote: m and n will be at most 100.\nExample 1:\nInput:\n[\n  [0,0,0],\n  [0,1,0],\n  [0,0,0]\n]\nOutput: 2\nExplanation:\nThere is one obstacle in the middle of the 3x3 grid above.\nThere are two ways to reach the bottom-right corner:\n1. Right -> Right -> Down -> Down\n2. Down -> Down -> Right -> Right\n\nalgorithm thought\n这题和上一题唯一的区别就是，这里在机器人的行动路上放了一些障碍。其实和上题做法没什么区别，当当前走到障碍的时候，直接把这个位置的结果赋值0。这样的好处是，既可以代表这里没有一种方案可以走到，也可以在他右边和下面得到总线路时，加上的是0。\ncode\nclass Solution {\npublic:\n    int uniquePathsWithObstacles(vector>& obstacleGrid) {\n        for(int i=0;i\nalgorithm analysis\n相比于上题加入了一些处理，但是时间复杂度还是O(n²)\n"},"64.-minimum-path-sum.html":{"url":"64.-minimum-path-sum.html","title":"64. Minimum Path Sum","keywords":"","body":"64. Minimum Path Sum\nproblem description\nGiven a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.\nNote: You can only move either down or right at any point in time.\nExample:\nInput:\n[\n  [1,3,1],\n  [1,5,1],\n  [4,2,1]\n]\nOutput: 7\nExplanation: Because the path 1→3→1→1→1 minimizes the sum.\n\nalgorithm thought\n和上一题没什么不同，动态规划换汤不换药。上一题是路线的数量，这里是找到最小值。\ncode\nclass Solution {\npublic:\n    int minPathSum(vector>& grid) {\n        for(int i=1;i\nalgorithm analysis\n时间复杂度和上两题一样,O(n²)\n"},"67.-add-binary.html":{"url":"67.-add-binary.html","title":"67. Add Binary","keywords":"","body":"67. Add Binary\nproblem description\nGiven two binary strings, return their sum (also a binary string).\nThe input strings are both non-empty and contains only characters 1 or 0.\nExample 1:\nInput: a = \"11\", b = \"1\"\nOutput: \"100\"\n\nExample 2:\nInput: a = \"1010\", b = \"1011\"\nOutput: \"10101\"\n\nalgorithm thought\n和十进制加法没什么不同，都是定义一个进位标志位，两数相加再加上标志位。得到的结果就是这一位，改变标志位。最后注意开头的0需要删除\ncode\nclass Solution {\npublic:\n    string addBinary(string a, string b) {\n        int al=a.size(),bl=b.size();\n        string res=string(max(al,bl)+1,'0');\n        if(al=0;i--){\n            count=int(a[i]-'0')+int(b[i]-'0')+c;\n            if(count==1||count==3){\n                res[i+1]='1';\n            }\n            if(count>=2){\n              c=1;  \n            }\n            else\n                c=0;\n            //cout\nalgorithm analysis\n线性处理两个字符串，最后时间复杂度O(n)\n"},"69.-sqrt-x.html":{"url":"69.-sqrt-x.html","title":"69. Sqrt(x)","keywords":"","body":"69. Sqrt(x)\nproblem description\nImplement int sqrt(int x).\nCompute and return the square root of x, where x is guaranteed to be a non-negative integer.\nSince the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.\nExample 1:\nInput: 4\nOutput: 2\n\nExample 2:\nInput: 8\nOutput: 2\nExplanation: The square root of 8 is 2.82842..., and since \n             the decimal part is truncated, 2 is returned.\n\nalgorithm thought\n第一次做这个题的时候，我也不是很清楚如何去计算一个数开根号。之后看了discuss了解到可以用二分查找。（感觉很多题都可以用二分查找，在一个大范围中找一个数，然后可以找到排除一半数的条件，条件很难找，需要仔细体会）。我记得我前几周做了一个contest也是用二分查找，当时做出来之后很惊讶。\n回归题目本身，这里我们在0-x中查找是否有满足mid*mid=x的情况\ncode\nclass Solution {\npublic:\n    int mySqrt(int x) {\n        if(x=x/mid)\n                right=mid;\n            else\n                left=mid+1;\n        }\n        return left==x/left?left:left-1;\n    }\n};\n\nalgorithm analysis\n二分查找，每次可以排除一半的数字。时间复杂度O(lgx)\n"},"70.-climbing-stairs.html":{"url":"70.-climbing-stairs.html","title":"70. Climbing Stairs","keywords":"","body":"70. Climbing Stairs\nproblem description\nYou are climbing a stair case. It takes n steps to reach to the top.\nEach time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\nNote: Given n will be a positive integer.\nExample 1:\nInput: 2\nOutput: 2\nExplanation: There are two ways to climb to the top.\n1. 1 step + 1 step\n2. 2 steps\n\nExample 2:\nInput: 3\nOutput: 3\nExplanation: There are three ways to climb to the top.\n1. 1 step + 1 step + 1 step\n2. 1 step + 2 steps\n3. 2 steps + 1 step\n\nalgorithm thought\n说是爬楼梯，其实就是斐波拉契数列。当前值等于前两个的值相加。可以用动态规划解决，用一个一维数组保存所有结果。也可以直接用两个变量保存之前的两个数的值，而不保存所有的结果。\ncode\n//用一个数组保存\nclass Solution {\npublic:\n    int climbStairs(int n) {\n        if(n==1)\n            return 1;\n        vector res(n+1);\n        res[1]=1;res[2]=2;\n        for(int i=3;i\nalgorithm analysis\n利用动态规划来解决斐波拉契数列问题，时间复杂度O(n)，第二种方法相对于第一种方法减少了线性数组的开销，空间复杂度从O(n)减到了O(1)。\n"},"72.-edit-distance.html":{"url":"72.-edit-distance.html","title":"72. Edit Distance","keywords":"","body":"72. Edit Distance\nproblem description\nGiven two words word1 and word2, find the minimum number of operations required to convert word1 to word2.\nYou have the following 3 operations permitted on a word:\n\nInsert a character\nDelete a character\nReplace a character\n\nExample 1:\nInput: word1 = \"horse\", word2 = \"ros\"\nOutput: 3\nExplanation: \nhorse -> rorse (replace 'h' with 'r')\nrorse -> rose (remove 'r')\nrose -> ros (remove 'e')\n\nExample 2:\nInput: word1 = \"intention\", word2 = \"execution\"\nOutput: 5\nExplanation: \nintention -> inention (remove 't')\ninention -> enention (replace 'i' with 'e')\nenention -> exention (replace 'n' with 'x')\nexention -> exection (replace 'n' with 'c')\nexection -> execution (insert 'u')\n\nalgorithm thought\n字符串处理操作。之前也总结了字符串题目的几种方法。动态规划，字符串匹配的一些算法，字典树等等。如果看到题目找不到思路，没有做过类似的，就使用这几种方法试试。\n这里两个字符串，使用动态规划处理。一个二维数组实现。首先说一下动态规划的状态转移方程如何理解。  要得到匹配horse，ros的最小次数。如果我们知道(horse,ro),(hors,ros),(hors,ro)三个字符串的匹配结果。\n我们只需要判断，如果两个字符串当前index上两个字符相等，则(horse,ros)=(hors,ro)                                         如果两个字符不相等，则(horse,ros)=min((horse,ro),min((hors,ros),(hors,ro)))+1;                                                   其中：(horse,ro)代表增加一个，(hors,ros)代表减少一个，(hors,ro)代表替换操作，我们使用二维数组解决此题。但是这题可以优化到只用一维数组，这里只给出一维数组的解答。\ncode\nclass Solution {\npublic:\n    int minDistance(string word1, string word2) {\n        vector dp(word2.size()+2);\n        for(int i=0;i\nalgorithm analysis\n设word1 size = m,word2 size = n，最后时间复杂度O(m*n)\n"},"73.-set-matrix-zeroes.html":{"url":"73.-set-matrix-zeroes.html","title":"73. Set Matrix Zeroes","keywords":"","body":"73. Set Matrix Zeroes\nproblem description\nGiven a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in-place.\nExample 1:\nInput: \n[\n  [1,1,1],\n  [1,0,1],\n  [1,1,1]\n]\nOutput: \n[\n  [1,0,1],\n  [0,0,0],\n  [1,0,1]\n]\n\nExample 2:\nInput: \n[\n  [0,1,2,0],\n  [3,4,5,2],\n  [1,3,1,5]\n]\nOutput: \n[\n  [0,0,0,0],\n  [0,4,5,0],\n  [0,3,1,0]\n]\n\nalgorithm thought\n这个题目不是很难，但是LeetCode限制了我们，希望我们使用O(1)的空间复杂度，然后DO IT IN-PLACE。于是我将第一行和第一列定义为标志位，从2行2列开始遍历，如果为0，将为0的那行和列的第一位设置为0标志位。之后再次遍历一遍第一行和第一列，将有标志位的那一行或者一列置为零\ncode\nclass Solution {\npublic:\n    void setZeroes(vector>& matrix) {\n        if(matrix.size()==0||matrix[0].size()==0)\n            return ;\n        bool row=false,col=false;\n        //判断第一列是否有0\n        for(int i=0;i\nalgorithm analysis\n这类题目，无论你算法多么巧妙，时间复杂度都会是O(n²)，但是这里空间复杂度被限制到了O(1)，有很大提升。\n"},"74.-search-a-2d-matrix.html":{"url":"74.-search-a-2d-matrix.html","title":"74. Search a 2D Matrix","keywords":"","body":"74. Search a 2D Matrix\nproblem description\nWrite an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\n\nIntegers in each row are sorted from left to right.\nThe first integer of each row is greater than the last integer of the previous row.\n\nExample 1:\nInput:\nmatrix = [\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\ntarget = 3\nOutput: true\n\nExample 2:\nInput:\nmatrix = [\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\ntarget = 13\nOutput: false\n\nalgorithm thought\n第一次做这个题目的时候，我首先在行上做二分查找，然后再找到的列上在来一次二分查找。这样时间复杂度是O(lgn)，也不是很慢。但是其实这个题目就是需要一种二维的二分查找。二分查找的核心是，通过一次比较，能排除一部分数字。\n这题思路是，从左上角或者右下角开始。可以思考一下，为什么从这里出发。然后一步步和target比较，并且逼近target\ncode\nclass Solution {\npublic:\n    bool searchMatrix(vector>& matrix, int target) {\n        if(matrix.size()==0||matrix[0].size()==0)\n            return false;\n        int i=matrix.size()-1;\n        int j=0;\n        while(i>=0&&jtarget)\n                i--;\n            else if(matrix[i][j]\nalgorithm analysis\n这里时间复杂度不一定比两个二分查找更快，二分查找时间复杂度是O(lgn+lgm),这里时间复杂度最坏情况应该是O(m+n)；\n"},"75.-sort-colors.html":{"url":"75.-sort-colors.html","title":"75. Sort Colors","keywords":"","body":"75. Sort Colors\nproblem description\nGiven an array with n objects colored red, white or blue, sort them in-place **so that objects of the same color are adjacent, with the colors in the order red, white and blue.\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\nNote: You are not suppose to use the library's sort function for this problem.\nExample:\nInput: [2,0,2,1,1,0]\nOutput: [0,0,1,1,2,2]\n\nFollow up:\n\nA rather straight forward solution is a two-pass algorithm using counting sort. First, iterate the array counting number of 0's, 1's, and 2's, then overwrite array with total number of 0's, then 1's and followed by 2's.\nCould you come up with a one-pass algorithm using only constant space?\n\nalgorithm thought\n典型的计数排序，计数排序时间复杂度是 O(n)，但是适用于数字比较少的情况。这里一共就3个数字，是比较适合的。\n最简单的一种方法是，两次遍历出结果，第一次遍历得到所有数的count，第二次遍历对数组赋值。\n能否一次遍历出结果呢？是可以的，使用两个标志位标志0，1的结尾。遍历数组，如果为0，swap交换到0的末尾，如果为1，swap交换到1的末尾\ncode\nclass Solution {\npublic:\n    void sortColors(vector& nums) {\n        int pos_1=0,pos_2=0;\n        for(int i=0;i\nalgorithm analysis\n一次遍历数组，时间复杂度O(n)\n"},"76.-minimum-window-substring.html":{"url":"76.-minimum-window-substring.html","title":"76. Minimum Window Substring","keywords":"","body":"76. Minimum Window Substring\nproblem description\nGiven a string S and a string T, find the minimum window in S which will contain all the characters in T in complexity O(n).\nExample:\nInput: S = \"ADOBECODEBANC\", T = \"ABC\"\nOutput: \"BANC\"\n\nNote:\n\nIf there is no such window in S that covers all characters in T, return the empty string \"\".\nIf there is such window, you are guaranteed that there will always be only one unique minimum window in S.\n\nalgorithm thought\n滑动窗口问题，做了很多题目之后，碰到最后需要求连续序列满足一种情况的时候，一般都能用滑动窗口，也就是一前一后指针代表窗口。\n这里首先定义一个vector，存储所有字符出现的次数。然后定义一前一后两个指针，后指针走过一个字符的时候，将vector中字符保存的次数减一，如果减一是有效的（能在T字符串中体现），那就将之前保存的size减一(size 初始化是T.size())。如果size为0，就可以将当前状态加入到结果。并且移动头指针，逼近尾指针。\ncode\nclass Solution {\npublic:\n    string minWindow(string s, string t) {\n        vector map(128,0);\n        for(auto c:t)\n            map[c]++;\n        int  begin=0,end=0,head=0,length=INT_MAX;\n        int count=t.size();\n        while(end0) count--;\n            while(count==0){\n                if(length>end-begin) length=end-(head=begin);\n                if(map[s[begin++]]++>=0) count++; \n            }\n        }\n        return length==INT_MAX?\"\":s.substr(head,length);\n    }\n};\n\nalgorithm analysis\n滑动窗口时间复杂度O(n),只需要一次遍历数组，最后产生结果。\n"},"77.-combinations.html":{"url":"77.-combinations.html","title":"77. Combinations","keywords":"","body":"77. Combinations\nproblem description\nGiven two integers n and k, return all possible combinations of k numbers out of 1 ... n.\nExample:\nInput: n = 4, k = 2\nOutput:\n[\n  [2,4],\n  [3,4],\n  [2,3],\n  [1,2],\n  [1,3],\n  [1,4],\n]\n\nalgorithm thought\n组合问题，典型的回溯法例题，使用回溯法解决\ncode\nclass Solution {\npublic:\n    vector> combine(int n, int k) {\n        vector> res;\n        vector tmp;\n        helper(res,tmp,n,k,1);\n        return res;\n    }\n    void helper(vector>& res,vector&tmp,int n,int k,int pos){\n        if(tmp.size()==k){\n            res.push_back(tmp);\n            return;\n        }\n        for(int i=pos;i\nalgorithm analysis\n组合问题需要放置k个值，每个值只能比后面的小，不能重复。时间复杂度不是太好分析，有很多种情况。但是回溯法时间复杂度一般都是O(2^n)\n"},"78.-subsets.html":{"url":"78.-subsets.html","title":"78. Subsets","keywords":"","body":"78. Subsets\nproblem description\nGiven a set of distinct integers, nums, return all possible subsets (the power set).\nNote: The solution set must not contain duplicate subsets.\nExample:\nInput: nums = [1,2,3]\nOutput:\n[\n  [3],\n  [1],\n  [2],\n  [1,2,3],\n  [1,3],\n  [2,3],\n  [1,2],\n  []\n]\n\nalgorithm thought\n类似上一题得到组合，只不过这里需要得到所有大小的组合。只需要改变回溯法中，将中间结果push到res的位置，在进入下一个函数的时候就push，而不是在递归基的时候，这样就能到达遍历的效果。\ncode\nclass Solution {\npublic:\n    vector> subsets(vector& nums) {\n        vector> res;\n        vector tmp;\n        res.push_back(tmp);\n        res.push_back(nums);\n        help(res,tmp,nums,0);\n        return res;\n    }\n    void help(vector>& res,vector&tmp,vector& nums,int pos){\n        if(tmp.size()==nums.size()-1)\n            return;\n        for(int i=pos;i\nalgorithm analysis\n时间复杂度是O(2^n),对于每一个数，都能选择是放入或者不放入最后数组\n"},"79.-word-search.html":{"url":"79.-word-search.html","title":"79. Word Search","keywords":"","body":"79. Word Search\nproblem description\nGiven a 2D board and a word, find if the word exists in the grid.\nThe word can be constructed from letters of sequentially adjacent cell, where \"adjacent\" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.\nExample:\nboard =\n[\n  ['A','B','C','E'],\n  ['S','F','C','S'],\n  ['A','D','E','E']\n]\n\nGiven word = \"ABCCED\", return true.\nGiven word = \"SEE\", return true.\nGiven word = \"ABCB\", return false.\n\nalgorithm thought\n思路很简单，都类似一种暴力搜索法，直接从每个节点都开始搜索，如果是当前节点是对的，就从这个节点的4个方向继续搜索。使用DFS搜索，每一层都有4个分量。唯一需要注意的就是不能搜索到重复的值，也就是我这里搜索完，我去我右边的节点，我右边的节点不能再搜索这个原来的节点了。\n有一种方法就是用标志，显示这里已经被搜索了，每次搜索完之后将当前字符设置为0。那么之后肯的和他匹配不了了。\n还有一种思路利用异或的特性。异或两次回到原值，那么我们经历一个节点之后只需要将这个节点异或一下，之后回来的时候再异或一下，就能恢复。这种好处是可以不用中间变量来保存中间值，但是坏处就是异或之后的值可能会对之后的程序产生影响，我当时就是用这种思路，结果到倒数第二个样例的时候，失败了。最后换了第一种方法\nupdate 2019/10/16 :\n下午上课忽然想通了中午异或的问题，我中午出问题的代码是board[i][j]^=1.大家应该都知道，char是1个字节的，有8位，但是数字1是0000001，所以异或之后只有最后一位会改变。只改变最后一位的话，很容易导致异或之后和其他字符相同。\n所以想通之后，直接将代码改为board[i][j]^=255就稳稳的过了。（255=11111111）\ncode\nclass Solution {\npublic:\n    bool exist(vector>& board, string word) {\n        for(int i=0;i>&board, string&word,int i,int j,int pos){\n        if(pos==word.size())\n            return true;\n\n        if(i=board.size()||j>=board[0].size()||board[i][j]=='\\0'||word[pos]!=board[i][j])\n            return false;\n\n        char t=board[i][j];\n        board[i][j]='\\0';\n        if(\n        help(board,word,i+1,j,pos+1)||\n        help(board,word,i,j+1,pos+1)||\n        help(board,word,i-1,j,pos+1)||\n        help(board,word,i,j-1,pos+1)\n        ){\n            board[i][j]=t;\n            return true;\n        }\n        board[i][j]=t;\n        return false;\n    }\n};\n\n\nclass Solution {\npublic:\n    bool exist(vector>& board, string word) {\n        for(int i=0;i>&board, string&word,int i,int j,int pos){\n        if(pos==word.size())\n            return true;\n\n        if(i=board.size()||j>=board[0].size()||word[pos]!=board[i][j])\n            return false;\n\n        board[i][j]^=255;\n        //board[i][j]='\\0';\n        if(\n        help(board,word,i+1,j,pos+1)||\n        help(board,word,i,j+1,pos+1)||\n        help(board,word,i-1,j,pos+1)||\n        help(board,word,i,j-1,pos+1)\n        ){\n            board[i][j]^=255;\n            return true;\n        }\n        board[i][j]^=255;\n        return false;\n    }\n};\n\nalgorithm analysis\nDFS，每层有4个分量，时间复杂度还是挺高的，但是不好分析。我这里就不分析了\n"},"80.-remove-duplicates-from-sorted-array-ii.html":{"url":"80.-remove-duplicates-from-sorted-array-ii.html","title":"80. Remove Duplicates from Sorted Array II","keywords":"","body":"80. Remove Duplicates from Sorted Array II\nproblem description\nGiven a sorted array nums, remove the duplicates in-place such that duplicates appeared at most twice and return the new length.\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\nExample 1:\nGiven nums = [1,1,1,2,2,3],\n\nYour function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.\n\nIt doesn't matter what you leave beyond the returned length.\n\nExample 2:\nGiven nums = [0,0,1,1,1,1,2,3,3],\n\nYour function should return length = 7, with the first seven elements of nums being modified to 0, 0, 1, 1, 2, 3 and 3 respectively.\n\nIt doesn't matter what values are set beyond the returned length.\n\nClarification:\nConfused why the returned value is an integer but your answer is an array?\nNote that the input array is passed in by reference, which means modification to the input array will be known to the caller as well.\nInternally you can think of this:\n// nums is passed in by reference. (i.e., without making a copy)\nint len = removeDuplicates(nums);\n\n// any modification to nums in your function would be known by the caller.\n// using the length returned by your function, it prints the first len elements.\nfor (int i = 0; i \nalgorithm thought\n这题目其实很简单，怎么样都能做得出。只是有些人做的简单有些人做的复杂。首先用for range语句，得到nums所有的数字。然后和nums[pos-2]相比，如果大于的话，那么当前肯定要加，但是如果等于的话，那肯定就是前面已经放置了两个相同的数，就可以不用再写了。\ncode\nclass Solution {\npublic:\n    int removeDuplicates(vector& nums) {\n        int pos=0;\n        for(auto num:nums){\n            if(posnums[pos-2]){\n                nums[pos++]=num;\n            }\n        }\n        return pos;\n    }\n};\n\nalgorithm analysis\n一次遍历出结果，时间复杂度是O(n)\n"},"81.-search-in-rotated-sorted-array-ii.html":{"url":"81.-search-in-rotated-sorted-array-ii.html","title":"81. Search in Rotated Sorted Array II","keywords":"","body":"81. Search in Rotated Sorted Array II\nproblem description\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\n(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]).\nYou are given a target value to search. If found in the array return true, otherwise return false.\nExample 1:\nInput: nums = [2,5,6,0,0,1,2], target = 0\nOutput: true\n\nExample 2:\nInput: nums = [2,5,6,0,0,1,2], target = 3\nOutput: false\n\nFollow up:\n\nThis is a follow up problem to Search in Rotated Sorted Array, where nums may contain duplicates.\nWould this affect the run-time complexity? How and why?\n\nalgorithm thought\n相比于Search in Rotated Sorted Array，这题在数组中加入了重复的数字，导致会出现一些问题。比如left和right是一样的数，甚至是，left和mid和right都是一样的数，这就不好区分两个区间。首先使用一个循环处理，如果left和right一样，将left++。这样就能去除所有边界一样的情况。除去之后，就和前面没有重复数组是一样的处理情况了\ncode\nclass Solution {\npublic:\n    bool search(vector& nums, int target) {\n        int left=0,right=nums.size()-1;\n        while(leftnums[mid]&&target=nums[left]&&target\nalgorithm analysis\n本来是二分查找的变体，时间复杂度应该是O(lgn)，但是这里有个对left和right的预处理，最坏情况下，时间复杂度会到O(n)。\n"},"82.-remove-duplicates-from-sorted-list-ii.html":{"url":"82.-remove-duplicates-from-sorted-list-ii.html","title":"82. Remove Duplicates from Sorted List II","keywords":"","body":"82. Remove Duplicates from Sorted List II\nproblem description\nGiven a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.\nExample 1:\nInput: 1->2->3->3->4->4->5\nOutput: 1->2->5\n\nExample 2:\nInput: 1->1->1->2->3\nOutput: 2->3\n\nalgorithm thought\n又是链表问题，并且直接返回一个链表。和之前做链表题一样直接用递归的形式解决\ncode\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if(head==NULL)\n            return NULL;\n        ListNode* now=head;\n        head=head->next;\n        if(head&&head->val==now->val){\n            while(head&&head->val==now->val)\n                head=head->next;\n            return deleteDuplicates(head);\n        }else{\n            now->next=deleteDuplicates(head);\n            return now;\n        }\n    }\n};\n\nalgorithm analysis\n一次遍历解决，时间复杂度O(n)\n"},"83.-remove-duplicates-from-sorted-list.html":{"url":"83.-remove-duplicates-from-sorted-list.html","title":"83. Remove Duplicates from Sorted List","keywords":"","body":"83. Remove Duplicates from Sorted List\nproblem description\nGiven a sorted linked list, delete all duplicates such that each element appear only once.\nExample 1:\nInput: 1->1->2\nOutput: 1->2\n\nExample 2:\nInput: 1->1->2->3->3\nOutput: 1->2->3\n\nalgorithm thought\n和上一题一样，甚至比上一题简单，使用递归解决\ncode\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if(head==NULL||head->next==NULL)\n            return head;\n        ListNode* next=head->next;\n        while(next&&next->val==head->val){\n            next=next->next;\n        }\n        head->next=deleteDuplicates(next);\n        return head;\n    }\n};\n\nalgorithm analysis\n一次遍历解决问题，时间复杂度O(n)\n"},"84.-largest-rectangle-in-histogram.html":{"url":"84.-largest-rectangle-in-histogram.html","title":"84. Largest Rectangle in Histogram","keywords":"","body":"84. Largest Rectangle in Histogram\nproblem description\nGiven n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.\nAbove is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].\nThe largest rectangle is shown in the shaded area, which has area = 10 unit.\nExample:\nInput: [2,1,5,6,2,3]\nOutput: 10\n\nalgorithm thought\n一次遍历解决问题，使用栈来辅助解决。对于数组，如果碰到顺序递增，就将当前数字压入栈中，如果当前height小于栈顶值，就将栈顶值弹出，并计算以弹出值为高度的矩形面积大小。这里关键是如何去计算矩形的宽，根据我们之前的算法，可以知道，当前栈顶的值肯定代表的是当前访问过的，剩下的最大值，因为比他更大的值在之前肯定被弹出计算了，那么，可以用当前index减去当前栈顶代表的index，就能表示矩形的宽了。\ncode\nclass Solution {\npublic:\n    int largestRectangleArea(vector& heights) {\n        stack st;\n        heights.push_back(0);\n        int res=0;\n        for(int i=0;i=heights[st.top()]){\n                st.push(i);\n                ++i;\n            }else{\n                int t=st.top();st.pop();\n                if(st.empty()){\n                    //cout\nalgorithm analysis\n使用栈，一次遍历得到结果，时间复杂度O(n)\n"},"85.-maximal-rectangle.html":{"url":"85.-maximal-rectangle.html","title":"85. Maximal Rectangle","keywords":"","body":"85. Maximal Rectangle\nproblem description\nGiven a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area.\nExample:\nInput:\n[\n  [\"1\",\"0\",\"1\",\"0\",\"0\"],\n  [\"1\",\"0\",\"1\",\"1\",\"1\"],\n  [\"1\",\"1\",\"1\",\"1\",\"1\"],\n  [\"1\",\"0\",\"0\",\"1\",\"0\"]\n]\nOutput: 6\n\nalgorithm thought\n求出矩阵中的最大矩形，可以利用动态规划的思路求解。首先定义一个left数组，保存节点高度可以最左到哪个节点，再定义一个right数组，保存节点高度最右可以到哪个节点。然后还有height数组，保存当前节点的高度。最后我们从以为矩阵开始，慢慢加高维度。起始时，left数组初始化为0，right数组初始化为size-1。然后定义一个curleft和curright，每当当前节点为0的时候，就要改变curleft和currgiht，当节点为1的时候，改变right和left数组。具体行为可以看代码理解。\ncode\nclass Solution {\npublic:\n    int maximalRectangle(vector>& matrix) {\n        if(matrix.size()==0||matrix[0].size()==0)\n            return 0;\n        vector fromleft(matrix[0].size(),0);\n        vector fromright(matrix[0].size(),matrix[0].size());\n        vector height(matrix[0].size(),0);\n\n        int res=0;\n        for(int i=0;i=0;--j){\n                if(matrix[i][j]=='0'){\n                    curright=j-1;\n                    fromright[j]=matrix[0].size()-1;\n                }else{\n                    fromright[j]=min(fromright[j],curright);\n                }\n            }\n            for(int j=0;j\nalgorithm analysis\n有一个大循环，循环中进行3次遍历。相当于对二维数组进行遍历，时间复杂度O(n²)\n"},"86.-partition-list.html":{"url":"86.-partition-list.html","title":"86. Partition List","keywords":"","body":"86. Partition List\nproblem descripiton\nGiven a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.\nYou should preserve the original relative order of the nodes in each of the two partitions.\nExample:\nInput: head = 1->4->3->2->5->2, x = 3\nOutput: 1->2->2->4->3->5\n\nalgorithm thought\n首先初始化两个头，然后将两个partition，分别加到两个头上，最后将两个partition合并\ncode\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        ListNode* tou1=new ListNode(-1);\n        tou1->next=head;\n        ListNode* tou2=new ListNode(-1);\n        ListNode* tou=tou2;\n        head=tou1;\n        while(tou1->next){\n            if(tou1->next->val>=x){\n                tou2->next=tou1->next;\n                tou2=tou2->next;\n                tou1->next=tou1->next->next;\n                tou2->next=NULL;\n            }\n            else\n                tou1=tou1->next;\n        }\n        tou1->next=tou->next;\n        return head->next;\n    }\n};\n\nalgorithm analysis\n算法一次遍历链表，时间复杂度O(n)\n"},"87.-scramble-string.html":{"url":"87.-scramble-string.html","title":"87. Scramble String","keywords":"","body":"87. Scramble String\nproblem description\nGiven a string s1, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.\nBelow is one possible representation of s1 = \"great\":\n    great\n   /    \\\n  gr    eat\n / \\    /  \\\ng   r  e   at\n           / \\\n          a   t\n\nTo scramble the string, we may choose any non-leaf node and swap its two children.\nFor example, if we choose the node \"gr\" and swap its two children, it produces a scrambled string \"rgeat\".\n    rgeat\n   /    \\\n  rg    eat\n / \\    /  \\\nr   g  e   at\n           / \\\n          a   t\n\nWe say that \"rgeat\" is a scrambled string of \"great\".\nSimilarly, if we continue to swap the children of nodes \"eat\" and \"at\", it produces a scrambled string \"rgtae\".\n    rgtae\n   /    \\\n  rg    tae\n / \\    /  \\\nr   g  ta  e\n       / \\\n      t   a\n\nWe say that \"rgtae\" is a scrambled string of \"great\".\nGiven two strings s1 and s2 of the same length, determine if s2 is a scrambled string of s1.\nExample 1:\nInput: s1 = \"great\", s2 = \"rgeat\"\nOutput: true\n\nExample 2:\nInput: s1 = \"abcde\", s2 = \"caebd\"\nOutput: false\n\nalgorithm thought\n判断是否Scramble，可以用递归的方式进行。如果一个字符串的左边和另一个字符串的左边是scramble，右边和右边是scramble。或者是，左右，右左是scramble字符串的话。那么这两个字符串就是scramble字符串。可以通过剪枝加快判断，首先判断两个字符串是否包含同样的字符，两个字符串中包含的字符不一样，就可以直接返回。虽然这里用了O(n)的时间，但是能剪去很多分支，是值得的。\ncode\nclass Solution {\npublic:\n    bool isScramble(string s1, string s2) {\n      //  cout\nalgorithm analysis\n每个函数正常情况下都能分出4个分支，每个分支中时间复杂度是线性的。最后时间复杂度不好定义。但是整个运行时间复杂度还是挺高的\n"},"88.-merge-sorted-array.html":{"url":"88.-merge-sorted-array.html","title":"88. Merge Sorted Array","keywords":"","body":"88. Merge Sorted Array\nproblem description\nGiven two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.\nNote:\n\nThe number of elements initialized in nums1 and nums2 are m and n respectively.\nYou may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2.\n\nExample:\nInput:\nnums1 = [1,2,3,0,0,0], m = 3\nnums2 = [2,5,6],       n = 3\n\nOutput: [1,2,2,3,5,6]\n\nalgorithm thought\n合并两个有序数组，这也是归并排序中必不可少的一步，如何做好这一步，速度快并且不溢出，还是有点难度的。我们归并排序的时候，一般是将前半部分数组复制，后半部分数组保存。但是这里是将后半部分数组赋值，前半部分保存下来。我们需要尽可能的利用前面保存的数据，能不改变就不改变。所以我们从后往前合并。如果nums2已经用完了，这时候，nums1前面的数据就能直接使用了，而不需要改变。\ncode\nclass Solution {\npublic:\n    void merge(vector& nums1, int m, vector& nums2, int n) {\n        int i=m-1,j=n-1,res=m+n-1;\n        while(j>=0){\n            nums1[res--]= i>=0&&nums1[i]>nums2[j]?nums1[i--]:nums2[j--];\n        }\n    }\n};\n\nalgorithm analysis\n对每个数操作一次，时间复杂度O(m+n)\n"},"90.-subsets-ii.html":{"url":"90.-subsets-ii.html","title":"90. Subsets II","keywords":"","body":"90. Subsets II\nproblem description\nGiven a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).\nNote: The solution set must not contain duplicate subsets.\nExample:\nInput: [1,2,2]\nOutput:\n[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n]\n\nalgorithm thought\n得到子集问题，和之前的第一题相比，多了重复数字，在计算子集的时候，需要处理重复情况。这里可以用和第一题类似的回溯法。也可以一次次将新数字push_back到之前得到的结果中，得到新的子集。\ncode\n//类似上一题，直接用回溯法解决问题\nclass Solution {\npublic:\n    vector> subsetsWithDup(vector& nums) {\n        vector> res;\n        vector tmp{};\n        res.push_back(tmp);\n        sort(nums.begin(),nums.end());\n        help(res,tmp,nums,0);\n        return res;\n    }\n    void help(vector>&res,vector&tmp,vector&nums,int pos){\n        if(pos==nums.size())\n            return;\n        for(int i=pos;i> subsetsWithDup(vector& nums) {\n        vector> res={{}};\n        sort(nums.begin(),nums.end());\n        int start=1;\n        res.push_back({nums[0]});\n        for(int i=1;itmp=res[start];\n                tmp.push_back(nums[i]);\n                res.push_back(tmp);\n            }\n        }\n        return res;\n    }\n};\n\nalgorithm analysis\n得到所有的子集问题，回溯法时间复杂度O(2^n)。每个数字可以出现一个也可以不出现，每个数字都会进行两次计算，两个分支。最后得到2^n\n"},"91.-decode-ways.html":{"url":"91.-decode-ways.html","title":"91. Decode Ways","keywords":"","body":"91. Decode Ways\nproblem desctiption\nA message containing letters from A-Z is being encoded to numbers using the following mapping:\n'A' -> 1\n'B' -> 2\n...\n'Z' -> 26\n\nGiven a non-empty string containing only digits, determine the total number of ways to decode it.\nExample 1:\nInput: \"12\"\nOutput: 2\nExplanation: It could be decoded as \"AB\" (1 2) or \"L\" (12).\n\nExample 2:\nInput: \"226\"\nOutput: 3\nExplanation: It could be decoded as \"BZ\" (2 26), \"VF\" (22 6), or \"BBF\" (2 2 6).\n\nalgorithm thought\n典型的动态规划问题，当前数字如果可以和前面数字组合成为一个合法的字符，当前decode way就可以加上前两次的decode way，如果当前的数字不等于0，就能加上前一个次的decode way。\ncode\nclass Solution {\npublic:\n    int numDecodings(string s) {\n        if(s[0]=='0')\n            return 0;\n        vectorres(s.size()+1);\n        res[0]=1;res[1]=1;\n        for(int i=1;i\nalgorithm analysis\n一次遍历处理数组，时间复杂度O(n),使用一维数组保存结果，空间复杂度O(n)\n"},"92.-reverse-linked-list-ii.html":{"url":"92.-reverse-linked-list-ii.html","title":"92. Reverse Linked List II","keywords":"","body":"92. Reverse Linked List II\nproblem description\nReverse a linked list from position m to n. Do it in one-pass.\nNote: 1 ≤ m ≤ n ≤ length of list.\nExample:\nInput: 1->2->3->4->5->NULL, m = 2, n = 4\nOutput: 1->4->3->2->5->NULL\n\nalgorithm thought\n首先找到待旋转的节点，然后就是一个旋转链表问题了\ncode\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int m, int n) {\n        ListNode* newhead=new ListNode(-1);\n        newhead->next=head;\n        ListNode* pre=newhead;\n        while(n--,--m)\n            pre=pre->next;\n        ListNode* tmp=pre->next;\n        while(n--){\n            ListNode* move=tmp->next;\n            tmp->next=move->next;\n            move->next=pre->next;\n            pre->next=move;\n        }\n        return newhead->next;\n    }\n};\n\nalgorithm analysis\n对链表进行一次遍历，转置，循环中操作都是O(1)，最后时间复杂度O(n)\n"},"93.-restore-ip-addresses.html":{"url":"93.-restore-ip-addresses.html","title":"93. Restore IP Addresses","keywords":"","body":"93. Restore IP Addresses\nproblem description\nGiven a string containing only digits, restore it by returning all possible valid IP address combinations.\nExample:\nInput: \"25525511135\"\nOutput: [\"255.255.11.135\", \"255.255.111.35\"]\n\nalgorithm thought\n其实是一道典型的回溯法问题。首先第一个位置放一个字符，然后进如下一个函数，运行完回溯之后，放两个字符。然后是3个。中间判断非法情况，如果长度大于1并且第一个字符是'0',显然不行。如果转化为数字之后，数值大于255，显然也是不行的。如果所有情况都满足，最后将结果push到res中。\n上面介绍的是回溯的情况，其实可以不需要回溯。因为肯定有4个地方需要我们放置数字，我们只需要3个循环，每个循环处理1-3个字符的情况。\ncode\nclass Solution {\npublic:\n    vector restoreIpAddresses(string s) {\n        vector res;\n        for(int a=1;a\nalgorithm analysis\n虽然有4个循环，但是时间复杂度不会很大，因为每个循环就进行3次，循环中的操作时间复杂度可以近似看做O(1)。\n"},"94.-binary-tree-inorder-traversal.html":{"url":"94.-binary-tree-inorder-traversal.html","title":"94. Binary Tree Inorder Traversal","keywords":"","body":"94. Binary Tree Inorder Traversal\nporblem description\nGiven a binary tree, return the inorder traversal of its nodes' values.\nExample:\nInput: [1,null,2,3]\n   1\n    \\\n     2\n    /\n   3\n\nOutput: [1,3,2]\n\nFollow up: Recursive solution is trivial, could you do it iteratively?\nalgorithm thought\n二叉树的中序遍历问题。这种问题用递归的方法是很简单的。但是还是要知道迭代的写法。毕竟如果节点很多的话，那么多递归函数，栈开销会很大。\n递归写法很简单，按顺序访问就行，对于迭代写法，我们首先要明白我们访问的顺序，先左，后中再右。我们使用一个栈保存中间节点，没碰到一个root节点，顺序将左子树一直push进栈，到叶子节点的时候，弹出顶上的节点，这时候就能访问了，然后对于这个节点的右子树，把它当做一个root，继续运行一遍\n然后去看了一下discuss，真的是发现每次看都会发现很意想不到的算法。比如中序遍历，这里就可以用morris traversal，只需要O(1)的空间，时间复杂度还是控制在O(n)。极大的减少了空间。这里主要是利用了叶子节点大量的空指针。前面问题使用栈来辅助解决，是因为访问到后续节点的时候，不能够再回到根节点，这里用叶子节点的指针，指向后继节点，方便回到前面。\n步骤是：\n\n如果当前节点的左孩子为空，则输出当前节点并将其右孩子作为当前节点。\n\n如果当前节点的左孩子不为空，在当前节点的左子树中找到当前节点在中序遍历下的前驱节点。\na) 如果前驱节点的右孩子为空，将它的右孩子设置为当前节点。当前节点更新为当前节点的左孩子。\nb) 如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空（恢复树的形状）。输出当前节点。当前节点更新为当前节点的右孩子。\n\n重复以上1、2直到当前节点为空。\n\n\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n//递归写法\nclass Solution {\npublic:\n    vector res; \n    void inorder(TreeNode* root)\n    {\n        if(root==NULL)\n            return;\n        inorder(root->left);\n        res.push_back(root->val);\n        inorder(root->right);\n    }\n    vector inorderTraversal(TreeNode* root) {\n        inorder(root);\n        return res;\n    }\n};\n\n\n//迭代写法\nclass Solution {\npublic:\n    vector inorderTraversal(TreeNode* root) {\n        vector res;\n        stack st;\n        while(root||!st.empty()){\n            while(root){\n                st.push(root);\n                root=root->left;\n            }\n            root=st.top();\n            st.pop();\n            res.push_back(root->val);\n            root=root->right;\n        }\n        return res;\n    }\n};\n\n//morris \nlass Solution {\npublic:\n    vector inorderTraversal(TreeNode* root) {\n        vector res;       \n        TreeNode* prev=NULL;\n        while(root){\n            if(root->left==NULL){\n                res.push_back(root->val);\n                root=root->right;\n            }else{\n                prev=root->left;\n                while(prev->right&&prev->right!=root){\n                    prev=prev->right;\n                }\n                if(prev->right==NULL){\n                    prev->right=root;\n                    root=root->left;\n                }else{\n                    root=prev->right;\n                    prev->right=NULL;\n                    res.push_back(root->val);\n                    root=root->right;\n                }\n            }\n        }\n        return res;\n    }\n};\n\nalgorigthm thought\n通过分析和LeetCode最后的结果来说，上面3中方法从上到下应该是越来越好的。迭代对于递归来说，减少了函数栈开销，最后空间用的少一点。Morris对于上面两中来说，只用了O(1)的空间复杂度，最后空间是用的最少的。\n"},"95.-unique-binary-search-trees-ii.html":{"url":"95.-unique-binary-search-trees-ii.html","title":"95. Unique Binary Search Trees II","keywords":"","body":"95. Unique Binary Search Trees II\nproblem description\nGiven an integer n, generate all structurally unique BST's (binary search trees) that store values 1 ... n.\nExample:\nInput: 3\nOutput:\n[\n  [1,null,3,2],\n  [3,2,null,1],\n  [3,1,null,null,2],\n  [2,1,3],\n  [1,null,2,null,3]\n]\nExplanation:\nThe above output corresponds to the 5 unique BST's shown below:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n\nalgorithm thought\n对于一个二叉树来说，最好使用递归解决问题。这里返回值是一系列的二叉树。对于一个range，我们可以首先定好一个中间节点当做二叉树的根节点，然后比这个值小的当做左子树，大的当右子树。这里我们就可以将代码简化很多了。但是单就这样做还是不行，会有大量的重复计算，比如1-10生成BST。首先利用5当中间节点的时候，1-4要当左子树，然后用6当中间节点的时候，还是会碰到1-4当左子树的情况。我们可以用动态规划的方法来避免重复计算。\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    map> ma;\n    vector generateTrees(int n) {\n        if(n==0)\n            return {};\n        return genera(1,n,n);\n    }\n    vector genera(int start,int end,int size){\n        if(ma.find(start*size+end)!=ma.end()){\n            return ma[start*size+end];\n        }\n        vector res;\n        if(start>end){\n            return {NULL};\n            //res.push_back(NULL);\n        }\n\n        for(int i=start;i left=genera(start,i-1,size);\n            vector right=genera(i+1,end,size);\n\n            for(TreeNode* le:left){\n                for(TreeNode* ri:right){\n                    TreeNode* root=new TreeNode(i);\n                    root->left=le;\n                    root->right=ri;\n                    res.push_back(root);\n                }\n            }\n        }\n        ma[start*size+end]=res;\n        return res;\n    }\n};\n\nalgorithm analysis\n这里是一种递归方法，时间复杂度还不会分析。使用动态规划解决之后时间还是不会太慢的\n"},"96.-unique-binary-search-trees.html":{"url":"96.-unique-binary-search-trees.html","title":"96. Unique Binary Search Trees","keywords":"","body":"96. Unique Binary Search Trees\nproblem description\nGiven n, how many structurally unique BST's (binary search trees) that store values 1 ... n?\nExample:\nInput: 3\nOutput: 5\nExplanation:\nGiven n = 3, there are a total of 5 unique BST's:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n\nalgorithm thought\n和上题一个类型，简化了一点。上一题需要输出所有的结果，这里不需要结果，只需要数字。对于上一题，我们保存一棵树开始和结束的位置。来映射他的结果，但是这里不需要，因为只要树的size固定好，能生成的所有的tree的数量也就出来了。这里使用一个数组保存结果\ncode\nclass Solution {\npublic:\n    int numTrees(int n) {\n        vector dp(n+1,0);\n        dp[0]=1;\n        dp[1]=1;\n        int left,right;\n        for(int i=2;i\nalgorithm analysis\n算法中有两个循环，执行n²次，每次执行时间复杂度O(n)，最后时间复杂度O(n²)\n"},"97.-interleaving-string.html":{"url":"97.-interleaving-string.html","title":"97. Interleaving String","keywords":"","body":"97. Interleaving String\nproblem description\nGiven s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.\nExample 1:\nInput: s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbcbcac\"\nOutput: true\n\nExample 2:\nInput: s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbbaccc\"\nOutput: false\n\nalgorithm thought\n字符串问题，这题其实和最长公共子串问题很像，使用二维数组保存结果，动态规划解决问题。\n状态转移方程得出：对于aabcc和dbbca匹配aadbbcbcac问题。我们只需要找到  c==c?以及aabc和dbbca是否匹配aadbbcbca，或者是a==c?以及aabcc和dbbc是否匹配aadbbcbca。上面两中情况任何一种成立，这里的匹配都可以算成功。所以这里动态规划保存之前的结果，这次匹配使用前面的结果解决问题。\ncode\nclass Solution {\npublic:\n    bool isInterleave(string s1, string s2, string s3) {\n        if(s1.size()+s2.size()!=s3.size())\n            return false;\n        vector> pos(s1.size()+1,vector (s2.size()+1,false));\n        pos[0][0]=1;\n        for(int i=1;i\nalgorithm analysis\n设是s1长m，s2长n，会遍历一个m*n的二维数组,最后时间复杂度O(m*n)\n"},"98.-validate-binary-search-tree.html":{"url":"98.-validate-binary-search-tree.html","title":"98. Validate Binary Search Tree","keywords":"","body":"98. Validate Binary Search Tree\nproblem description\nGiven a binary tree, determine if it is a valid binary search tree (BST).\nAssume a BST is defined as follows:\n\nThe left subtree of a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n\nExample 1:\n    2\n   / \\\n  1   3\n\nInput: [2,1,3]\nOutput: true\n\nExample 2:\n    5\n   / \\\n  1   4\n     / \\\n    3   6\n\nInput: [5,1,4,null,null,3,6]\nOutput: false\nExplanation: The root node's value is 5 but its right child's value is 4.\n\nalgorithm thought\n得到合法的BST，BST有个性质就是中序遍历结果是一个有序数组。所以我们直接中序遍历，每次保存前一个值，如果前一个值大于等于当前遍历的值，那么就不是一个合法的BST，否则就是合法的BST\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        stack todo;\n        long pre=-2147483649;\n        while(root||!todo.empty()){\n            while(root){\n                todo.push(root);\n                root=root->left;\n            }\n            root=todo.top();todo.pop();\n            if(root->valval;\n            root=root->right;\n        }\n        return true;\n    }\n};\n\nalgorithm analysis\n时间复杂度O(n),遍历的时间，空间复杂度O(n)，使用一个栈保存数据。其实可以用之前的Morris tarversal但是LeetCode可能是有bug，代码是正确的但是最后得不到合理的结果。\n"},"99.-recover-binary-search-tree.html":{"url":"99.-recover-binary-search-tree.html","title":"99. Recover Binary Search Tree","keywords":"","body":"99. Recover Binary Search Tree\nproblem description\nTwo elements of a binary search tree (BST) are swapped by mistake.\nRecover the tree without changing its structure.\nExample 1:\nInput: [1,3,null,null,2]\n\n   1\n  /\n 3\n  \\\n   2\n\nOutput: [3,1,null,null,2]\n\n   3\n  /\n 1\n  \\\n   2\n\nExample 2:\nInput: [3,1,4,null,null,2]\n\n  3\n / \\\n1   4\n   /\n  2\n\nOutput: [2,1,4,null,null,3]\n\n  2\n / \\\n1   4\n   /\n  3\n\nFollow up:\n\nA solution using O(n) space is pretty straight forward.\nCould you devise a constant space solution?\n\nalgorithm thought\n已知BST中有两个数字是错的，那么我们就找到两个错的位置就行。还是中序遍历，找到不是顺序增长的两个位置。记录下来，最后交换两个的值\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* first=NULL;\n    TreeNode* second=NULL;\n    int count=0;\n    TreeNode* pre=new TreeNode(INT_MIN);\n    void recoverTree(TreeNode* root) {\n        bool bo=false;\n        travers(root);\n        int tmp=first->val;\n        first->val=second->val;\n        second->val=tmp;\n    }\n    void travers(TreeNode* root){\n        if(count==2||root==NULL)\n            return;\n        travers(root->left);\n\n        if(first==NULL&&pre->val>root->val){\n            first=pre;\n        }\n\n        if(first!=NULL&&pre->val>root->val){\n            second=root;\n            count++;\n        }\n        pre=root;\n        travers(root->right);\n    }\n};\n\n//利用bst的中序遍历性质来解决问题\n\nalgorithm analysis\n一次遍历，时间复杂度O(n)\n"},"100.-same-tree.html":{"url":"100.-same-tree.html","title":"100. Same Tree","keywords":"","body":"100. Same Tree\nproblem description\nGiven two binary trees, write a function to check if they are the same or not.\nTwo binary trees are considered the same if they are structurally identical and the nodes have the same value.\nExample 1:\nInput:     1         1\n          / \\       / \\\n         2   3     2   3\n\n        [1,2,3],   [1,2,3]\n\nOutput: true\n\nExample 2:\nInput:     1         1\n          /           \\\n         2             2\n\n        [1,2],     [1,null,2]\n\nOutput: false\n\nExample 3:\nInput:     1         1\n          / \\       / \\\n         2   1     1   2\n\n        [1,2,1],   [1,1,2]\n\nOutput: false\n\nalgorithm thought\n树问题，递归解决，首先判断当前节点问题，然后对左右子树分别进行同样的计算。\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSameTree(TreeNode* p, TreeNode* q) {\n        if(p==NULL&&q==NULL)\n            return true;\n        if(p&&q&&(p->val==q->val)){\n            return isSameTree(p->left,q->left)&&isSameTree(p->right,q->right);\n        }\n        return false;\n    }\n};\n\nalgorithm analysis\n相当于对树进行了一次遍历，时间复杂度O(n)\n"},"101.-symmetric-tree.html":{"url":"101.-symmetric-tree.html","title":"101. Symmetric Tree","keywords":"","body":"101. Symmetric Tree\nproblem description\nGiven a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).\nFor example, this binary tree [1,2,2,3,4,4,3] is symmetric:\n    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3\n\nBut the following [1,2,2,null,3,null,3] is not:\n    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n\nNote:Bonus points if you could solve it both recursively and iteratively.\nalgorithm thought\n本质是树的层次遍历，判断每一层是否是对称的。层次遍历需要用到队列来辅助解决。得到每一层所有的值。最后遍历判断是否对称。但是对于这题，还有个技巧。对于左右子树，采取不同的策略。对于左子树，每次访问完之后，先push左及节点再push右节点。右子树，先push右再左。这样，每次从队列中拿两个节点出来，这两个节点就刚好都是对称节点。我们判断它们是否一样就行，然后继续运行。\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSymmetric(TreeNode* root) {\n        TreeNode *left,*right;\n        if(root==NULL)\n            return true;\n        queue qu;\n        qu.push(root->left);\n        qu.push(root->right);\n        while(!qu.empty()){\n            left=qu.front();\n            qu.pop();\n            right=qu.front();\n            qu.pop();\n            if(left==NULL&&right==NULL)\n                continue;\n            if(left==NULL||right==NULL)\n                return false;\n            if(left->val!=right->val)\n                return false;\n            qu.push(left->left);\n            qu.push(right->right);\n            qu.push(left->right);\n            qu.push(right->left);\n        }\n        return true;\n    }\n};\n\nalgorithm analysis\n时间复杂度就是O(n),遍历一遍树。\n"},"102.-binary-tree-level-order-traversal.html":{"url":"102.-binary-tree-level-order-traversal.html","title":"102. Binary Tree Level Order Traversal","keywords":"","body":"102. Binary Tree Level Order Traversal\nproblem description\nGiven a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).\nFor example:Given binary tree [3,9,20,null,null,15,7],  \n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\nreturn its level order traversal as:  \n[\n  [3],\n  [9,20],\n  [15,7]\n]\n\nalgorithm thought\n二叉树层次遍历，使用queue辅助解决，必须掌握的题目\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector> levelOrder(TreeNode* root) {\n        vector> res;\n        TreeNode* pos=new TreeNode(-100);\n        vector tmp;\n        queue q;\n        q.push(root);\n        q.push(pos);\n        while(!q.empty()){\n            TreeNode* tq=q.front();\n            q.pop();\n            if(tq==NULL){\n                continue;   \n            }\n            else if(tq==pos){\n                if(q.empty())\n                    break;\n                res.push_back(tmp);\n                tmp.clear();\n                q.push(pos);\n            }\n            else{\n                q.push(tq->left);\n                q.push(tq->right);\n                tmp.push_back(tq->val);\n            }\n        }\n        return res;\n    }\n};\n\nalgorithm analysis\n遍历一棵树，时间复杂度O(n)\n"},"103.-binary-tree-zigzag-level-order-traversal.html":{"url":"103.-binary-tree-zigzag-level-order-traversal.html","title":"103. Binary Tree Zigzag Level Order Traversal","keywords":"","body":"103. Binary Tree Zigzag Level Order Traversal\nproblem description\nGiven a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).\nFor example:Given binary tree [3,9,20,null,null,15,7],  \n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\nreturn its zigzag level order traversal as:  \n[\n  [3],\n  [20,9],\n  [15,7]\n]\n\nalgorithm thought\nzigzag层次遍历，分析之后得知，可以用两个栈来辅助遍历。参差遍历本来是用一个队列就行。但是这个用两个栈，然后定义一个bool变量指定现在是左到右还是右到左，分别用一个栈辅助遍历。最后处理方式和层次遍历一样\n使用两个栈的方法肯定还有优化的地方，去看了discuss之后，发现可以直接使用一个队列来做。最后遍历的结果需保存在一个vector中，我们默认只能push_back但是其实可以先定义好vector，最后看情况从左右分别将结果放置进去。\ncode\n//use two stack \n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector> zigzagLevelOrder(TreeNode* root) {\n        stack q1,q2;\n        vector> res;\n        if(root==NULL)\n            return res;\n        bool bo=true;\n        q1.push(root);\n        while(true){\n            if(bo){\n                vector ve;\n                while(!q1.empty()){\n                    TreeNode* tmp=q1.top();\n                    q1.pop();\n                    if(tmp==NULL)\n                        break;\n                    ve.push_back(tmp->val);\n                    if(tmp->left)\n                        q2.push(tmp->left);\n                    if(tmp->right)\n                        q2.push(tmp->right);\n                }\n                res.push_back(ve);\n                bo=false;\n                if(q2.empty())\n                    break;\n            }\n            else{\n                vector ve;\n                while(!q2.empty()){\n                    TreeNode* tmp=q2.top();\n                    q2.pop();\n                    if(tmp==NULL)\n                        break;\n                    ve.push_back(tmp->val);\n                    if(tmp->right)\n                        q1.push(tmp->right);\n                    if(tmp->left)\n                        q1.push(tmp->left);\n                }\n                res.push_back(ve);\n                bo=true;\n                if(q1.empty())\n                    break;\n            } \n        }\n        return res;\n    }\n};\n\n\n//use one queue\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector> zigzagLevelOrder(TreeNode* root) {\n        queue q;\n        vector> res;\n        if(root==NULL)\n            return res;\n        bool leftToRight=true;\n        TreeNode* tmp = new TreeNode(-1);\n        q.push(root);q.push(tmp);\n        vector ve(1);\n        int i=0;\n        while(true){\n            TreeNode* t=q.front();\n            q.pop();\n            if(t==tmp){\n                res.push_back(ve);\n                ve.clear();\n                ve.resize(q.size());\n                if(q.empty())\n                    break;\n                q.push(tmp);\n                leftToRight=!leftToRight;\n                i=0;\n                continue;\n            }\n            if(t->left)\n                q.push(t->left);\n            if(t->right)\n                q.push(t->right);\n            if(leftToRight){\n                ve[i]=t->val;\n            }else{\n                ve[ve.size()-i-1]=t->val;\n            }\n            i++;\n        }\n        return res;\n    }\n};\n\nalgorithm analysis\n遍历问题时间复杂度还是一样的，都是O(n)\n"},"104.-maximum-depth-of-binary-tree.html":{"url":"104.-maximum-depth-of-binary-tree.html","title":"104. Maximum Depth of Binary Tree","keywords":"","body":"104. Maximum Depth of Binary Tree\nproblem description\nGiven a binary tree, find its maximum depth.\nThe maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.\nNote: A leaf is a node with no children.\nExample:\nGiven binary tree [3,9,20,null,null,15,7],\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\nreturn its depth = 3.\nalgorithm thought\n典型的递归解决二叉树问题\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        return max(maxDepth(root->left),maxDepth(root->right))+1;\n    }\n};\n\nalgorithm analysis\n类似遍历问题，时间复杂度O(n)\n"},"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html":{"url":"105.-construct-binary-tree-from-preorder-and-inorder-traversal.html","title":"105. Construct Binary Tree from Preorder and Inorder Traversal","keywords":"","body":"105. Construct Binary Tree from Preorder and Inorder Traversal\nproblem description\nGiven preorder and inorder traversal of a tree, construct the binary tree.\nNote:You may assume that duplicates do not exist in the tree.\nFor example, given\npreorder = [3,9,20,15,7]\ninorder = [9,3,15,20,7]\n\nReturn the following binary tree:\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\nalgorithm thought\n前序遍历和中序遍历转二叉树，首先利用前序遍历第一个值就是当前根节点的性质。找到根节点，只有去中序遍历中找到根节点对应的位置，位置左边就是左子树右边是右子树。然后对于左右子树，得到他们的大小，去前序遍历中找到他们对应的位置。然后对于左右子树，递归解决。\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* buildTree(vector& preorder, vector& inorder) {\n        return build(preorder,inorder,0,preorder.size(),0,inorder.size());\n    }\n    TreeNode* build(vector& preorder, vector& inorder,int prelow,int prehigh,int inlow,int inhigh){\n        if(prelow==prehigh)\n            return NULL; \n        TreeNode* root=new TreeNode(preorder[prelow]);\n        int inroot;\n        for(int i=inlow;ileft=build(preorder,inorder,prelow+1,prelow+1+leftsize,inlow,inroot);\n        root->right=build(preorder,inorder,prelow+1+leftsize,prehigh,inroot+1,inhigh);\n        return root;\n    }\n};\n\nalgorithm analysis\n每次在中序遍历中找到根节点的位置，一般情况下需要O(n)时间。那总时间可以表达为T(n)=2T(n/2)+O(n)，这个表达式用主定理分析可知为T(n)=O(nlgn)\n"},"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html":{"url":"106.-construct-binary-tree-from-inorder-and-postorder-traversal.html","title":"106. Construct Binary Tree from Inorder and Postorder Traversal","keywords":"","body":"106. Construct Binary Tree from Inorder and Postorder Traversal\n后序遍历和中序遍历得到二叉树本质和上一题没区别。只是后序遍历的根节点出现在最后面。将前一题的算法修改下即可\n"},"107.-binary-tree-level-order-traversal-ii.html":{"url":"107.-binary-tree-level-order-traversal-ii.html","title":"107. Binary Tree Level Order Traversal II","keywords":"","body":"107. Binary Tree Level Order Traversal II\n和之前层次遍历一样，最后得到结果的时候reverse一下\n"},"108.-convert-sorted-array-to-binary-search-tree.html":{"url":"108.-convert-sorted-array-to-binary-search-tree.html","title":"108. Convert Sorted Array to Binary Search Tree","keywords":"","body":"108. Convert Sorted Array to Binary Search Tree\nproblem description\nGiven an array where elements are sorted in ascending order, convert it to a height balanced BST. For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.\nExample:\nGiven the sorted array: [-10,-3,0,5,9],\nOne possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:\n      0\n     / \\\n   -3   9\n   /   /\n -10  5\n\nalgorithm thought\n这里需要生成一个平衡BST。平衡BST有很多种表示方法，但是我们只需要生成一种就行，那当然是生成最简单的bst。每次到一个节点时，找到中点，将一个有序数组对分。直到叶节点。这样就能保证最后得到的是平衡二叉树\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* sortedArrayToBST(vector& nums) {\n        return build(nums,0,nums.size());\n    }\n    TreeNode* build(vector& nums,int low,int high){\n        if(high==low)\n            return NULL;\n        int mid=low+((high-low)>>1);\n        //coutleft=build(nums,low,mid);\n        root->right=build(nums,mid+1,high);\n        return root;\n    }\n};\n\nalgorithm analysis\n时间复杂度应该是O(n)遍历到所有节点，最后生成一个树\n"},"110.-balanced-binary-tree.html":{"url":"110.-balanced-binary-tree.html","title":"110. Balanced Binary Tree","keywords":"","body":"110. Balanced Binary Tree\nproblem description\nGiven a binary tree, determine if it is height-balanced.\nFor this problem, a height-balanced binary tree is defined as:\na binary tree in which the left and right subtrees of every node differ in height by no more than 1.\nExample 1:\nGiven the following tree [3,9,20,null,null,15,7]:\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\nReturn true.\nExample 2:\nGiven the following tree [1,2,2,3,3,null,null,4,4]:\n       1\n      / \\\n     2   2\n    / \\\n   3   3\n  / \\\n 4   4\n\nReturn false.\nalgorithm thought\n二叉树问题，判断是否不是平衡二叉树。平衡二叉树定义是左右子树高度差要小于等于1.于是这题变成了类似求二叉树高度的问题。之前也做过二叉树高度问题，直接递归解决。这里只需要在求出高度之后加入一个判断。如果不是平衡的如何处理。求高度的函数，返回值必须是int而不是bool，这就是我们面临的问题。一种解决方案是把求高度的照搬过来，加一个全局变量，如果不平衡，全局变量为false。我们这里用另一种方法，如果不平衡，返回INT_MAX.由于题目中不存在这么大的二叉树，所以INT_MAX和任何子树组合都是不平衡的，最后INT_MAX会传递到调用函数，最后判断是否为INT_MAX来觉得返回true还是false\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isBalanced(TreeNode* root) {\n        if(isBalan(root)==INT_MAX)\n            return false;\n        return true;\n    }\n    int isBalan(TreeNode* root){\n        if(root==NULL)\n            return 0;\n        int lefth=isBalan(root->left);\n        int righth=isBalan(root->right);        \n        if(lefth==INT_MAX||righth==INT_MAX||abs(lefth-righth)>1)\n            return INT_MAX;        \n        return max(lefth,righth)+1;\n    }\n};\n\nalgorithm analysis\n时间复杂度O(n),就是遍历问题，遍历所有节点之后会得到结果\n"},"111.-minimum-depth-of-binary-tree.html":{"url":"111.-minimum-depth-of-binary-tree.html","title":"111. Minimum Depth of Binary Tree","keywords":"","body":"111. Minimum Depth of Binary Tree\nproblem description\nGiven a binary tree, find its minimum depth.\nThe minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.\nNote: A leaf is a node with no children.\nExample:\nGiven binary tree [3,9,20,null,null,15,7],\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\nreturn its minimum depth = 2.\nalgorithm thought\n得到最浅的叶子节点的深度，直接用广度优先搜索即可，广度优先搜索有找的极值的性质\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        queue qu;\n        qu.push(root);\n        TreeNode* pos=new TreeNode(-1);\n        qu.push(pos);\n        int res=1;\n        while(!qu.empty()){\n            TreeNode* fr=qu.front();\n            qu.pop();\n            if(fr==NULL)\n                continue;\n            if(fr==pos){\n                qu.push(pos);\n                res++;\n                continue;\n            }\n            if(isleaf(fr))\n                return res;\n            qu.push(fr->left);\n            qu.push(fr->right);\n        }\n        return res;\n    }\n    bool isleaf(TreeNode* root){\n        return (root->right==NULL)&&(root->left==NULL);\n    }\n};\n\nalgorithm analysis\n如果用深度优先搜索做这个题目，最后时间复杂度会是O(n)，因为会遍历所有节点，最后得到最浅的叶子节点。但是用广度优先搜索，只要找到第一个叶子节点就会返回，所以时间复杂度是降低很多的，不过应该也是O(n)\n"},"112.-path-sum.html":{"url":"112.-path-sum.html","title":"112. Path Sum","keywords":"","body":"112. Path Sum\nproblem description\nGiven a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.\nNote: A leaf is a node with no children.\nExample:\nGiven the below binary tree and sum = 22,\n      5\n     / \\\n    4   8\n   /   / \\\n  11  13  4\n /  \\      \\\n7    2      1\n\nreturn true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.\nalgorithm thought\n直接递归解决，每次进入子节点的时候，将sum值减去当前节点的值，最后判断如果是叶子节点并且当前值为0，就返回true，否则返回false\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasPathSum(TreeNode* root, int sum) {\n        if(root==NULL)\n            return false;\n        sum-=root->val;\n        if(root->left==NULL&&root->right==NULL){\n            if(sum)\n                return false;\n            return true;\n        }\n        return hasPathSum(root->left,sum)||hasPathSum(root->right,sum);\n    }\n};\n\nalgorithm analysis\n遍历问题，时间复杂度O(n)\n"},"113.-path-sum-ii.html":{"url":"113.-path-sum-ii.html","title":"113. Path Sum II","keywords":"","body":"113. Path Sum II\nproblem descripition\nGiven a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.\nNote: A leaf is a node with no children.\nExample:\nGiven the below binary tree and sum = 22,\n      5\n     / \\\n    4   8\n   /   / \\\n  11  13  4\n /  \\    / \\\n7    2  5   1\n\nReturn:\n[\n   [5,4,11,2],\n   [5,8,4,5]\n]\n\nalgorithm thought\n和之前的path sum一个意思，只是这里需要得到路径上的所有值。这就只能使用回溯法解决问题了。\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector> pathSum(TreeNode* root, int sum) {\n        vector> res;\n        vector tmp;\n        helper(res,tmp,sum,root);\n        return res;\n    }\n    void helper(vector>& res,vector&tmp,int sum,TreeNode* root){\n        if(root==NULL){\n            return;\n        }\n        if(root->left==NULL&&root->right==NULL){\n            if(sum==root->val){\n                tmp.push_back(root->val);\n                res.push_back(tmp);\n                tmp.pop_back();\n            }\n            return;\n        }\n        tmp.push_back(root->val);\n        helper(res,tmp,sum-root->val,root->left);\n        helper(res,tmp,sum-root->val,root->right);\n        tmp.pop_back();\n        return;\n    }\n};\n\nalgorithm analysis\n时间复杂度O(n),对于每个节点都只访问一次。\n"},"114.-flatten-binary-tree-to-linked-list.html":{"url":"114.-flatten-binary-tree-to-linked-list.html","title":"114. Flatten Binary Tree to Linked List","keywords":"","body":"114. Flatten Binary Tree to Linked List\nproblem description\nGiven a binary tree, flatten it to a linked list in-place.\nFor example, given the following tree:\n    1\n   / \\\n  2   5\n / \\   \\\n3   4   6\n\nThe flattened tree should look like:\n1\n \\\n  2\n   \\\n    3\n     \\\n      4\n       \\\n        5\n         \\\n          6\n\nalgorithm thought\n观察知道，最后所有节点全部在右边展平，我们可以每次将左子树插入到右子树，原来的右子树接在左子树最后面，重复这个操作，直到所有的右子树都展平即可\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {\n        while(root){\n            if(root->left){\n                TreeNode* ma=findmax(root->left);\n                ma->right=root->right;\n                root->right=root->left;\n                root->left=NULL;\n            }\n            root=root->right;\n        }\n    }\n    TreeNode* findmax(TreeNode* root){\n        if(root)\n        while(root->right){\n            root=root->right;\n        }\n        return root;\n    }\n};\n\nalgorithm analysis\n时间复杂度O(n),对于所有节点，最多访问节点两次，访问总次数是2n，所以最后时间复杂度O(n)\n"},"115.-distinct-subsequences.html":{"url":"115.-distinct-subsequences.html","title":"115. Distinct Subsequences.md","keywords":"","body":"115. Distinct Subsequences.md\nproblem description\nGiven a string S and a string T, count the number of distinct subsequences of S which equals T.\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, \"ACE\" is a subsequence of \"ABCDE\" while \"AEC\" is not).\nExample 1:\nInput: S = \"rabbbit\", T = \"rabbit\" Output: 3 Explanation:\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^\n\nExample 2:\nInput: S = \"babgbag\", T = \"bag\" Output: 5 Explanation:\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^\n\nalgorithm thought\n做多了题目之后会有感觉，这题用动态规划解决没问题。首先就用动态规划问题想。如果两个字符串已经匹配完毕，S串加入一个新字符，如果这个字符和T串最后一个字符不匹配。没有事情发生，总匹配数依然是没加入之前的结果。如果匹配，就是之前的S串和去掉最后一个字符的T串匹配的结果加上之前匹配结果。\nS = rabb \nT = rabb\n\nnow the result is 1\n\nat this time , add a 'b' after S\n\n'b' is equal to T.back(),so that res of (rabbb,rabb) is (rabb,rab) + (rabb,rabb).\n\nres is three\n\ncode\n//this is a origin version\nclass Solution {\npublic:\n    int numDistinct(string s, string t) {\n        vector> dp(s.size()+1,vector(t.size()+1));\n        for(int i=0;i dp (t.size()+1,0);\n        dp[0]=1;\n        for(int i=1;i0;--j)\n                if(s[i-1]==t[j-1])\n                    dp[j]+=dp[j-1];\n        return dp[t.size()];\n    }\n};\n\nalgorithm analysis\n原始版本是二维数组版本，遍历二维数组即可，时间复杂度O(n²)。优化后的版本使用一维数组，空间复杂度降到了O(n),不仅如此，其时间也会降低\n"},"118.-pascals-triangle.html":{"url":"118.-pascals-triangle.html","title":"118. Pascal's Triangle","keywords":"","body":"118. Pascal's Triangle\nproblem description\nGiven a non-negative integer numRows, generate the first numRows of Pascal's triangle.\nIn Pascal's triangle, each number is the sum of the two numbers directly above it.\nExample:\nInput: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n\nalgorithm thought\n其实和之前动态规划问题得到数组中的值有的像，此位置的值等于上两个位置的值相加。可以用二维数组解决，但是这里是可以优化到只用一维数组。每次重复使用即可。\ncode\nclass Solution {\npublic:\n    vector> generate(int numRows) {\n        vector> res;\n        if(numRows==0)\n            return res;\n        vector tmp(1,1);\n        res.push_back(tmp);\n        while(--numRows){\n            tmp.push_back(1);\n            for(int i=tmp.size()-2;i>=1;--i){\n                tmp[i]+=tmp[i-1];\n            }\n            res.push_back(tmp);\n        }\n        return res;\n    }\n};\n\nalgorithm analysis\n帕斯卡三角形，三角形面积是O(n²)的，每个点都要计算，最后时间复杂度O(n²)\n"},"120.-triangle.html":{"url":"120.-triangle.html","title":"120. Triangle","keywords":"","body":"120. Triangle\nproblem description\nGiven a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.\nFor example, given the following triangle\n[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]\n\nThe minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).\nNote:\nBonus point if you are able to do this using only O(n) extra space, where n is the total number of rows in the triangle.\nalgorithm thought\n典型的动态规划问题，从底部出发向上遍历。每次选择两个子节点中最小的那一个，并且将它加到自己当前值上。重复操作，知道到根节点。\ncode\nclass Solution {\npublic:\n    int minimumTotal(vector>& triangle) {\n        for(int i=triangle.size()-2;i>=0;--i){\n            for(int j=0;j\nalgorithm analysis\n复杂度时间和之前求三角形问题一样，都是O(n²)\n"},"121.-Best-Time-to-Buy-and-Sell-Stock.html":{"url":"121.-Best-Time-to-Buy-and-Sell-Stock.html","title":"121. Best Time to Buy and Sell Stock","keywords":"","body":"121. Best Time to Buy and Sell Stock\nproblem description\nSay you have an array for which the ith element is the price of a given stock on day i.\nIf you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.\nNote that you cannot sell a stock before you buy one.\nExample 1:\nInput: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.\n\nExample 2:\nInput: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n\nalgorithm thought\n只能买一次商品，一次交易。那么我们从第一天开始买商品，第一天必须买，因为只有一次机会。到了第二天的时候，如果第二天比第一天贵，我们就得到利润。如果第二天比第一天便宜，那我们就第二天再买。这里转化成代码的意思就是，我们遍历数组的过程，每次都记录最小值，当做我们购买的价格，每次都用当前值减去最小值，就是我们的利润。\ncode\nclass Solution {\npublic:\n    int maxProfit(vector& prices) {\n        int res=0;\n        int miprice=INT_MAX;\n        for(auto price:prices){\n            miprice=min(miprice,price);\n            res=max(res,price-miprice);\n        }\n        return res;\n    }\n};\n\nalgorithm analysis\n一次遍历就可以得到答案，时间复杂度O(n)\n"},"122.-Best-Time-to-Buy-and-Sell-Stock-II.html":{"url":"122.-Best-Time-to-Buy-and-Sell-Stock-II.html","title":"122. Best Time to Buy and Sell Stock II","keywords":"","body":"122. Best Time to Buy and Sell Stock II\nproblem description\nSay you have an array for which the ith element is the price of a given stock on day i.\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).\nNote: You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).\nExample 1:\nInput: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\n\nExample 2:\nInput: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\n\nExample 3:\nInput: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n\nalgorithm thought\n可以借助之前只能买一次的思想，只是这里是能买很多次。只要有利润，我们都加上。\n首先对于下一天价格比今天低的情况，这时候我们肯定要下一天买而不是这一天高价买。也就是把买进的价格改成下一天的。\n如果下一天的价格比今天高，我们直接把利润加上。但是如果之后价格持续走高，我们先不加利润，一直往后看，直到最高的价格，我们用最高的价格减去最低的价格，这是利润增益。\n分析可以知道，价格走向只有上面两种，要不是一直递增，要不就是下降。这样就可以归纳成一般情况，写出代码.注意写成一般情况下时，要注意最后的状态，这里最后push一个INT_MIN，就能处理所有情况\ncode\nclass Solution {\npublic:\n    int maxProfit(vector& prices) {\n        int res=0;\n        prices.push_back(INT_MIN);\n        int base_index;\n        for(int i=0;i\nalgorithm analysis\n也是一次遍历数组，时间复杂度O(n)\n"},"123.-Best-Time-to-Buy-and-Sell-Stock-III.html":{"url":"123.-Best-Time-to-Buy-and-Sell-Stock-III.html","title":"123. Best Time to Buy and Sell Stock III","keywords":"","body":"123. Best Time to Buy and Sell Stock III\nproblem description\nSay you have an array for which the ith element is the price of a given stock on day i.\nDesign an algorithm to find the maximum profit. You may complete at most two transactions.\nNote: You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).\nExample 1:\nInput: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.\n\nExample 2:\nInput: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\n\nExample 3:\nInput: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n\nalgorithm thought\n首先知道这里是最多允许买两次，意思是如果一次可以，那就买一个。就像example 2展示的那样，一次交易即可。那么我们还是以第一题（一次交易得到最大值），为基础解此题。\n在一次交易的基础上，在第一次交易的结果上，我们减去当前价格，也就是减去第二次购买的成本。每次遍历都计算此值，得到最大值，也就是第二次购买的最便宜的时候。\n然后在上面得到第二次最低成本的情况下，得到第二次的最高利润，每遍历到一个数都记录。\n最后这里需要仔细想清楚这里的思想以及代码里是如何进行的。不然很难理解，我个人也是第三次做这个题了，也都需要仔细回味\ncode\nclass Solution {\npublic:\n    int maxProfit(vector& prices) {\n        int b1=INT_MIN,b2=INT_MIN,s1=0,s2=0;\n            for(auto p:prices){\n             b1=max(b1,-p);\n             s1=max(s1,b1+p);\n             b2=max(b2,s1-p);\n             s2=max(s2,b2+p);\n        }\n        return s2;\n    }\n};\n\nalgorithm analysis\n一次遍历解决问题，时间复杂度O(n)\n"},"124.-Binary-Tree-Maximum-Path-Sum.html":{"url":"124.-Binary-Tree-Maximum-Path-Sum.html","title":"124. Binary Tree Maximum Path Sum","keywords":"","body":"124. Binary Tree Maximum Path Sum\nproblem description\nGiven a non-empty binary tree, find the maximum path sum.\nFor this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain at least one node and does not need to go through the root.\nExample 1:\nInput: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6\n\nExample 2:\nInput: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42\n\nalgorithm thought\n还是典型的树问题，使用递归解决。\n这里题目有点描述不清楚，这里只有根节点可以连接两个子树，也就是加上子树上计算的结果。但是如果是中间节点，那就只能连接一个子树，选择左子树或者右子树。这里当然是选择最大的一个子树。\ncode\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int res;\n    int maxtosum(TreeNode* root){\n        if(root==NULL)\n            return 0;\n         int l=maxtosum(root->left);\n         int r=maxtosum(root->right);\n        if(lval+l+r>res) res=root->val+l+r;\n        return root->val+=max(l,r);\n    }\n    int maxPathSum(TreeNode* root) {\n        res=INT_MIN;\n        maxtosum(root);\n        return res;\n    }\n};\n\nalgorithm analysis\n对所有的节点遍历一遍得出结果，时间复杂度O(n)\n"},"654.-maximum-binary-tree.html":{"url":"654.-maximum-binary-tree.html","title":"654. Maximum Binary Tree","keywords":"","body":"654. Maximum Binary Tree\nproblem description\nGiven an integer array with no duplicates. A maximum tree building on this array is defined as follow:\n\nThe root is the maximum number in the array.\nThe left subtree is the maximum tree constructed from left part subarray divided by the maximum number.\nThe right subtree is the maximum tree constructed from right part subarray divided by the maximum number.\n\nConstruct the maximum tree by the given array and output the root node of this tree.\nalgorithm thought\n 碰到树以及链表的题，首先观察返回值，如果返回值是一个TreeNode*,也就是一个根节点。那基本上可以用递归解决。这里首先用递归的思想去想是否可行，首先便利数组找到最大值作为根节点。根节点左边的数组变成左子树，右边为右子树。对于左右子树，使用一样的解法就能得到答案。递归思想一相同，之后就问题不大了\ncode\nclass Solution {\npublic:\n    TreeNode* constructMaximumBinaryTree(vector& nums) {\n        return help(nums,0,nums.size()-1);    \n    }\n    TreeNode* help(vector&nums,int left,int right){\n        if(left>right)\n            return NULL;\n        if(left==right){\n            TreeNode* res=new TreeNode(nums[left]);\n            return res;\n        }\n        int ma=left;\n        for(int i=left+1;inums[i]?ma:i;\n        }\n        TreeNode* res=new TreeNode(nums[ma]);\n        res->left=help(nums,left,ma-1);\n        res->right=help(nums,ma+1,right);\n        return res;\n    }\n};\n\nalgorithm analysis\n这个时间复杂度不是很好分析，但是在leetcode中运行时间也很快了，贴个图。\n\n"},"657.-robot-reaturn-to-origin.html":{"url":"657.-robot-reaturn-to-origin.html","title":"657. Robot Return to Origin","keywords":"","body":"657. Robot Return to Origin\nproblem description\nThere is a robot starting at position (0, 0), the origin, on a 2D plane. Given a sequence of its moves, judge if this robot ends up at (0, 0) after it completes its moves.\nThe move sequence is represented by a string, and the character moves[i] represents its ith move. Valid moves are R (right), L (left), U (up), and D (down). If the robot returns to the origin after it finishes all of its moves, return true. Otherwise, return false.\nNote: The way that the robot is \"facing\" is irrelevant. \"R\" will always make the robot move to the right once, \"L\" will always make it move left, etc. Also, assume that the magnitude of the robot's movement is the same for each move.\nalgorithm thought\n机器人从原点出发，最后判断能否到达原点，一共4个操作，将所有的操作统计起来，最后比较上下是否一样，左右是否一样即可\ncode\nclass Solution {\npublic:\n    bool judgeCircle(string moves) {\n        stack lr;\n        stack ud;\n        for(auto ch:moves){\n            if(ch=='L'){\n                if(lr.empty()||lr.top()=='L'){\n                    lr.push(ch);\n                }else\n                    lr.pop();\n            }\n            if(ch=='R'){\n                if(lr.empty()||lr.top()=='R'){\n                    lr.push(ch);\n                }else\n                    lr.pop();\n            }\n            if(ch=='U'){\n                if(ud.empty()||ud.top()=='U'){\n                    ud.push(ch);\n                }else\n                    ud.pop();\n            }\n            if(ch=='D'){\n                if(ud.empty()||ud.top()=='D'){\n                    ud.push(ch);\n                }else\n                    ud.pop();\n            }\n        }\n        return lr.empty()&&ud.empty();\n    }\n};\n\nalgorithm analysis\n一个循环遍历数组，时间是O(n)，最开始拿到题目的时候直接类比成了括号匹配，就动手做了。其实括号匹配比这个多了一点位置上的限制，而这里只要统计数字即可。直接定义4个变量会更快，直接用4个寄存器存count，最后比较。\n"},"659.-split-array-into-consecutive-subsequences.html":{"url":"659.-split-array-into-consecutive-subsequences.html","title":"659. Split Array into Consecutive Subsequences","keywords":"","body":"659. Split Array into Consecutive Subsequences\nproblem desctiption\nGiven an array nums sorted in ascending order, return true if and only if you can split it into 1 or more subsequences such that each subsequence consists of consecutive integers and has length at least 3.\nExample 1:\nInput: [1,2,3,3,4,5]\nOutput: True\nExplanation:\nYou can split them into two consecutive subsequences : \n1, 2, 3\n3, 4, 5\n\nExample 2:\nInput: [1,2,3,3,4,4,5,5]\nOutput: True\nExplanation:\nYou can split them into two consecutive subsequences : \n1, 2, 3, 4, 5\n3, 4, 5\n\nExample 3:\nInput: [1,2,3,4,4,5]\nOutput: False\n\nConstraints:\n\n1 \n\nalgorithm description\n第一次想这题，没看清是连续的数字。导致分析了很久也没结果。知道是连续的数字之后，就很好办了。可以直接用hashmap保存数字出现的次数，以及保存3个以上链表的末尾节点，每次访问到数字，首先查看链表后面末尾节点是否有值，有的话直接加一。如果没有，就将这个数字后面两个数字和这个组合起来，然后加入到将这个链表末尾节点加入hashmap，如果不能进行上面两个操作，说明这里有问题\ncode\nclass Solution {\npublic:\n    bool isPossible(vector& nums) {\n        unordered_map cut,tail;\n        for(auto num:nums)\n            cut[num]++;\n        for(auto n:nums){\n            if(cut[n]\nalgorithm analysis\ntwo-pass解决问题，时间复杂度O(n).hashmap插入操作时间也是O(1)。\n"},"1223.-dice-roll-simulation.html":{"url":"1223.-dice-roll-simulation.html","title":"1223. Dice Roll Simulation","summary":"2019年10月13号，LeetCode contest question3","keywords":"","body":"1223. Dice Roll Simulation\nproblem description\nA die simulator generates a random number from 1 to 6 for each roll. You introduced a constraint to the generator such that it cannot roll the number i more than rollMax[i](1-indexed) consecutive times. \nGiven an array of integers rollMax and an integer n, return the number of distinct sequences that can be obtained with exact n rolls.\nTwo sequences are considered different if at least one element differs from each other. Since the answer may be too large, return it modulo 10^9 + 7.\nExample 1:\nInput: n = 2, rollMax = [1,1,2,2,2,3]\nOutput: 34\nExplanation: There will be 2 rolls of die, if there are no constraints on the die, there are 6 * 6 = 36 possible combinations. In this case, looking at rollMax array, the numbers 1 and 2 appear at most once consecutively, therefore sequences (1,1) and (2,2) cannot occur, so the final answer is 36-2 = 34.\n\nExample 2:\nInput: n = 2, rollMax = [1,1,1,1,1,1]\nOutput: 30\n\nExample 3:\nInput: n = 3, rollMax = [1,1,1,2,2,3]\nOutput: 181\n\nConstraints:\n\n1 \nrollMax.length == 6\n1 \n\nalgorithm thought\n第三次参加比赛了，当时又止步在第三题。第三题当时其实想到用记忆化保存的方法解决问题，但是最后没有想通状态转移的过程。于是之后参考了discuss里大神的逻辑，然后自己写出代码\n类似一个安放数字问题，也很像回溯法构建一个排列的问题。只是回溯法需要列举出所有的情况，但是这里只需要返回最后的数字。所以就可以不用回溯的过程。这里需要多考虑的一点是，存在一个限制数组，rollMax。这里就需要记录当前数字之前出现了多少次，如果超过了限制，那么这次安放就不安放这个数字。这里的算法中，会出现很多重复计算的过程，很多前面的数字最后会汇聚到一个节点，如果不用记忆化方法保存之前的数据，肯定会Time Limit Error。所以这里用数组保存之前的结果。整个动态规划的状态有3个维度，一是前面出现的次数，二是前一个数字，三是当前防止的轮数。\n所以，所有的结果可以看成是下面6项相加\nf(1,1,1),f(1,2,1),f(1,3,1),f(1,4,1),f(1,5,1),f(1,6,1).\ncode\nclass Solution {\npublic:\n    long long cache[5002][7][16];\n    long long mod=1000000000+7;\n    vector rollMax;\n    int dieSimulator(int n, vector& rollMax) {\n        memset(cache,-1,sizeof(cache));\n        this->rollMax=rollMax;\n        return dp(0,0,0,n);\n    }\n    long long dp(int per,int number,int pos,int n){\n        if(pos==n)\n            return 1;\n        if(cache[pos][number][per]!=-1)\n            return cache[pos][number][per];\n        long long res=0;\n        for(int i=1;i\nalgorithm analysis\n如果不加记忆模式，时间复杂度就跟回溯法是一样的，但是加了记忆模式，算法快了很多，时间复杂度这里不好分析\n"}}}